{
  "version": 3,
  "sources": ["src/app/pages/collections/phantasia/pages/phantasia2/phantasia2-debug.ts", "src/app/pages/collections/phantasia/pages/phantasia2/phantasia2.ts", "src/app/pages/collections/phantasia/pages/phantasia2/phantasia2.html"],
  "sourcesContent": ["/**\n * Phantasia2 Debug System\n * Enhanced comprehensive logging and analysis for scrollbar overflow issues\n */\nexport class Phantasia2Debug {\n  private debugLog: string[] = [];\n  private elementMonitoringInterval: any = null;\n  private document: Document;\n  private domReadyPromise: Promise<void>;\n  private isLoadingScreenPresent: boolean = false;\n  private loadingScreenPhase: 'loading' | 'transition' | 'complete' | 'not-found' = 'not-found';\n\n  constructor(document: Document) {\n    this.document = document;\n    this.domReadyPromise = this.waitForDOMReady();\n  }\n\n  /**\n   * Wait for DOM to be fully ready including dynamic content\n   */\n  private waitForDOMReady(): Promise<void> {\n    return new Promise((resolve) => {\n      if (this.document.readyState === 'complete') {\n        setTimeout(resolve, 2000);\n      } else {\n        const checkReady = () => {\n          if (this.document.readyState === 'complete') {\n            setTimeout(resolve, 2000);\n          } else {\n            setTimeout(checkReady, 100);\n          }\n        };\n        checkReady();\n      }\n    });\n  }\n\n  /**\n   * Start comprehensive debug monitoring with DOM ready detection\n   */\n  async startDebugMonitoring(): Promise<void> {\n    this.logDebugInfo('=== PHANTASIA2 ENHANCED DEBUG MONITORING STARTED ===');\n    this.logDebugInfo(`Browser: ${navigator.userAgent}`);\n    this.logDebugInfo(`Screen resolution: ${screen.width}x${screen.height}`);\n    this.logDebugInfo(`Device pixel ratio: ${devicePixelRatio}`);\n    this.logDebugInfo(`DOM ready state: ${this.document.readyState}`);\n    \n    // Wait for DOM to be fully ready\n    this.logDebugInfo('Waiting for DOM to be fully loaded...');\n    await this.domReadyPromise;\n    this.logDebugInfo('‚úÖ DOM is fully loaded, starting comprehensive analysis');\n    \n    // Detect loading screen phase\n    this.detectLoadingScreenPhase();\n    \n    // Initial comprehensive analysis\n    setTimeout(() => {\n      this.performComprehensiveAnalysis();\n    }, 500);\n    \n    // Advanced monitoring phases\n    this.setupAdvancedMonitoring();\n  }\n\n  /**\n   * Log debug information with timestamp\n   */\n  logDebugInfo(message: string): void {\n    const timestamp = new Date().toISOString();\n    const logEntry = `[${timestamp}] ${message}`;\n    this.debugLog.push(logEntry);\n    console.log(`[PHANTASIA2-DEBUG] ${logEntry}`);\n  }\n\n  /**\n   * Detect current loading screen phase\n   */\n  private detectLoadingScreenPhase(): void {\n    this.logDebugInfo('--- LOADING SCREEN PHASE DETECTION ---');\n    \n    const loadingContainer = this.document.querySelector('.loader-container') as HTMLElement;\n    if (loadingContainer) {\n      this.isLoadingScreenPresent = true;\n      \n      const style = window.getComputedStyle(loadingContainer);\n      const opacity = parseFloat(style.opacity);\n      const display = style.display;\n      const visibility = style.visibility;\n      \n      this.logDebugInfo(`Loading container found: opacity=${opacity}, display=${display}, visibility=${visibility}`);\n      \n      if (opacity > 0.9 && display !== 'none' && visibility !== 'hidden') {\n        this.loadingScreenPhase = 'loading';\n        this.logDebugInfo('üé¨ LOADING SCREEN PHASE: Active loading');\n      } else if (opacity > 0.1 && opacity < 0.9) {\n        this.loadingScreenPhase = 'transition';\n        this.logDebugInfo('üîÑ LOADING SCREEN PHASE: Transitioning out');\n      } else {\n        this.loadingScreenPhase = 'complete';\n        this.logDebugInfo('‚úÖ LOADING SCREEN PHASE: Hidden/Complete');\n      }\n    } else {\n      this.isLoadingScreenPresent = false;\n      this.loadingScreenPhase = 'not-found';\n      this.logDebugInfo('‚ùå Loading screen container not found');\n    }\n  }\n\n  /**\n   * Perform comprehensive analysis based on current state\n   */\n  private performComprehensiveAnalysis(): void {\n    this.logDebugInfo('=== COMPREHENSIVE ANALYSIS STARTING ===');\n    \n    // Base analysis\n    this.analyzeViewportAndDocument();\n    this.logScrollbarState();\n    \n    // Phase-specific analysis\n    if (this.isLoadingScreenPresent) {\n      this.analyzeLoadingScreenComponents();\n    }\n    \n    // Main page analysis\n    this.analyzeMainPageElements();\n    \n    // Enhanced overflow detection\n    this.analyzeAllOverflowingElements();\n    \n    // Advanced culprit detection\n    this.detectPotentialCulprits();\n  }\n\n  /**\n   * Setup advanced monitoring with multiple phases\n   */\n  private setupAdvancedMonitoring(): void {\n    this.logDebugInfo('Setting up advanced monitoring...');\n    \n    // Continuous monitoring every 3 seconds\n    this.elementMonitoringInterval = setInterval(() => {\n      this.monitorElementChanges();\n      this.detectLoadingScreenPhase(); // Re-check phase\n    }, 3000);\n    \n    // Monitor for loading screen transitions\n    this.setupLoadingScreenTransitionMonitoring();\n    \n    // Enhanced resize monitoring\n    window.addEventListener('resize', () => {\n      this.logDebugInfo('üîÑ Window resized - performing full re-analysis');\n      setTimeout(() => this.performComprehensiveAnalysis(), 100);\n    });\n    \n    // Enhanced scroll monitoring with throttling\n    let scrollTimeout: any = null;\n    window.addEventListener('scroll', () => {\n      if (scrollTimeout) clearTimeout(scrollTimeout);\n      scrollTimeout = setTimeout(() => {\n        this.logScrollState();\n      }, 100);\n    }, { passive: true });\n  }\n\n  /**\n   * Monitor loading screen transitions for overflow during animation\n   */\n  private setupLoadingScreenTransitionMonitoring(): void {\n    const loadingContainer = this.document.querySelector('.loader-container') as HTMLElement;\n    if (!loadingContainer) return;\n    \n    const observer = new MutationObserver(() => {\n      this.detectLoadingScreenPhase();\n      if (this.loadingScreenPhase === 'transition') {\n        this.logDebugInfo('üîÑ Loading screen transition detected - analyzing overflow during animation');\n        setTimeout(() => this.analyzeLoadingScreenDuringTransition(), 100);\n      }\n    });\n    \n    observer.observe(loadingContainer, {\n      attributes: true,\n      attributeFilter: ['style', 'class'],\n      subtree: true\n    });\n  }\n\n  /**\n   * Analyze loading screen during transition animations\n   */\n  private analyzeLoadingScreenDuringTransition(): void {\n    this.logDebugInfo('--- LOADING SCREEN TRANSITION ANALYSIS ---');\n    const loadingContainer = this.document.querySelector('.loader-container') as HTMLElement;\n    if (!loadingContainer) return;\n    \n    // Sample multiple times during transition\n    const sampleCount = 5;\n    const sampleInterval = 200;\n    \n    for (let i = 0; i < sampleCount; i++) {\n      setTimeout(() => {\n        this.logDebugInfo(`Transition Sample ${i + 1}/${sampleCount}:`);\n        this.analyzeAnimationBounds(loadingContainer);\n        this.checkForOverflowDuringTransition();\n      }, i * sampleInterval);\n    }\n  }\n\n  /**\n   * Check for overflow specifically during transitions\n   */\n  private checkForOverflowDuringTransition(): void {\n    const overflowAmount = this.document.documentElement.scrollWidth - window.innerWidth;\n    if (overflowAmount > 0) {\n      this.logDebugInfo(`üö® TRANSITION OVERFLOW: ${overflowAmount}px during loading screen transition`);\n      \n      // Identify culprits during transition\n      const animatedElements = Array.from(this.document.querySelectorAll('.loader-container *')).filter(el => {\n        const style = window.getComputedStyle(el as HTMLElement);\n        return style.animation !== 'none' || style.transform !== 'none';\n      });\n      \n      animatedElements.forEach((el, index) => {\n        const rect = el.getBoundingClientRect();\n        if (rect.right > window.innerWidth) {\n          this.logDebugInfo(`  Transition culprit ${index}: ${el.tagName}.${(el as HTMLElement).className} extends ${(rect.right - window.innerWidth).toFixed(2)}px beyond viewport`);\n        }\n      });\n    }\n  }\n\n  /**\n   * Analyze viewport and document fundamentals\n   */\n  private analyzeViewportAndDocument(): void {\n    this.logDebugInfo('--- VIEWPORT & DOCUMENT ANALYSIS ---');\n    \n    const docElement = this.document.documentElement;\n    const bodyElement = this.document.body;\n    \n    this.logDebugInfo(`Document scrollWidth: ${docElement.scrollWidth}, clientWidth: ${docElement.clientWidth}`);\n    this.logDebugInfo(`Body scrollWidth: ${bodyElement.scrollWidth}, clientWidth: ${bodyElement.clientWidth}`);\n    this.logDebugInfo(`Viewport dimensions: ${window.innerWidth}x${window.innerHeight}`);\n    this.logDebugInfo(`Screen dimensions: ${screen.width}x${screen.height}`);\n    this.logDebugInfo(`Device pixel ratio: ${window.devicePixelRatio}`);\n    \n    if (docElement.scrollWidth > docElement.clientWidth) {\n      this.logDebugInfo('‚ö†Ô∏è DOCUMENT HORIZONTAL OVERFLOW DETECTED!');\n    }\n    \n    if (bodyElement.scrollWidth > bodyElement.clientWidth) {\n      this.logDebugInfo('‚ö†Ô∏è BODY HORIZONTAL OVERFLOW DETECTED!');\n    }\n  }\n\n  /**\n   * Analyze main page elements\n   */\n  private analyzeMainPageElements(): void {\n    this.logDebugInfo('--- MAIN PAGE ELEMENTS ANALYSIS ---');\n    \n    const albumPage = this.document.querySelector('.phantasia-album-page') as HTMLElement;\n    if (albumPage) {\n      this.analyzeElementOverflow(albumPage, 'PHANTASIA-ALBUM-PAGE');\n    }\n    \n    const mainElements = [\n      '.video-background',\n      '.video-title-section',\n      '.album-presentation',\n      '.cd-showcase',\n      'app-music-player',\n      'app-dynamic-artist-cards',\n      '.phantasia-footer'\n    ];\n    \n    mainElements.forEach(selector => {\n      const element = this.document.querySelector(selector) as HTMLElement;\n      if (element) {\n        this.analyzeElementOverflow(element, selector);\n      } else {\n        this.logDebugInfo(`Main element not found: ${selector}`);\n      }\n    });\n  }\n\n  /**\n   * Deep analysis of loading screen components causing overflow\n   */\n  private analyzeLoadingScreenComponents(): void {\n    this.logDebugInfo('=== LOADING SCREEN OVERFLOW ANALYSIS ===');\n    \n    const loadingContainer = this.document.querySelector('.loader-container') as HTMLElement;\n    if (loadingContainer) {\n      this.analyzeElementOverflow(loadingContainer, 'LOADER-CONTAINER');\n      \n      // Analyze all loading screen child components\n      const loadingChildren = [\n        '.magical-circle',\n        '.magical-circle.outer',\n        '.rune-effects',\n        '.decorative-elements',\n        '.corner-line',\n        '.mid-line',\n        '.light-beams',\n        '.beam',\n        '.rune-circle',\n        '.rune'\n      ];\n      \n      loadingChildren.forEach(selector => {\n        const elements = loadingContainer.querySelectorAll(selector);\n        if (elements.length > 0) {\n          this.logDebugInfo(`Found ${elements.length} elements matching ${selector}:`);\n          elements.forEach((el, index) => {\n            this.analyzeElementOverflow(el as HTMLElement, `${selector}-${index}`);\n          });\n        } else {\n          this.logDebugInfo(`No elements found for selector: ${selector}`);\n        }\n      });\n      \n      // Check specific problematic animations\n      this.analyzeAnimationBounds(loadingContainer);\n    } else {\n      this.logDebugInfo('‚ùå Loading container not found - may have been removed');\n    }\n  }\n\n  /**\n   * Analyze animation bounds for elements with transforms\n   */\n  private analyzeAnimationBounds(container: HTMLElement): void {\n    this.logDebugInfo('--- ANIMATION BOUNDS ANALYSIS ---');\n    \n    const animatedElements = Array.from(container.querySelectorAll('*')).filter(el => {\n      const style = window.getComputedStyle(el as HTMLElement);\n      return style.animation !== 'none' || style.transform !== 'none';\n    });\n    \n    this.logDebugInfo(`Found ${animatedElements.length} animated elements in loading screen:`);\n    \n    animatedElements.forEach((el, index) => {\n      const element = el as HTMLElement;\n      const style = window.getComputedStyle(element);\n      const rect = element.getBoundingClientRect();\n      \n      this.logDebugInfo(`Animated Element ${index + 1}: ${element.tagName}.${element.className}`);\n      this.logDebugInfo(`  Rect: ${rect.left.toFixed(2)}, ${rect.top.toFixed(2)}, ${rect.width.toFixed(2)}x${rect.height.toFixed(2)}`);\n      this.logDebugInfo(`  Right edge: ${rect.right.toFixed(2)}px (viewport: ${window.innerWidth}px)`);\n      this.logDebugInfo(`  Bottom edge: ${rect.bottom.toFixed(2)}px (viewport: ${window.innerHeight}px)`);\n      this.logDebugInfo(`  Animation: ${style.animation}`);\n      this.logDebugInfo(`  Transform: ${style.transform}`);\n      this.logDebugInfo(`  Position: ${style.position}`);\n      this.logDebugInfo(`  Z-index: ${style.zIndex}`);\n      \n      if (rect.right > window.innerWidth) {\n        this.logDebugInfo(`  üö® HORIZONTAL OVERFLOW: ${(rect.right - window.innerWidth).toFixed(2)}px beyond viewport`);\n      }\n      \n      if (rect.bottom > window.innerHeight) {\n        this.logDebugInfo(`  üö® VERTICAL OVERFLOW: ${(rect.bottom - window.innerHeight).toFixed(2)}px beyond viewport`);\n      }\n    });\n  }\n\n  /**\n   * Enhanced analysis of all overflowing elements\n   */\n  private analyzeAllOverflowingElements(): void {\n    this.logDebugInfo('--- ENHANCED OVERFLOW ELEMENT DETECTION ---');\n    \n    // Find all elements that might cause horizontal overflow\n    const allElements = Array.from(this.document.querySelectorAll('*')) as HTMLElement[];\n    const overflowElements = allElements.filter(el => {\n      const rect = el.getBoundingClientRect();\n      return rect.width > window.innerWidth || rect.right > window.innerWidth;\n    });\n    \n    this.logDebugInfo(`Found ${overflowElements.length} elements causing potential horizontal overflow:`);\n    overflowElements.forEach((el, index) => {\n      const rect = el.getBoundingClientRect();\n      const computedStyle = window.getComputedStyle(el);\n      \n      this.logDebugInfo(`${index + 1}. ${el.tagName}.${el.className || 'no-class'}`);\n      this.logDebugInfo(`   Dimensions: ${rect.width.toFixed(2)}x${rect.height.toFixed(2)}`);\n      this.logDebugInfo(`   Position: left=${rect.left.toFixed(2)}, right=${rect.right.toFixed(2)}`);\n      this.logDebugInfo(`   Overflow amount: ${(rect.right - window.innerWidth).toFixed(2)}px`);\n      this.logDebugInfo(`   CSS Position: ${computedStyle.position}`);\n      this.logDebugInfo(`   CSS Transform: ${computedStyle.transform}`);\n      this.logDebugInfo(`   CSS Overflow-X: ${computedStyle.overflowX}`);\n      this.logDebugInfo(`   CSS Width: ${computedStyle.width}`);\n      this.logDebugInfo(`   CSS Max-Width: ${computedStyle.maxWidth}`);\n      this.logDebugInfo(`   Parent: ${el.parentElement?.tagName}.${el.parentElement?.className || 'no-class'}`);\n      this.logDebugInfo(`   ---`);\n    });\n    \n    // Also check for elements that might be causing the overflow indirectly\n    this.analyzeIndirectOverflowCauses();\n  }\n\n  /**\n   * Analyze indirect causes of overflow\n   */\n  private analyzeIndirectOverflowCauses(): void {\n    this.logDebugInfo('--- INDIRECT OVERFLOW CAUSE ANALYSIS ---');\n    \n    // Check for elements with large margins or padding that push content\n    const elementsWithSpacing = Array.from(this.document.querySelectorAll('*')).filter(el => {\n      const style = window.getComputedStyle(el as HTMLElement);\n      const marginLeft = parseFloat(style.marginLeft);\n      const marginRight = parseFloat(style.marginRight);\n      const paddingLeft = parseFloat(style.paddingLeft);\n      const paddingRight = parseFloat(style.paddingRight);\n      \n      return Math.abs(marginLeft) > 50 || Math.abs(marginRight) > 50 || \n             paddingLeft > 50 || paddingRight > 50;\n    });\n    \n    if (elementsWithSpacing.length > 0) {\n      this.logDebugInfo(`Found ${elementsWithSpacing.length} elements with large spacing:`);\n      elementsWithSpacing.forEach((el, index) => {\n        const element = el as HTMLElement;\n        const style = window.getComputedStyle(element);\n        this.logDebugInfo(`${index + 1}. ${element.tagName}.${element.className || 'no-class'}`);\n        this.logDebugInfo(`   Margin: ${style.marginLeft} ${style.marginTop} ${style.marginRight} ${style.marginBottom}`);\n        this.logDebugInfo(`   Padding: ${style.paddingLeft} ${style.paddingTop} ${style.paddingRight} ${style.paddingBottom}`);\n      });\n    }\n    \n    // Check viewport meta tag\n    const viewportMeta = this.document.querySelector('meta[name=\"viewport\"]') as HTMLMetaElement;\n    if (viewportMeta) {\n      this.logDebugInfo(`Viewport meta tag content: ${viewportMeta.content}`);\n    } else {\n      this.logDebugInfo('‚ö†Ô∏è No viewport meta tag found');\n    }\n  }\n\n  /**\n   * Analyze specific element for overflow\n   */\n  private analyzeElementOverflow(element: HTMLElement, name: string): void {\n    const rect = element.getBoundingClientRect();\n    const computedStyle = window.getComputedStyle(element);\n    \n    this.logDebugInfo(`--- ${name.toUpperCase()} ANALYSIS ---`);\n    this.logDebugInfo(`  Dimensions: ${rect.width}x${rect.height}`);\n    this.logDebugInfo(`  Position: left=${rect.left}, right=${rect.right}, top=${rect.top}, bottom=${rect.bottom}`);\n    this.logDebugInfo(`  ScrollDimensions: scrollWidth=${element.scrollWidth}, scrollHeight=${element.scrollHeight}`);\n    this.logDebugInfo(`  ClientDimensions: clientWidth=${element.clientWidth}, clientHeight=${element.clientHeight}`);\n    this.logDebugInfo(`  CSS: position=${computedStyle.position}, overflow-x=${computedStyle.overflowX}, overflow-y=${computedStyle.overflowY}`);\n    this.logDebugInfo(`  CSS: width=${computedStyle.width}, max-width=${computedStyle.maxWidth}, min-width=${computedStyle.minWidth}`);\n    this.logDebugInfo(`  CSS: transform=${computedStyle.transform}, z-index=${computedStyle.zIndex}`);\n    \n    if (element.scrollWidth > element.clientWidth) {\n      this.logDebugInfo(`  ‚ö†Ô∏è HORIZONTAL OVERFLOW: scrollWidth (${element.scrollWidth}) > clientWidth (${element.clientWidth})`);\n    }\n    \n    if (rect.right > window.innerWidth) {\n      this.logDebugInfo(`  ‚ö†Ô∏è ELEMENT EXTENDS BEYOND VIEWPORT: right (${rect.right}) > viewport (${window.innerWidth})`);\n    }\n  }\n\n  /**\n   * Log current scrollbar state\n   */\n  private logScrollbarState(): void {\n    this.logDebugInfo('--- SCROLLBAR STATE ---');\n    this.logDebugInfo(`Window scroll: X=${window.scrollX}, Y=${window.scrollY}`);\n    this.logDebugInfo(`Document scroll dimensions: ${this.document.documentElement.scrollWidth}x${this.document.documentElement.scrollHeight}`);\n    this.logDebugInfo(`Viewport dimensions: ${window.innerWidth}x${window.innerHeight}`);\n    \n    // Check if horizontal scrollbar is present\n    if (this.document.documentElement.scrollWidth > window.innerWidth) {\n      this.logDebugInfo('üî• HORIZONTAL SCROLLBAR IS PRESENT!');\n    } else {\n      this.logDebugInfo('‚úÖ No horizontal scrollbar detected');\n    }\n  }\n\n  /**\n   * Log scroll state changes\n   */\n  private logScrollState(): void {\n    if (window.scrollX > 0) {\n      this.logDebugInfo(`üö® HORIZONTAL SCROLL DETECTED: scrollX=${window.scrollX}`);\n    }\n  }\n\n  /**\n   * Detect potential culprits causing overflow\n   */\n  private detectPotentialCulprits(): void {\n    this.logDebugInfo('--- DETECTING POTENTIAL CULPRITS ---');\n    \n    // Check music player specifically (identified as culprit)\n    const musicPlayer = this.document.querySelector('app-music-player') as HTMLElement;\n    if (musicPlayer) {\n      this.logDebugInfo('Music Player Analysis:');\n      const playerChildren = Array.from(musicPlayer.querySelectorAll('*')) as HTMLElement[];\n      playerChildren.forEach((child, index) => {\n        const rect = child.getBoundingClientRect();\n        if (rect.width > window.innerWidth || rect.right > window.innerWidth) {\n          const computedStyle = window.getComputedStyle(child);\n          this.logDebugInfo(`  Culprit ${index}: ${child.tagName}.${child.className} - width: ${rect.width}px, right: ${rect.right}px, transform: ${computedStyle.transform}`);\n        }\n      });\n    }\n    \n    // Check for elements with large transforms\n    const transformElements = Array.from(this.document.querySelectorAll('*')).filter(el => {\n      const style = window.getComputedStyle(el as HTMLElement);\n      return style.transform !== 'none' && style.transform !== 'matrix(1, 0, 0, 1, 0, 0)';\n    });\n    \n    this.logDebugInfo(`Found ${transformElements.length} elements with transforms`);\n    transformElements.forEach((el, index) => {\n      const computedStyle = window.getComputedStyle(el as HTMLElement);\n      const rect = el.getBoundingClientRect();\n      this.logDebugInfo(`  Transform ${index}: ${el.tagName}.${(el as HTMLElement).className} - transform: ${computedStyle.transform}, bounds: ${rect.right}px`);\n    });\n  }\n\n  /**\n   * Monitor element changes continuously\n   */\n  private monitorElementChanges(): void {\n    // Quick check for new horizontal overflow\n    if (this.document.documentElement.scrollWidth > window.innerWidth) {\n      this.logDebugInfo(`üî• CONTINUOUS MONITORING: Horizontal overflow still present (${this.document.documentElement.scrollWidth} > ${window.innerWidth})`);\n      \n      // Check if it's gotten worse\n      const overflowAmount = this.document.documentElement.scrollWidth - window.innerWidth;\n      this.logDebugInfo(`Overflow amount: ${overflowAmount}px`);\n    }\n  }\n\n  /**\n   * Save debug log to file for user analysis\n   */\n  saveDebugLogToFile(): void {\n    const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n    const filename = `phantasia2-debug-enhanced-${timestamp}.log`;\n    \n    // Add final summary to log\n    this.logDebugInfo('=== ENHANCED DEBUG SUMMARY ===');\n    this.logDebugInfo(`Total log entries: ${this.debugLog.length}`);\n    this.logDebugInfo(`Document final scrollWidth: ${this.document.documentElement.scrollWidth}`);\n    this.logDebugInfo(`Viewport final width: ${window.innerWidth}`);\n    this.logDebugInfo(`Final overflow amount: ${this.document.documentElement.scrollWidth - window.innerWidth}px`);\n    this.logDebugInfo(`Loading screen phase: ${this.loadingScreenPhase}`);\n    this.logDebugInfo(`Loading screen present: ${this.isLoadingScreenPresent}`);\n    \n    // Create downloadable log file\n    const logContent = this.debugLog.join('\\n');\n    const blob = new Blob([logContent], { type: 'text/plain' });\n    const url = URL.createObjectURL(blob);\n    \n    const link = this.document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    link.style.display = 'none';\n    this.document.body.appendChild(link);\n    link.click();\n    this.document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n    \n    this.logDebugInfo(`Enhanced debug log saved to ${filename}`);\n    console.log(`[PHANTASIA2-DEBUG] Enhanced debug log saved to Downloads/${filename}`);\n  }\n\n  /**\n   * Cleanup debug monitoring\n   */\n  cleanup(): void {\n    if (this.elementMonitoringInterval) {\n      clearInterval(this.elementMonitoringInterval);\n      this.elementMonitoringInterval = null;\n    }\n  }\n}", "import { Component, OnInit, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, Inject, ViewChild, ElementRef, signal, HostBinding } from '@angular/core';\nimport { CommonModule, DOCUMENT } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MusicPlayerComponent } from '../../tools/music-player/music-player.component';\nimport { SiteHeaderComponent } from '../../../../../shared/components/site-header/site-header.component';\nimport { LoadingScreenComponent } from '../../../../../components/loading-screen/loading-screen.component';\nimport { DynamicArtistCardsComponent } from '../../../../../components/dynamic-artist-cards/dynamic-artist-cards.component';\nimport { SpecialMentionsComponent } from '../../../../../components/special-mentions/special-mentions.component';\nimport { AudioService, AudioState } from '../../../../../pages/collections/phantasia/services/audio.service';\nimport { DynamicArtistService } from '../../services/dynamic-artist.service';\nimport { Phantasia2Debug } from './phantasia2-debug';\n\n/**\n * Scroll indicator animation states\n */\nexport type ScrollIndicatorState = 'visible' | 'hidden';\n\n/**\n * Phantasia Project II component that shows the professional album presentation\n * This is the entry point for Phantasia Project II album showcase\n * Features video background, music player integration, professional white-to-black theme,\n * smooth scroll navigation, and animated scroll indicators\n */\n@Component({\n  selector: 'app-phantasia2',\n  standalone: true,\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatChipsModule,\n    MusicPlayerComponent,\n    SiteHeaderComponent,\n    LoadingScreenComponent,\n    DynamicArtistCardsComponent,\n    SpecialMentionsComponent\n  ],\n  templateUrl: './phantasia2.html',\n  styleUrls: ['./phantasia2.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  // Using default ViewEncapsulation.Emulated for proper component isolation\n  animations: [\n    // Scroll indicator animation - only animate opacity to preserve CSS centering\n    trigger('scrollIndicator', [\n      state('visible', style({\n        opacity: 1\n        // REMOVED transform to preserve flexbox centering\n      })),\n\n      state('hidden', style({\n        opacity: 0\n        // REMOVED transform to preserve flexbox centering\n      })),\n\n      transition('hidden => visible', [\n        animate('600ms cubic-bezier(0.4, 0.0, 0.2, 1)')\n      ]),\n\n      transition('visible => hidden', [\n        animate('300ms cubic-bezier(0.4, 0.0, 0.2, 1)')\n      ])\n    ])\n  ]\n})\nexport class Phantasia2Component implements OnInit, OnDestroy {\n  @ViewChild('backgroundVideo', { static: false }) backgroundVideo!: ElementRef<HTMLVideoElement>;\n  @ViewChild('titleVideo', { static: false }) titleVideo!: ElementRef<HTMLVideoElement>;\n  @ViewChild('cdShowcase', { static: false }) cdShowcase!: ElementRef<HTMLElement>;\n\n  // Loading state management\n  isLoading = true;\n  loadingProgress = 0;\n\n  // Video loading and fade control\n  private videoLoaded = false;\n  private videoElement: HTMLVideoElement | null = null;\n  private userHasInteracted = false;\n  private autoplayFailed = false;\n  \n  // Title video control\n  private titleVideoElement: HTMLVideoElement | null = null;\n  private titleAutoplayFailed = false;\n  \n  // Scroll indicator state management\n  scrollIndicatorState: ScrollIndicatorState = 'hidden';\n  showScrollIndicator = signal(true);\n\n  // Two-state scroll system management\n  private scrollState: 'top' | 'content' = 'top';\n  private isAutoScrolling = false;\n  private scrollLocked = false;\n  private scrollThreshold = 50; // Pixels from top to trigger auto-scroll\n  private contentScrollThreshold = 200; // Pixels from cd-showcase to trigger return to top\n\n  // Scroll event management\n  private scrollTimeoutId: number | null = null;\n  private wheelTimeoutId: number | null = null;\n  private lastScrollY = 0;\n  private lastWheelTime = 0;\n  private scrollDirection: 'up' | 'down' | null = null;\n\n  // Touch gesture tracking\n  private touchStartY = 0;\n  private touchEndY = 0;\n\n  // Scroll management and section snapping (DEPRECATED - keeping for compatibility)\n  private isScrollSnapping = false;\n  private lastScrollTime = 0;\n  private scrollSections: HTMLElement[] = [];\n\n  // Debug flag - simplified for production readiness\n  private readonly isDebugMode = false;\n  private debugSystem: Phantasia2Debug | null = null;\n\n  // Host binding for component-specific styling\n  @HostBinding('class.phantasia2-component') componentClass = true;\n  @HostBinding('class.loading-active') get loadingActive() { return this.isLoading; }\n  @HostBinding('class.phantasia-album-page') albumPageClass = true;\n\n  // Current year for footer\n  readonly currentYear = new Date().getFullYear();\n\n  // Artist display mode management\n  artistDisplayMode = signal<'showcase' | 'currently-playing' | 'all'>('showcase');\n\n  constructor(\n    private readonly cdr: ChangeDetectorRef,\n    private readonly router: Router,\n    @Inject(DOCUMENT) private readonly document: Document,\n    private readonly audioService: AudioService,\n    private readonly dynamicArtistService: DynamicArtistService\n  ) {}\n\n  ngOnInit(): void {\n    if (this.isDebugMode) {\n      console.log(`[Phantasia2Component] Current URL: ${this.router.url}`);\n    }\n\n    // CRITICAL FIX: Set project to Phantasia 2 to load correct 20 tracks\n    this.dynamicArtistService.setCurrentProject('phantasia2');\n    if (this.isDebugMode) {\n      console.log(`[Phantasia2Component] Set project to phantasia2 - will load 20 tracks`);\n    }\n\n    // Add phantasia-album-page class to body for global styles\n    if (typeof document !== 'undefined') {\n      document.body.classList.add('phantasia-album-page');\n      if (this.isDebugMode) {\n        console.log(`[Phantasia2Component] Added phantasia-album-page class to body`);\n      }\n    }\n\n    // Set up user interaction detection\n    this.setupUserInteractionDetection();\n\n    // Start loading sequence\n    this.startLoadingSequence();\n\n    // Show scroll indicator after loading\n    setTimeout(() => {\n      this.scrollIndicatorState = 'visible';\n      this.cdr.markForCheck();\n    }, 2000);\n\n    // Set up smooth scroll behavior\n    this.setupSmoothScrolling();\n\n    // Initialize two-state scroll system\n    this.initializeTwoStateScroll();\n\n    // Ensure we start at the top on page load\n    this.resetToTop();\n\n    // Initialize dynamic artist system\n    this.initializeDynamicArtistSystem();\n\n    // Set up artist display mode switching\n    this.setupArtistDisplayModeLogic();\n    \n    // Start enhanced debug monitoring with DOM ready detection\n    if (this.isDebugMode) {\n      this.debugSystem = new Phantasia2Debug(this.document);\n      // Start async monitoring that waits for DOM to be fully ready\n      this.debugSystem.startDebugMonitoring().then(() => {\n        console.log('[PHANTASIA2] Enhanced debug monitoring fully initialized');\n      }).catch(error => {\n        console.error('[PHANTASIA2] Debug monitoring initialization failed:', error);\n      });\n    }\n  }\n\n  /**\n   * Determines if this component is inside the PhantasiaLayout\n   */\n  get isInsidePhantasiaLayout(): boolean {\n    // The URL will be /phantasia/phantasia2 when inside the layout\n    return this.router.url.includes('/phantasia/');\n  }\n\n  /**\n   * Handle video loaded event for seamless background playback\n   */\n  onVideoLoaded(): void {\n    if (this.backgroundVideo?.nativeElement) {\n      this.videoElement = this.backgroundVideo.nativeElement;\n      this.videoLoaded = true;\n      \n      // Ensure video is muted for autoplay compliance\n      this.videoElement.muted = true;\n      \n      // Start video with fade-in effect\n      this.videoElement.style.opacity = '0';\n      this.attemptVideoPlay();\n\n      // Set up seamless looping with fade transition\n      this.setupVideoLoop();\n    }\n  }\n\n  /**\n   * Setup seamless video looping with fade transitions\n   */\n  private setupVideoLoop(): void {\n    if (!this.videoElement) return;\n\n    this.videoElement.addEventListener('timeupdate', () => {\n      if (!this.videoElement) return;\n      \n      // Start fade out 1 second before video ends\n      const timeRemaining = this.videoElement.duration - this.videoElement.currentTime;\n      if (timeRemaining <= 1 && timeRemaining > 0.5) {\n        this.videoElement.style.transition = 'opacity 1s ease-out';\n        this.videoElement.style.opacity = '0.3';\n      }\n    });\n\n    this.videoElement.addEventListener('ended', () => {\n      if (!this.videoElement) return;\n      \n      // Reset and restart with fade in\n      this.videoElement.currentTime = 0;\n      this.videoElement.style.opacity = '0';\n      \n      // Only attempt to play if user has interacted or autoplay worked initially\n      if (!this.autoplayFailed || this.userHasInteracted) {\n        this.videoElement.play().then(() => {\n          if (this.videoElement) {\n            this.videoElement.style.transition = 'opacity 1.5s ease-in';\n            this.videoElement.style.opacity = '1';\n          }\n        }).catch(error => {\n          if (this.isDebugMode) {\n            console.warn('[Phantasia2Component] Video replay failed:', error);\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Attempt to play video with proper error handling\n   */\n  private attemptVideoPlay(): void {\n    if (!this.videoElement) return;\n\n    const playPromise = this.videoElement.play();\n    \n    if (playPromise !== undefined) {\n      playPromise.then(() => {\n        // Autoplay succeeded\n        this.autoplayFailed = false;\n        if (this.isDebugMode) {\n          console.log('[Phantasia2Component] Video autoplay succeeded');\n        }\n        this.fadeInVideo();\n      }).catch(error => {\n        // Autoplay failed - this is expected in many browsers\n        this.autoplayFailed = true;\n        if (this.isDebugMode) {\n          console.log('[Phantasia2Component] Video autoplay failed (expected):', error.name);\n          console.log('[Phantasia2Component] Video will start after user interaction');\n        }\n        // Still show the video element but don't fade it in until user interacts\n        this.showVideoWithoutPlay();\n      });\n    }\n  }\n\n  /**\n   * Fade in video after successful play\n   */\n  private fadeInVideo(): void {\n    if (!this.videoElement) return;\n    \n    setTimeout(() => {\n      if (this.videoElement) {\n        this.videoElement.style.transition = 'opacity 2s ease-in-out';\n        this.videoElement.style.opacity = '1';\n      }\n    }, 100);\n  }\n\n  /**\n   * Show video element without playing (fallback for autoplay failure)\n   */\n  private showVideoWithoutPlay(): void {\n    if (!this.videoElement) return;\n    \n    // Show the first frame of the video\n    this.videoElement.currentTime = 0;\n    setTimeout(() => {\n      if (this.videoElement) {\n        this.videoElement.style.transition = 'opacity 1s ease-in-out';\n        this.videoElement.style.opacity = '0.8'; // Slightly dimmed to indicate it's not playing\n      }\n    }, 100);\n  }\n\n  /**\n   * Set up user interaction detection to enable video playback\n   */\n  private setupUserInteractionDetection(): void {\n    const handleFirstInteraction = () => {\n      if (!this.userHasInteracted) {\n        this.userHasInteracted = true;\n        if (this.isDebugMode) {\n          console.log('[Phantasia2Component] User interaction detected');\n        }\n        \n        // If autoplay failed, try to start videos now\n        if (this.autoplayFailed && this.videoElement) {\n          this.attemptVideoPlayAfterInteraction();\n        }\n        \n        // If title video autoplay failed, try to start it now\n        if (this.titleAutoplayFailed && this.titleVideoElement) {\n          this.attemptTitleVideoPlayAfterInteraction();\n        }\n        \n        // Remove event listeners after first interaction\n        this.document.removeEventListener('click', handleFirstInteraction);\n        this.document.removeEventListener('touchstart', handleFirstInteraction);\n        this.document.removeEventListener('keydown', handleFirstInteraction);\n      }\n    };\n\n    // Listen for user interactions\n    this.document.addEventListener('click', handleFirstInteraction, { passive: true });\n    this.document.addEventListener('touchstart', handleFirstInteraction, { passive: true });\n    this.document.addEventListener('keydown', handleFirstInteraction, { passive: true });\n  }\n\n  /**\n   * Attempt to play video after user interaction\n   */\n  private attemptVideoPlayAfterInteraction(): void {\n    if (!this.videoElement) return;\n\n    this.videoElement.play().then(() => {\n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Video started after user interaction');\n      }\n      this.fadeInVideo();\n    }).catch(error => {\n      if (this.isDebugMode) {\n        console.warn('[Phantasia2Component] Video play failed even after user interaction:', error);\n      }\n    });\n  }\n\n  /**\n   * Start the loading sequence with progress simulation\n   */\n  private startLoadingSequence(): void {\n    this.isLoading = true;\n    this.loadingProgress = 0;\n    \n    const progressInterval = setInterval(() => {\n      this.loadingProgress += Math.random() * 15;\n      \n      if (this.loadingProgress >= 100) {\n        this.loadingProgress = 100;\n        clearInterval(progressInterval);\n        \n        // Add a small delay before hiding loading screen\n        setTimeout(() => {\n          this.isLoading = false;\n          this.cdr.markForCheck();\n          \n          if (this.isDebugMode) {\n            console.log('[Phantasia2Component] Loading complete, showing main content');\n          }\n        }, 500);\n      }\n      \n      this.cdr.markForCheck();\n    }, 200);\n    \n    if (this.isDebugMode) {\n      console.log('[Phantasia2Component] Loading sequence started');\n    }\n  }\n\n  /**\n   * Handle title video loaded metadata\n   */\n  onTitleVideoLoaded(): void {\n    if (this.titleVideo?.nativeElement) {\n      this.titleVideoElement = this.titleVideo.nativeElement;\n      this.titleVideoElement.muted = true;\n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Title video loaded');\n      }\n    }\n  }\n\n  /**\n   * Handle title video can play event\n   */\n  onTitleVideoCanPlay(): void {\n    if (this.titleVideoElement) {\n      this.attemptTitleVideoPlay();\n    }\n  }\n\n  /**\n   * Attempt to play title video with error handling\n   */\n  private attemptTitleVideoPlay(): void {\n    if (!this.titleVideoElement) return;\n\n    const playPromise = this.titleVideoElement.play();\n    \n    if (playPromise !== undefined) {\n      playPromise.then(() => {\n        this.titleAutoplayFailed = false;\n        if (this.isDebugMode) {\n          console.log('[Phantasia2Component] Title video autoplay succeeded');\n        }\n      }).catch(error => {\n        this.titleAutoplayFailed = true;\n        if (this.isDebugMode) {\n          console.log('[Phantasia2Component] Title video autoplay failed (expected):', error.name);\n        }\n      });\n    }\n  }\n\n  /**\n   * Attempt to play title video after user interaction\n   */\n  private attemptTitleVideoPlayAfterInteraction(): void {\n    if (!this.titleVideoElement) return;\n\n    this.titleVideoElement.play().then(() => {\n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Title video started after user interaction');\n      }\n    }).catch(error => {\n      if (this.isDebugMode) {\n        console.warn('[Phantasia2Component] Title video play failed even after user interaction:', error);\n      }\n    });\n  }\n\n  /**\n   * Handle title video ended event - keep video visible, no compacting\n   */\n  onTitleVideoEnded(): void {\n    if (this.isDebugMode) {\n      console.log('[Phantasia2Component] Title video playback completed - keeping video visible');\n    }\n    \n    // Video stays visible, no compacting animation needed\n    // All content is already visible and accessible\n  }\n  \n  /**\n   * Set up smooth scrolling behavior for the page\n   */\n  private setupSmoothScrolling(): void {\n    // Enable smooth scrolling on the html element for consistent behavior\n    if (typeof document !== 'undefined') {\n      document.documentElement.style.scrollBehavior = 'smooth';\n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Smooth scrolling enabled globally');\n      }\n    }\n  }\n\n  /**\n   * Initialize the two-state scroll system\n   */\n  private initializeTwoStateScroll(): void {\n    if (typeof window === 'undefined') return;\n\n    // Bind event handlers to preserve context\n    this.handleScroll = this.handleScroll.bind(this);\n    this.handleWheel = this.handleWheel.bind(this);\n    this.handleKeyboard = this.handleKeyboard.bind(this);\n    this.handleTouchStart = this.handleTouchStart.bind(this);\n    this.handleTouchEnd = this.handleTouchEnd.bind(this);\n\n    // Add scroll event listeners\n    window.addEventListener('scroll', this.handleScroll, { passive: false });\n    window.addEventListener('wheel', this.handleWheel, { passive: false });\n    window.addEventListener('keydown', this.handleKeyboard, { passive: false });\n    window.addEventListener('touchstart', this.handleTouchStart, { passive: true });\n    window.addEventListener('touchend', this.handleTouchEnd, { passive: false });\n\n    // Initialize scroll position tracking\n    this.lastScrollY = window.scrollY;\n    this.updateScrollState();\n\n    if (this.isDebugMode) {\n      console.log('[Phantasia2Component] Two-state scroll system initialized');\n      console.log('[Phantasia2Component] Initial scroll state:', this.scrollState);\n    }\n  }\n\n  /**\n   * Handle scroll events for two-state system\n   */\n  private handleScroll(event: Event): void {\n    if (this.isAutoScrolling || this.scrollLocked) return;\n\n    const currentScrollY = window.scrollY;\n    const scrollDelta = currentScrollY - this.lastScrollY;\n\n    // Determine scroll direction\n    if (Math.abs(scrollDelta) > 5) {\n      this.scrollDirection = scrollDelta > 0 ? 'down' : 'up';\n    }\n\n    // Check if we need to trigger auto-scroll\n    this.checkScrollTriggers(currentScrollY);\n\n    this.lastScrollY = currentScrollY;\n  }\n\n  /**\n   * Handle wheel events for immediate response\n   */\n  private handleWheel(event: WheelEvent): void {\n    if (this.isAutoScrolling || this.scrollLocked) {\n      event.preventDefault();\n      return;\n    }\n\n    const now = Date.now();\n\n    // Throttle wheel events\n    if (now - this.lastWheelTime < 50) return;\n    this.lastWheelTime = now;\n\n    const scrollingDown = event.deltaY > 0;\n    const currentScrollY = window.scrollY;\n\n    // If at top and scrolling down, trigger scroll to content\n    if (this.scrollState === 'top' && scrollingDown && Math.abs(event.deltaY) > 10) {\n      event.preventDefault();\n      this.scrollToContent();\n      return;\n    }\n\n    // If in content area and scrolling up past threshold\n    if (this.scrollState === 'content' && !scrollingDown) {\n      const cdShowcase = this.cdShowcase?.nativeElement;\n      if (cdShowcase) {\n        const showcaseRect = cdShowcase.getBoundingClientRect();\n        if (showcaseRect.top > this.contentScrollThreshold) {\n          event.preventDefault();\n          this.scrollToTop();\n          return;\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle keyboard navigation\n   */\n  private handleKeyboard(event: KeyboardEvent): void {\n    if (this.isAutoScrolling || this.scrollLocked) {\n      // Block navigation keys during auto-scroll\n      if (['ArrowUp', 'ArrowDown', 'PageUp', 'PageDown', 'Home', 'End', ' '].includes(event.key)) {\n        event.preventDefault();\n      }\n      return;\n    }\n\n    const currentScrollY = window.scrollY;\n\n    switch (event.key) {\n      case 'ArrowDown':\n      case 'PageDown':\n      case ' ': // Spacebar\n        if (this.scrollState === 'top') {\n          event.preventDefault();\n          this.scrollToContent();\n        }\n        break;\n\n      case 'ArrowUp':\n      case 'PageUp':\n        if (this.scrollState === 'content') {\n          const cdShowcase = this.cdShowcase?.nativeElement;\n          if (cdShowcase) {\n            const showcaseRect = cdShowcase.getBoundingClientRect();\n            if (showcaseRect.top > this.contentScrollThreshold) {\n              event.preventDefault();\n              this.scrollToTop();\n            }\n          }\n        }\n        break;\n\n      case 'Home':\n        event.preventDefault();\n        this.scrollToTop();\n        break;\n\n      case 'End':\n        if (this.scrollState === 'top') {\n          event.preventDefault();\n          this.scrollToContent();\n        }\n        break;\n    }\n  }\n\n  /**\n   * Handle touch start for mobile gestures\n   */\n  private handleTouchStart(event: TouchEvent): void {\n    this.touchStartY = event.touches[0].clientY;\n  }\n\n  /**\n   * Handle touch end for mobile gestures\n   */\n  private handleTouchEnd(event: TouchEvent): void {\n    if (this.isAutoScrolling || this.scrollLocked) {\n      event.preventDefault();\n      return;\n    }\n\n    this.touchEndY = event.changedTouches[0].clientY;\n    const swipeDistance = this.touchStartY - this.touchEndY;\n    const swipeThreshold = 50; // Minimum swipe distance\n\n    // Swipe up (scroll down)\n    if (swipeDistance > swipeThreshold && this.scrollState === 'top') {\n      event.preventDefault();\n      this.scrollToContent();\n    }\n\n    // Swipe down (scroll up)\n    if (swipeDistance < -swipeThreshold && this.scrollState === 'content') {\n      const cdShowcase = this.cdShowcase?.nativeElement;\n      if (cdShowcase) {\n        const showcaseRect = cdShowcase.getBoundingClientRect();\n        if (showcaseRect.top > this.contentScrollThreshold) {\n          event.preventDefault();\n          this.scrollToTop();\n        }\n      }\n    }\n  }\n\n  /**\n   * Check if auto-scroll should be triggered based on current position\n   */\n  private checkScrollTriggers(currentScrollY: number): void {\n    // Update scroll state\n    this.updateScrollState();\n\n    // If user is in the \"dead zone\" between sections, auto-scroll to nearest\n    if (currentScrollY > this.scrollThreshold && this.scrollState === 'top') {\n      // User started scrolling from top, go to content\n      this.scrollToContent();\n    } else if (this.scrollState === 'content') {\n      // Check if user is scrolling up from content area\n      const cdShowcase = this.cdShowcase?.nativeElement;\n      if (cdShowcase && this.scrollDirection === 'up') {\n        const showcaseRect = cdShowcase.getBoundingClientRect();\n        if (showcaseRect.top > this.contentScrollThreshold) {\n          // User is scrolling up and content is moving down, return to top\n          this.scrollToTop();\n        }\n      }\n    }\n  }\n\n  /**\n   * Update the current scroll state based on position\n   */\n  private updateScrollState(): void {\n    const currentScrollY = window.scrollY;\n    const cdShowcase = this.cdShowcase?.nativeElement;\n\n    if (currentScrollY <= this.scrollThreshold) {\n      this.scrollState = 'top';\n    } else if (cdShowcase) {\n      const showcaseRect = cdShowcase.getBoundingClientRect();\n      // We're in content state if cd-showcase is at or above the threshold\n      if (showcaseRect.top <= this.contentScrollThreshold) {\n        this.scrollState = 'content';\n      }\n    }\n\n    if (this.isDebugMode) {\n      console.log('[Phantasia2Component] Scroll state updated:', this.scrollState, 'at position:', currentScrollY);\n    }\n  }\n\n  /**\n   * Auto-scroll to the top of the page\n   */\n  private scrollToTop(): void {\n    if (this.isAutoScrolling) return;\n\n    this.isAutoScrolling = true;\n    this.scrollLocked = true;\n\n    // Apply scroll lock to prevent interference\n    document.body.style.overflow = 'hidden';\n    document.body.style.position = 'fixed';\n    document.body.style.width = '100%';\n\n    if (this.isDebugMode) {\n      console.log('[Phantasia2Component] Auto-scrolling to top');\n    }\n\n    // Perform smooth scroll to top\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth'\n    });\n\n    // Show scroll indicator when back at top\n    this.showScrollIndicator.set(true);\n    this.scrollIndicatorState = 'visible';\n    this.cdr.markForCheck();\n\n    // Unlock after animation completes\n    setTimeout(() => {\n      this.isAutoScrolling = false;\n      this.scrollLocked = false;\n      this.scrollState = 'top';\n      this.lastScrollY = 0;\n\n      // Remove scroll lock\n      document.body.style.overflow = '';\n      document.body.style.position = '';\n      document.body.style.width = '';\n\n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Arrived at top, scroll unlocked');\n      }\n    }, 1000);\n  }\n\n  /**\n   * Reset scroll position to top on initial load\n   */\n  private resetToTop(): void {\n    if (typeof window !== 'undefined') {\n      // Immediate jump to top without animation\n      window.scrollTo(0, 0);\n      this.scrollState = 'top';\n      this.lastScrollY = 0;\n\n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Reset to top position');\n      }\n    }\n  }\n\n  /**\n   * Set up section snapping functionality (DEPRECATED - replaced by two-state system)\n   */\n  private setupSectionSnapping(): void {\n    if (typeof document === 'undefined') return;\n    \n    // Define scroll sections in order\n    const videoSection = document.querySelector('.video-title-section') as HTMLElement;\n    const cdSection = this.cdShowcase?.nativeElement;\n    const artistSection = document.querySelector('.artist-section') as HTMLElement;\n    \n    this.scrollSections = [videoSection, cdSection, artistSection].filter(section => section !== null && section !== undefined);\n    \n    if (this.scrollSections.length === 0) {\n      if (this.isDebugMode) {\n        console.warn('[Phantasia2Component] No scroll sections found for snapping');\n      }\n      return;\n    }\n    \n    if (this.isDebugMode) {\n      console.log('[Phantasia2Component] Section snapping set up with', this.scrollSections.length, 'sections');\n    }\n    \n    // Add scroll event listener to the album page container\n    const albumPage = document.querySelector('.phantasia-album-page') as HTMLElement;\n    if (albumPage) {\n      albumPage.addEventListener('scroll', this.handleSectionSnap.bind(this), { passive: false });\n      \n      // Also listen for wheel events for more responsive snapping\n      albumPage.addEventListener('wheel', this.handleWheelSnap.bind(this), { passive: false });\n      \n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Scroll event listeners added for section snapping');\n      }\n    } else {\n      // Fallback to window scroll events\n      window.addEventListener('scroll', this.handleSectionSnap.bind(this), { passive: false });\n      window.addEventListener('wheel', this.handleWheelSnap.bind(this), { passive: false });\n      \n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Window scroll event listeners added for section snapping (fallback)');\n      }\n    }\n  }\n  \n  /**\n   * Handle section snapping on scroll\n   */\n  private handleSectionSnap(): void {\n    if (this.isScrollSnapping) return;\n    \n    // Clear existing timeout\n    if (this.scrollTimeoutId) {\n      clearTimeout(this.scrollTimeoutId);\n    }\n    \n    // Debounce scroll snapping\n    this.scrollTimeoutId = window.setTimeout(() => {\n      this.performSectionSnap();\n    }, 150); // 150ms debounce\n  }\n  \n  /**\n   * Handle wheel events for immediate snapping\n   */\n  private handleWheelSnap(event: WheelEvent): void {\n    // Only snap on significant wheel events\n    if (Math.abs(event.deltaY) < 10) return;\n    \n    const now = Date.now();\n    \n    // Throttle wheel snapping\n    if (now - this.lastScrollTime < 500) return;\n    \n    this.lastScrollTime = now;\n    \n    // Determine scroll direction\n    const scrollingDown = event.deltaY > 0;\n    const currentSection = this.getCurrentSection();\n    const currentIndex = this.scrollSections.indexOf(currentSection);\n    \n    if (currentIndex === -1) return;\n    \n    // Calculate target section\n    let targetIndex = currentIndex;\n    if (scrollingDown && currentIndex < this.scrollSections.length - 1) {\n      targetIndex = currentIndex + 1;\n    } else if (!scrollingDown && currentIndex > 0) {\n      targetIndex = currentIndex - 1;\n    }\n    \n    // Perform snapping if target changed\n    if (targetIndex !== currentIndex) {\n      event.preventDefault();\n      this.snapToSection(this.scrollSections[targetIndex]);\n      \n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Wheel snap to section', targetIndex);\n      }\n    }\n  }\n  \n  /**\n   * Perform section snapping to the nearest section\n   */\n  private performSectionSnap(): void {\n    if (this.isScrollSnapping || this.scrollSections.length === 0) return;\n    \n    const nearestSection = this.getNearestSection();\n    if (nearestSection) {\n      this.snapToSection(nearestSection);\n    }\n  }\n  \n  /**\n   * Get the current section based on scroll position\n   */\n  private getCurrentSection(): HTMLElement {\n    const albumPage = document.querySelector('.phantasia-album-page') as HTMLElement;\n    const scrollTop = albumPage ? albumPage.scrollTop : window.pageYOffset;\n    const viewportHeight = window.innerHeight;\n    const threshold = viewportHeight * 0.3; // 30% threshold\n    \n    for (const section of this.scrollSections) {\n      const sectionRect = section.getBoundingClientRect();\n      const sectionTop = albumPage ? sectionRect.top + scrollTop : section.offsetTop;\n      \n      if (scrollTop >= sectionTop - threshold && scrollTop < sectionTop + section.offsetHeight - threshold) {\n        return section;\n      }\n    }\n    \n    return this.scrollSections[0]; // Default to first section\n  }\n  \n  /**\n   * Get the nearest section to snap to\n   */\n  private getNearestSection(): HTMLElement | null {\n    if (this.scrollSections.length === 0) return null;\n    \n    const albumPage = document.querySelector('.phantasia-album-page') as HTMLElement;\n    const scrollTop = albumPage ? albumPage.scrollTop : window.pageYOffset;\n    const viewportHeight = window.innerHeight;\n    const snapPoint = scrollTop + viewportHeight * 0.5; // Center of viewport\n    \n    let nearestSection = this.scrollSections[0];\n    let minDistance = Infinity;\n    \n    for (const section of this.scrollSections) {\n      const sectionRect = section.getBoundingClientRect();\n      const sectionCenter = albumPage \n        ? sectionRect.top + scrollTop + section.offsetHeight * 0.5\n        : section.offsetTop + section.offsetHeight * 0.5;\n      \n      const distance = Math.abs(snapPoint - sectionCenter);\n      \n      if (distance < minDistance) {\n        minDistance = distance;\n        nearestSection = section;\n      }\n    }\n    \n    return nearestSection;\n  }\n  \n  /**\n   * Snap to a specific section\n   */\n  private snapToSection(section: HTMLElement): void {\n    if (this.isScrollSnapping) return;\n    \n    this.isScrollSnapping = true;\n    \n    const albumPage = document.querySelector('.phantasia-album-page') as HTMLElement;\n    const sectionRect = section.getBoundingClientRect();\n    \n    let targetScrollTop: number;\n    \n    if (albumPage) {\n      // Calculate scroll position within the album page container\n      targetScrollTop = sectionRect.top + albumPage.scrollTop - (window.innerHeight * 0.1); // 10% from top\n      \n      albumPage.scrollTo({\n        top: Math.max(0, targetScrollTop),\n        behavior: 'smooth'\n      });\n    } else {\n      // Fallback to window scrolling\n      targetScrollTop = section.offsetTop - (window.innerHeight * 0.1);\n      \n      window.scrollTo({\n        top: Math.max(0, targetScrollTop),\n        behavior: 'smooth'\n      });\n    }\n    \n    if (this.isDebugMode) {\n      console.log('[Phantasia2Component] Snapping to section at position:', targetScrollTop);\n    }\n    \n    // Reset snapping flag after animation completes\n    setTimeout(() => {\n      this.isScrollSnapping = false;\n    }, 1000); // Allow time for smooth scroll to complete\n  }\n  \n  /**\n   * Smooth scroll to CD showcase section with two-state system\n   */\n  scrollToContent(): void {\n    if (this.isAutoScrolling) return;\n\n    this.isAutoScrolling = true;\n    this.scrollLocked = true;\n\n    // Apply scroll lock to prevent interference\n    const currentScrollY = window.scrollY;\n    document.body.style.overflow = 'hidden';\n    document.body.style.position = 'fixed';\n    document.body.style.width = '100%';\n    document.body.style.top = `-${currentScrollY}px`;\n\n    if (this.isDebugMode) {\n      console.log('[Phantasia2Component] Auto-scrolling to content section');\n    }\n\n    // First try to find the album presentation section (parent of CD showcase)\n    const albumPresentation = document.querySelector('.album-presentation') as HTMLElement;\n    const cdShowcase = this.cdShowcase?.nativeElement;\n\n    let targetPosition = 0;\n\n    if (albumPresentation) {\n      // Use album presentation's position as it's the proper container\n      targetPosition = albumPresentation.offsetTop - 100; // Account for header\n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Using album presentation position:', albumPresentation.offsetTop);\n      }\n    } else if (cdShowcase) {\n      // Fallback: calculate absolute position of CD showcase\n      let element = cdShowcase;\n      let offsetTop = 0;\n      while (element) {\n        offsetTop += element.offsetTop;\n        element = element.offsetParent as HTMLElement;\n      }\n      targetPosition = offsetTop - 100; // Account for header\n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Using calculated CD showcase absolute position:', offsetTop);\n      }\n    } else {\n      // Final fallback: use viewport height to get past video section\n      targetPosition = window.innerHeight - 90;\n      if (this.isDebugMode) {\n        console.warn('[Phantasia2Component] Using fallback viewport-based position');\n      }\n    }\n\n    // Reset body position before scrolling\n    document.body.style.position = '';\n    document.body.style.top = '';\n    window.scrollTo(0, currentScrollY);\n\n    // Perform smooth scroll\n    window.scrollTo({\n      top: Math.max(0, targetPosition),\n      behavior: 'smooth'\n    });\n\n    // Hide scroll indicator after scrolling to content\n    this.hideScrollIndicatorAfterUse();\n\n    // Unlock after animation completes\n    setTimeout(() => {\n      this.isAutoScrolling = false;\n      this.scrollLocked = false;\n      this.scrollState = 'content';\n      this.lastScrollY = window.scrollY;\n\n      // Remove scroll lock\n      document.body.style.overflow = '';\n      document.body.style.width = '';\n\n      if (this.isDebugMode) {\n        console.log('[Phantasia2Component] Arrived at content, scroll unlocked');\n      }\n    }, 1200);\n  }\n  \n  /**\n   * Hide scroll indicator after user interaction\n   */\n  private hideScrollIndicatorAfterUse(): void {\n    this.showScrollIndicator.set(false);\n    this.scrollIndicatorState = 'hidden';\n    this.cdr.markForCheck();\n\n    if (this.isDebugMode) {\n      console.log('[Phantasia2Component] Scroll indicator hidden after use');\n    }\n  }\n\n  /**\n   * Initialize the dynamic artist system\n   */\n  private initializeDynamicArtistSystem(): void {\n    if (this.isDebugMode) {\n      console.log('[Phantasia2Component] Initializing dynamic artist system');\n    }\n\n    // The services will initialize automatically through dependency injection\n    // This method is here for future enhancements if needed\n  }\n\n  /**\n   * Set up artist display mode switching logic\n   * Default: showcase mode (all 31 artists)\n   * When music plays: switch to currently-playing mode (track-specific artists)\n   */\n  private setupArtistDisplayModeLogic(): void {\n    // Listen to audio service for play/pause state changes\n    this.audioService.audioState$.subscribe((audioState: AudioState) => {\n      if (audioState.isPlaying && audioState.currentTrack) {\n        // Switch to currently-playing mode when music starts\n        this.artistDisplayMode.set('currently-playing');\n        if (this.isDebugMode) {\n          console.log('[Phantasia2Component] Switched to currently-playing mode for track:', audioState.currentTrack);\n        }\n      } else {\n        // Switch back to showcase mode when music stops or no track\n        this.artistDisplayMode.set('showcase');\n        if (this.isDebugMode) {\n          console.log('[Phantasia2Component] Switched to showcase mode (music stopped or no track)');\n        }\n      }\n      this.cdr.markForCheck();\n    });\n\n    if (this.isDebugMode) {\n      console.log('[Phantasia2Component] Artist display mode logic initialized - starting in showcase mode');\n    }\n  }\n\n\n  ngOnDestroy(): void {\n    // Clean up two-state scroll event listeners\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('scroll', this.handleScroll);\n      window.removeEventListener('wheel', this.handleWheel);\n      window.removeEventListener('keydown', this.handleKeyboard);\n      window.removeEventListener('touchstart', this.handleTouchStart);\n      window.removeEventListener('touchend', this.handleTouchEnd);\n    }\n\n    // Clear any pending timeouts\n    if (this.wheelTimeoutId) {\n      clearTimeout(this.wheelTimeoutId);\n      this.wheelTimeoutId = null;\n    }\n    // Save final debug log and cleanup debug system\n    if (this.debugSystem) {\n      this.debugSystem.saveDebugLogToFile();\n      this.debugSystem.cleanup();\n      this.debugSystem = null;\n    }\n\n    // Remove phantasia-album-page class from body\n    if (typeof document !== 'undefined') {\n      document.body.classList.remove('phantasia-album-page');\n      if (this.isDebugMode) {\n        console.log(`[Phantasia2Component] Removed phantasia-album-page class from body`);\n      }\n    }\n    \n    // Clean up video elements\n    if (this.videoElement) {\n      this.videoElement.pause();\n      this.videoElement.removeEventListener('timeupdate', () => {});\n      this.videoElement.removeEventListener('ended', () => {});\n      this.videoElement = null;\n    }\n    \n    // Clean up title video element\n    if (this.titleVideoElement) {\n      this.titleVideoElement.pause();\n      this.titleVideoElement = null;\n    }\n    \n    // Clean up scroll timeouts\n    if (this.scrollTimeoutId) {\n      clearTimeout(this.scrollTimeoutId);\n      this.scrollTimeoutId = null;\n    }\n    \n    // Clean up section snapping event listeners\n    const albumPage = document.querySelector('.phantasia-album-page') as HTMLElement;\n    if (albumPage) {\n      albumPage.removeEventListener('scroll', this.handleSectionSnap.bind(this));\n      albumPage.removeEventListener('wheel', this.handleWheelSnap.bind(this));\n    } else {\n      // Clean up window event listeners if used as fallback\n      window.removeEventListener('scroll', this.handleSectionSnap.bind(this));\n      window.removeEventListener('wheel', this.handleWheelSnap.bind(this));\n    }\n\n    // Clean up user interaction listeners (in case they weren't removed yet)\n    const handleFirstInteraction = () => {}; // Dummy function for cleanup\n    this.document.removeEventListener('click', handleFirstInteraction);\n    this.document.removeEventListener('touchstart', handleFirstInteraction);\n    this.document.removeEventListener('keydown', handleFirstInteraction);\n    \n    // Reset section snapping variables\n    this.scrollSections = [];\n    this.isScrollSnapping = false;\n    this.lastScrollTime = 0;\n    \n    if (this.isDebugMode) {\n      console.log(`[Phantasia2Component] Component destroyed, cleanup completed`);\n    }\n  }\n}\n", "<!-- Loading Screen -->\n<app-loading-screen \n  *ngIf=\"isLoading\" \n  [progress]=\"loadingProgress\">\n</app-loading-screen>\n\n<div class=\"phantasia2-container\" *ngIf=\"!isLoading\">\n  <!-- Site Header - only shown when not inside the phantasia layout -->\n  <app-site-header *ngIf=\"!isInsidePhantasiaLayout\"></app-site-header>\n\n  <!-- Video Background with Seamless Loop -->\n  <div class=\"video-background\">\n    <video #backgroundVideo class=\"bg-video\" autoplay muted playsinline [loop]=\"true\" (loadedmetadata)=\"onVideoLoaded()\" (canplay)=\"onVideoLoaded()\">\n      <source src=\"assets/videos/phantasia2/animated_background_optimized.webm\" type=\"video/webm\">\n      <source src=\"assets/videos/phantasia2/animated_background_web.mp4\" type=\"video/mp4\">\n    </video>\n    <div class=\"video-overlay\"></div>\n  </div>\n\n  <!-- Video Title Section - Clean Structure for Perfect Centering -->\n  <section class=\"video-title-section\">\n    <div class=\"title-container\">\n      <video #titleVideo class=\"title-video\" autoplay muted playsinline preload=\"auto\"\n             (loadedmetadata)=\"onTitleVideoLoaded()\"\n             (canplay)=\"onTitleVideoCanPlay()\"\n             (ended)=\"onTitleVideoEnded()\">\n        <source src=\"assets/videos/phantasia2/ULTIMATE_alpha_with_flares.webm\" type=\"video/webm\">\n        <source src=\"assets/videos/phantasia2/Phantasi2_Logo_Animated_web.mp4\" type=\"video/mp4\">\n        <!-- Fallback to static image if video fails -->\n        <img src=\"assets/videos/phantasia2/Logo_fx.png\" alt=\"Phantasia Project II\" class=\"title-image-fallback\">\n      </video>\n    </div>\n  </section>\n\n  <!-- Scroll Indicator Section - Now completely outside video-title-section -->\n  <section class=\"scroll-indicator-section\">\n    <div class=\"scroll-indicator-container\"\n         *ngIf=\"showScrollIndicator()\"\n         [@scrollIndicator]=\"scrollIndicatorState\"\n         (click)=\"scrollToContent()\">\n      <div class=\"scroll-text\">Scroll for More</div>\n      <div class=\"triangle-separator\">\n        <svg width=\"24\" height=\"16\" viewBox=\"0 0 24 16\" fill=\"none\" class=\"triangle-icon\">\n          <path d=\"M12 16L0 0H24L12 16Z\" fill=\"currentColor\"/>\n        </svg>\n      </div>\n    </div>\n  </section>\n\n  <!-- Main Album Presentation Content -->\n  <div class=\"album-presentation\">\n\n    <!-- Enhanced CD Showcase - Always Visible -->\n    <section class=\"cd-showcase\" #cdShowcase>\n      \n      <!-- CD Showcase Title -->\n      <h2 class=\"cd-showcase-title\">The highly anticipated sequel</h2>\n\n      <!-- Optimized Horizontal Layout for 1920x1080 -->\n      <div class=\"showcase-main-content\">\n        <!-- Left side: Album Cover -->\n        <div class=\"album-cover-section\">\n          <div class=\"cd-jacket\">\n            <div class=\"jacket-3d-container\">\n              <div class=\"jacket-art\">\n                <img src=\"assets/videos/phantasia2/album_cover.png\" alt=\"Phantasia Project II Album Cover\" class=\"album-cover\">\n              </div>\n            </div>\n            <div class=\"jacket-reflection\"></div>\n          </div>\n        </div>\n\n        <!-- Right side: Album Info and Music Player -->\n        <div class=\"album-content-section\">\n          <div class=\"album-info\">\n            <div class=\"artist-info\">\n              <h3 class=\"artists\">\"Defining your justice.\"</h3>\n              <p class=\"collaboration-label\">A fantasy compilation album</p>\n            </div>\n            <div class=\"album-details\">\n              <div class=\"detail-item\">\n                <mat-icon>music_note</mat-icon>\n                <span>20 Tracks</span>\n              </div>\n              <div class=\"detail-item\">\n                <mat-icon>schedule</mat-icon>\n                <span>83 Minutes</span>\n              </div>\n              <div class=\"detail-item\">\n                <mat-icon>style</mat-icon>\n                <span>Ambient Fantasy Orchestral</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Music Player positioned below album info -->\n          <div class=\"music-player-section\">\n            <app-music-player></app-music-player>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <!-- Dynamic Artist Cards Section with Special Mentions - Three-column layout -->\n    <section class=\"artist-cards-section\">\n      <app-special-mentions>\n        <!-- Main content (artist cards) will be projected into the center column -->\n        <app-dynamic-artist-cards\n          [showAllArtists]=\"false\"\n          [maxVisibleCards]=\"8\"\n          [enableAnimations]=\"true\"\n          [displayMode]=\"artistDisplayMode()\">\n        </app-dynamic-artist-cards>\n      </app-special-mentions>\n    </section>\n\n    <!-- Footer Section -->\n    <footer class=\"phantasia-footer\">\n      <div class=\"footer-content\">\n        <div class=\"footer-logo\">\n          <img src=\"assets/images/logos/prismcoll_logox.svg\" alt=\"Prismatic Collections\" />\n        </div>\n        \n        <div class=\"footer-links\">\n          <div class=\"link-group\">\n            <h3>Explore</h3>\n            <ul>\n              <li><a routerLink=\"/collections\">Collections</a></li>\n              <li><a routerLink=\"/phantasia/phantasia2\">About</a></li>\n            </ul>\n          </div>\n          \n          <div class=\"link-group\">\n            <h3>Legal</h3>\n            <ul>\n              <li><a href=\"#\">Privacy Policy</a></li>\n              <li><a href=\"#\">Terms of Use</a></li>\n            </ul>\n          </div>\n        </div>\n        \n        <div class=\"copyright\">\n          ¬© {{ currentYear }} Prismatic Collections. All rights reserved.\n        </div>\n      </div>\n    </footer>\n  </div>\n</div>\n"],
  "mappings": "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",
  "names": ["document", "style", "document"]
}
