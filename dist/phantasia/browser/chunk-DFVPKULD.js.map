{
  "version": 3,
  "sources": ["src/app/pages/collections-page/new-collections.component.ts", "src/app/pages/collections-page/new-collections.component.html"],
  "sourcesContent": ["import { Component, OnInit, ChangeDetectionStrategy, ElementRef, OnDestroy, HostListener, Inject, DOCUMENT, AfterViewInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { SiteHeaderComponent } from '../../shared/components/site-header/site-header.component';\nimport { SquaresAnimationComponent } from '../../shared/components/squares-animation/squares-animation.component';\n\n/* Album/Prism Interface Definition */\ninterface Album {\n  id: string;\n  title: string;\n  artist: string;\n  coverImage: string;\n  trackCount: number;\n  year: number;\n  description: string;\n  tags: string[];\n  featured: boolean;\n  route: string;\n}\n\n\n/**\n * Collections Page Component\n * \n * Displays album cards (Prisms) in a grid layout with navigation to individual albums.\n * Each album is considered a \"Prism\" in the Prismatic Collections terminology.\n */\n@Component({\n  selector: 'app-new-collections',\n  standalone: true,\n  imports: [CommonModule, SiteHeaderComponent, SquaresAnimationComponent],\n  templateUrl: './new-collections.component.html',\n  styleUrls: ['./new-collections.component.scss'],\n  // Enable OnPush change detection for better performance\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NewCollectionsComponent implements OnInit, OnDestroy, AfterViewInit {\n  \n  \n  /* Albums/Prisms Data */\n  albums: Album[] = [\n    {\n      id: 'phantasia',\n      title: 'Project: Phantasia',\n      artist: 'Prismatic Collections',\n      coverImage: 'assets/images/covers/phantasia_1_cover_optimized.webp',\n      trackCount: 14,\n      year: 2024,\n      description: 'Our flagship collection featuring ethereal soundscapes, intricate rhythms, and emotional melodies.',\n      tags: ['Ambient', 'Fantasy', 'Orchestral'],\n      featured: false,\n      route: '/phantasia'\n    },\n    {\n      id: 'phantasia2',\n      title: 'Project: Phatasia II -Blinding Dawn-', \n      artist: 'Prismatic Collections',\n      coverImage: 'assets/images/project_phantasia2/album_cover.png',\n      trackCount: 14,\n      year: 2025,\n      description: 'The highly anticipated sequel featuring expanded orchestral arrangements and deeper ambient textures.',\n      tags: ['Ambient', 'Fantasy', 'Orchestral'],\n      featured: true,\n      route: '/phantasia/phantasia2'\n    },\n    {\n      id: 'unknown-prism',\n      title: '???',\n      artist: 'CORRUPTED_DATA',\n      coverImage: 'assets/images/featured/prism-unreadable.svg',\n      trackCount: 0,\n      year: 0,\n      description: 'PRISM UNREADABLE - This prism appears to be corrupted ./restoration in progress...',\n      tags: ['ERROR', 'UNREADABLE', 'CORRUPTED'],\n      featured: false,\n      route: '/collections/unknown'\n    }\n  ];\n\n  private scrollTimer: any;\n  private isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent);\n  private debugTimer: any;\n  private resizeObserver?: ResizeObserver;\n\n  constructor(\n    private router: Router, \n    private elementRef: ElementRef,\n    @Inject(DOCUMENT) private document: Document\n  ) {}\n\n  ngOnInit(): void {\n    // Component initialization - squares now handled by SquaresAnimationComponent\n    // CRITICAL FIX: Set body class for global styles to take effect\n    this.document.body.classList.add('collections-page-active');\n    this.setupScrollbarVisibility();\n  }\n\n  ngAfterViewInit(): void {\n    // Check scrollbar necessity after view initialization\n    setTimeout(() => {\n      this.checkScrollbarNecessity();\n      this.setupResizeObserver();\n    }, 100);\n  }\n\n  ngOnDestroy(): void {\n    // Clean up scroll timer\n    if (this.scrollTimer) {\n      clearTimeout(this.scrollTimer);\n    }\n    if (this.debugTimer) {\n      clearInterval(this.debugTimer);\n    }\n    // Clean up resize observer\n    if (this.resizeObserver) {\n      this.resizeObserver.disconnect();\n    }\n    // CRITICAL FIX: Remove body class on component destroy\n    this.document.body.classList.remove('collections-page-active');\n  }\n\n  /**\n   * Setup scrollbar visibility for iOS devices\n   * iOS Safari hides scrollbars by default, so we need to show a custom indicator\n   */\n  private setupScrollbarVisibility(): void {\n    if (this.isIOS) {\n      // Add scroll event listener for iOS devices\n      this.elementRef.nativeElement.addEventListener('scroll', this.onScroll.bind(this), { passive: true });\n    }\n  }\n\n  /**\n   * Handle scroll events to show/hide custom scrollbar indicator on iOS\n   */\n  @HostListener('scroll', ['$event'])\n  onScroll(event?: Event): void {\n    if (this.isIOS) {\n      const element = this.elementRef.nativeElement.querySelector('.collections-page');\n      if (element) {\n        // Add scrolling class to show custom scrollbar indicator\n        element.classList.add('scrolling');\n        \n        // Clear existing timer\n        if (this.scrollTimer) {\n          clearTimeout(this.scrollTimer);\n        }\n        \n        // Hide scrollbar indicator after scrolling stops\n        this.scrollTimer = setTimeout(() => {\n          element.classList.remove('scrolling');\n        }, 1500);\n      }\n    }\n  }\n\n  /**\n   * Check if scrollbar is necessary based on number of cards and viewport overflow\n   */\n  private checkScrollbarNecessity(): void {\n    const collectionsPage = this.elementRef.nativeElement.querySelector('.collections-page');\n    if (!collectionsPage) return;\n\n    const cardCount = this.albums.length;\n    const hasOverflow = this.checkForOverflow(collectionsPage);\n\n    // If 3 or less cards and no overflow, hide scrollbar\n    if (cardCount <= 3 && !hasOverflow) {\n      this.hideScrollbar(collectionsPage);\n    } else {\n      // If more than 3 cards OR there's overflow, show scrollbar\n      this.showScrollbar(collectionsPage);\n    }\n  }\n\n  /**\n   * Check if content overflows the viewport\n   */\n  private checkForOverflow(element: HTMLElement): boolean {\n    const elementRect = element.getBoundingClientRect();\n    const viewportHeight = window.innerHeight;\n    \n    // Check if any card extends beyond the viewport\n    const cards = element.querySelectorAll('.album-card, .collection-card');\n    for (let i = 0; i < cards.length; i++) {\n      const cardRect = cards[i].getBoundingClientRect();\n      if (cardRect.bottom > viewportHeight) {\n        return true;\n      }\n    }\n\n    // Also check if the overall content height exceeds viewport\n    return element.scrollHeight > element.clientHeight;\n  }\n\n  /**\n   * Hide scrollbar by setting overflow-y to hidden\n   */\n  private hideScrollbar(element: HTMLElement): void {\n    element.style.overflowY = 'hidden';\n    element.classList.add('no-scroll');\n  }\n\n  /**\n   * Show scrollbar by setting overflow-y to auto\n   */\n  private showScrollbar(element: HTMLElement): void {\n    element.style.overflowY = 'auto';\n    element.classList.remove('no-scroll');\n  }\n\n  /**\n   * Setup resize observer to recheck scrollbar necessity on viewport changes\n   */\n  private setupResizeObserver(): void {\n    if (typeof ResizeObserver !== 'undefined') {\n      this.resizeObserver = new ResizeObserver(() => {\n        this.checkScrollbarNecessity();\n      });\n\n      const collectionsPage = this.elementRef.nativeElement.querySelector('.collections-page');\n      if (collectionsPage) {\n        this.resizeObserver.observe(collectionsPage);\n      }\n    }\n  }\n\n  /**\n   * Handle window resize events\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(): void {\n    // Debounce resize checks\n    if (this.scrollTimer) {\n      clearTimeout(this.scrollTimer);\n    }\n    this.scrollTimer = setTimeout(() => {\n      this.checkScrollbarNecessity();\n    }, 150);\n  }\n\n\n  /* Navigate to Album */\n  navigateToAlbum(albumId: string): void {\n    const album = this.albums.find(a => a.id === albumId);\n    if (album) {\n      this.router.navigate([album.route]);\n    }\n  }\n\n  /* TrackBy function for better ngFor performance */\n  trackByAlbumId(_index: number, album: Album): string {\n    return album.id;\n  }\n  \n}", "<!-- Collections Page - Fresh Implementation -->\n<div class=\"collections-page anim-c\">\n  \n  \n  <!-- Site Header -->\n  <app-site-header></app-site-header>\n  \n  <!-- TypeScript-based Square Animation (space-like movement) -->\n  <app-squares-animation [count]=\"48\" [enabled]=\"true\"></app-squares-animation>\n\n  <!-- Main Content -->\n  <main class=\"collections-main\">\n    \n    <!-- Hero Section -->\n    <section class=\"hero\">\n      <div class=\"hero-content\">\n        <h1 class=\"title\">MUSIC COLLECTIONS</h1>\n        <p class=\"subtitle\">Explore Our Curated Musical Experiences</p>\n      </div>\n      <div class=\"hero-background\">\n        <div class=\"overlay\"></div>\n      </div>\n    </section>\n\n    <!-- Album Cards Container -->\n    <div class=\"albums-container\">\n      \n      <!-- Albums Grid -->\n      <div class=\"albums-grid\">\n        <div class=\"album-card\" \n             *ngFor=\"let album of albums; trackBy: trackByAlbumId\" \n             (click)=\"navigateToAlbum(album.id)\"\n             [class.featured]=\"album.featured\"\n             [class.ethereal-glassy]=\"album.id === 'ethereal'\"\n             [class.cd-unreadable]=\"album.id === 'unknown-prism'\">\n          \n          <div class=\"card-image\">\n            <img [src]=\"album.coverImage\" [alt]=\"album.title\" loading=\"lazy\" />\n            <div class=\"card-overlay\">\n              <div class=\"play-button\">\n                <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\n                  <path d=\"M8 5V19L19 12L8 5Z\" fill=\"currentColor\"/>\n                </svg>\n              </div>\n            </div>\n          </div>\n          \n          <div class=\"card-content\">\n            <h3 class=\"album-title\">{{ album.title }}</h3>\n            <p class=\"album-artist\">{{ album.artist }}</p>\n            <div class=\"album-meta\">\n              <span class=\"track-count\">{{ album.trackCount }} tracks</span>\n              <span class=\"year\">{{ album.year }}</span>\n            </div>\n            <p class=\"album-description\">{{ album.description }}</p>\n            <div class=\"album-tags\">\n              <span class=\"tag\" *ngFor=\"let tag of album.tags\">{{ tag }}</span>\n            </div>\n          </div>\n          \n        </div>\n      </div>\n      \n    </div>\n    \n  </main>\n  \n</div> "],
  "mappings": "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",
  "names": []
}
