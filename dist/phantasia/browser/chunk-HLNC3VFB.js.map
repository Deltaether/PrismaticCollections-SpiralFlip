{"version":3,"sources":["node_modules/.pnpm/howler@2.2.4/node_modules/howler/dist/howler.js","node_modules/.pnpm/@angular+material@20.2.1_6454c0930df7c912b2ef33598e3c1604/node_modules/@angular/material/fesm2022/card.mjs","node_modules/.pnpm/@angular+material@20.2.1_6454c0930df7c912b2ef33598e3c1604/node_modules/@angular/material/fesm2022/error-options.mjs","node_modules/.pnpm/@angular+material@20.2.1_6454c0930df7c912b2ef33598e3c1604/node_modules/@angular/material/fesm2022/error-state.mjs","node_modules/.pnpm/@angular+cdk@20.2.1_@angular+common@20.1.4_@angular+core@20.1.4_@angular+compiler@20.1._b1186cf6030b5c2736340dec250d600a/node_modules/@angular/cdk/fesm2022/observers/private.mjs","node_modules/.pnpm/@angular+material@20.2.1_6454c0930df7c912b2ef33598e3c1604/node_modules/@angular/material/fesm2022/form-field2.mjs","node_modules/.pnpm/@angular+material@20.2.1_6454c0930df7c912b2ef33598e3c1604/node_modules/@angular/material/fesm2022/chips.mjs","src/app/services/credit-verification.service.ts","src/app/pages/collections/phantasia/services/dynamic-artist.service.ts","src/app/pages/collections/phantasia/services/audio.service.ts","src/app/pages/collections/phantasia/tools/music-player/music-player.component.ts","src/app/pages/collections/phantasia/tools/music-player/music-player.component.html","src/app/pages/collections/phantasia/tools/music-player/audio.service.ts","src/app/services/music-state-manager.service.ts","src/app/components/loading-screen/loading-screen.component.ts","src/app/components/loading-screen/loading-screen.component.html","src/app/components/dynamic-artist-cards/artist-card/artist-card.component.ts","src/app/components/dynamic-artist-cards/artist-card/artist-card.component.html","src/app/components/dynamic-artist-cards/currently-playing-artists.service.ts","src/app/components/dynamic-artist-cards/dynamic-artist-cards.component.ts","src/app/components/dynamic-artist-cards/dynamic-artist-cards.component.html","src/app/components/special-mentions/special-mentions.component.ts","src/app/components/special-mentions/special-mentions.component.html"],"sourcesContent":["/*!\n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create the global controller. All contained methods and properties apply\n   * to all sounds that are currently playing or will be in the future.\n   */\n  var HowlerGlobal = function() {\n    this.init();\n  };\n  HowlerGlobal.prototype = {\n    /**\n     * Initialize the global Howler object.\n     * @return {Howler}\n     */\n    init: function() {\n      var self = this || Howler;\n\n      // Create a global ID counter.\n      self._counter = 1000;\n\n      // Pool of unlocked HTML5 Audio objects.\n      self._html5AudioPool = [];\n      self.html5PoolSize = 10;\n\n      // Internal properties.\n      self._codecs = {};\n      self._howls = [];\n      self._muted = false;\n      self._volume = 1;\n      self._canPlayEvent = 'canplaythrough';\n      self._navigator = (typeof window !== 'undefined' && window.navigator) ? window.navigator : null;\n\n      // Public properties.\n      self.masterGain = null;\n      self.noAudio = false;\n      self.usingWebAudio = true;\n      self.autoSuspend = true;\n      self.ctx = null;\n\n      // Set to false to disable the auto audio unlocker.\n      self.autoUnlock = true;\n\n      // Setup the various state values for global tracking.\n      self._setup();\n\n      return self;\n    },\n\n    /**\n     * Get/set the global volume for all sounds.\n     * @param  {Float} vol Volume from 0.0 to 1.0.\n     * @return {Howler/Float}     Returns self or current volume.\n     */\n    volume: function(vol) {\n      var self = this || Howler;\n      vol = parseFloat(vol);\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        self._volume = vol;\n\n        // Don't update any of the nodes if we are muted.\n        if (self._muted) {\n          return self;\n        }\n\n        // When using Web Audio, we just need to adjust the master gain.\n        if (self.usingWebAudio) {\n          self.masterGain.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n        }\n\n        // Loop through and change volume for all HTML5 audio nodes.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and change the volumes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node) {\n                sound._node.volume = sound._volume * vol;\n              }\n            }\n          }\n        }\n\n        return self;\n      }\n\n      return self._volume;\n    },\n\n    /**\n     * Handle muting and unmuting globally.\n     * @param  {Boolean} muted Is muted or not.\n     */\n    mute: function(muted) {\n      var self = this || Howler;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!self.ctx) {\n        setupAudioContext();\n      }\n\n      self._muted = muted;\n\n      // With Web Audio, we just need to mute the master gain.\n      if (self.usingWebAudio) {\n        self.masterGain.gain.setValueAtTime(muted ? 0 : self._volume, Howler.ctx.currentTime);\n      }\n\n      // Loop through and mute all HTML5 Audio nodes.\n      for (var i=0; i<self._howls.length; i++) {\n        if (!self._howls[i]._webAudio) {\n          // Get all of the sounds in this Howl group.\n          var ids = self._howls[i]._getSoundIds();\n\n          // Loop through all sounds and mark the audio node as muted.\n          for (var j=0; j<ids.length; j++) {\n            var sound = self._howls[i]._soundById(ids[j]);\n\n            if (sound && sound._node) {\n              sound._node.muted = (muted) ? true : sound._muted;\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Handle stopping all sounds globally.\n     */\n    stop: function() {\n      var self = this || Howler;\n\n      // Loop through all Howls and stop them.\n      for (var i=0; i<self._howls.length; i++) {\n        self._howls[i].stop();\n      }\n\n      return self;\n    },\n\n    /**\n     * Unload and destroy all currently loaded Howl objects.\n     * @return {Howler}\n     */\n    unload: function() {\n      var self = this || Howler;\n\n      for (var i=self._howls.length-1; i>=0; i--) {\n        self._howls[i].unload();\n      }\n\n      // Create a new AudioContext to make sure it is fully reset.\n      if (self.usingWebAudio && self.ctx && typeof self.ctx.close !== 'undefined') {\n        self.ctx.close();\n        self.ctx = null;\n        setupAudioContext();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for codec support of specific extension.\n     * @param  {String} ext Audio file extention.\n     * @return {Boolean}\n     */\n    codecs: function(ext) {\n      return (this || Howler)._codecs[ext.replace(/^x-/, '')];\n    },\n\n    /**\n     * Setup various state values for global tracking.\n     * @return {Howler}\n     */\n    _setup: function() {\n      var self = this || Howler;\n\n      // Keeps track of the suspend/resume state of the AudioContext.\n      self.state = self.ctx ? self.ctx.state || 'suspended' : 'suspended';\n\n      // Automatically begin the 30-second suspend process\n      self._autoSuspend();\n\n      // Check if audio is available.\n      if (!self.usingWebAudio) {\n        // No audio is available on this system if noAudio is set to true.\n        if (typeof Audio !== 'undefined') {\n          try {\n            var test = new Audio();\n\n            // Check if the canplaythrough event is available.\n            if (typeof test.oncanplaythrough === 'undefined') {\n              self._canPlayEvent = 'canplay';\n            }\n          } catch(e) {\n            self.noAudio = true;\n          }\n        } else {\n          self.noAudio = true;\n        }\n      }\n\n      // Test to make sure audio isn't disabled in Internet Explorer.\n      try {\n        var test = new Audio();\n        if (test.muted) {\n          self.noAudio = true;\n        }\n      } catch (e) {}\n\n      // Check for supported codecs.\n      if (!self.noAudio) {\n        self._setupCodecs();\n      }\n\n      return self;\n    },\n\n    /**\n     * Check for browser support for various codecs and cache the results.\n     * @return {Howler}\n     */\n    _setupCodecs: function() {\n      var self = this || Howler;\n      var audioTest = null;\n\n      // Must wrap in a try/catch because IE11 in server mode throws an error.\n      try {\n        audioTest = (typeof Audio !== 'undefined') ? new Audio() : null;\n      } catch (err) {\n        return self;\n      }\n\n      if (!audioTest || typeof audioTest.canPlayType !== 'function') {\n        return self;\n      }\n\n      var mpegTest = audioTest.canPlayType('audio/mpeg;').replace(/^no$/, '');\n\n      // Opera version <33 has mixed MP3 support, so we need to check for and block it.\n      var ua = self._navigator ? self._navigator.userAgent : '';\n      var checkOpera = ua.match(/OPR\\/(\\d+)/g);\n      var isOldOpera = (checkOpera && parseInt(checkOpera[0].split('/')[1], 10) < 33);\n      var checkSafari = ua.indexOf('Safari') !== -1 && ua.indexOf('Chrome') === -1;\n      var safariVersion = ua.match(/Version\\/(.*?) /);\n      var isOldSafari = (checkSafari && safariVersion && parseInt(safariVersion[1], 10) < 15);\n\n      self._codecs = {\n        mp3: !!(!isOldOpera && (mpegTest || audioTest.canPlayType('audio/mp3;').replace(/^no$/, ''))),\n        mpeg: !!mpegTest,\n        opus: !!audioTest.canPlayType('audio/ogg; codecs=\"opus\"').replace(/^no$/, ''),\n        ogg: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        oga: !!audioTest.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, ''),\n        wav: !!(audioTest.canPlayType('audio/wav; codecs=\"1\"') || audioTest.canPlayType('audio/wav')).replace(/^no$/, ''),\n        aac: !!audioTest.canPlayType('audio/aac;').replace(/^no$/, ''),\n        caf: !!audioTest.canPlayType('audio/x-caf;').replace(/^no$/, ''),\n        m4a: !!(audioTest.canPlayType('audio/x-m4a;') || audioTest.canPlayType('audio/m4a;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        m4b: !!(audioTest.canPlayType('audio/x-m4b;') || audioTest.canPlayType('audio/m4b;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        mp4: !!(audioTest.canPlayType('audio/x-mp4;') || audioTest.canPlayType('audio/mp4;') || audioTest.canPlayType('audio/aac;')).replace(/^no$/, ''),\n        weba: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        webm: !!(!isOldSafari && audioTest.canPlayType('audio/webm; codecs=\"vorbis\"').replace(/^no$/, '')),\n        dolby: !!audioTest.canPlayType('audio/mp4; codecs=\"ec-3\"').replace(/^no$/, ''),\n        flac: !!(audioTest.canPlayType('audio/x-flac;') || audioTest.canPlayType('audio/flac;')).replace(/^no$/, '')\n      };\n\n      return self;\n    },\n\n    /**\n     * Some browsers/devices will only allow audio to be played after a user interaction.\n     * Attempt to automatically unlock audio on the first user interaction.\n     * Concept from: http://paulbakaus.com/tutorials/html5/web-audio-on-ios/\n     * @return {Howler}\n     */\n    _unlockAudio: function() {\n      var self = this || Howler;\n\n      // Only run this if Web Audio is supported and it hasn't already been unlocked.\n      if (self._audioUnlocked || !self.ctx) {\n        return;\n      }\n\n      self._audioUnlocked = false;\n      self.autoUnlock = false;\n\n      // Some mobile devices/platforms have distortion issues when opening/closing tabs and/or web views.\n      // Bugs in the browser (especially Mobile Safari) can cause the sampleRate to change from 44100 to 48000.\n      // By calling Howler.unload(), we create a new AudioContext with the correct sampleRate.\n      if (!self._mobileUnloaded && self.ctx.sampleRate !== 44100) {\n        self._mobileUnloaded = true;\n        self.unload();\n      }\n\n      // Scratch buffer for enabling iOS to dispose of web audio buffers correctly, as per:\n      // http://stackoverflow.com/questions/24119684\n      self._scratchBuffer = self.ctx.createBuffer(1, 1, 22050);\n\n      // Call this method on touch start to create and play a buffer,\n      // then check if the audio actually played to determine if\n      // audio has now been unlocked on iOS, Android, etc.\n      var unlock = function(e) {\n        // Create a pool of unlocked HTML5 Audio objects that can\n        // be used for playing sounds without user interaction. HTML5\n        // Audio objects must be individually unlocked, as opposed\n        // to the WebAudio API which only needs a single activation.\n        // This must occur before WebAudio setup or the source.onended\n        // event will not fire.\n        while (self._html5AudioPool.length < self.html5PoolSize) {\n          try {\n            var audioNode = new Audio();\n\n            // Mark this Audio object as unlocked to ensure it can get returned\n            // to the unlocked pool when released.\n            audioNode._unlocked = true;\n\n            // Add the audio node to the pool.\n            self._releaseHtml5Audio(audioNode);\n          } catch (e) {\n            self.noAudio = true;\n            break;\n          }\n        }\n\n        // Loop through any assigned audio nodes and unlock them.\n        for (var i=0; i<self._howls.length; i++) {\n          if (!self._howls[i]._webAudio) {\n            // Get all of the sounds in this Howl group.\n            var ids = self._howls[i]._getSoundIds();\n\n            // Loop through all sounds and unlock the audio nodes.\n            for (var j=0; j<ids.length; j++) {\n              var sound = self._howls[i]._soundById(ids[j]);\n\n              if (sound && sound._node && !sound._node._unlocked) {\n                sound._node._unlocked = true;\n                sound._node.load();\n              }\n            }\n          }\n        }\n\n        // Fix Android can not play in suspend state.\n        self._autoResume();\n\n        // Create an empty buffer.\n        var source = self.ctx.createBufferSource();\n        source.buffer = self._scratchBuffer;\n        source.connect(self.ctx.destination);\n\n        // Play the empty buffer.\n        if (typeof source.start === 'undefined') {\n          source.noteOn(0);\n        } else {\n          source.start(0);\n        }\n\n        // Calling resume() on a stack initiated by user gesture is what actually unlocks the audio on Android Chrome >= 55.\n        if (typeof self.ctx.resume === 'function') {\n          self.ctx.resume();\n        }\n\n        // Setup a timeout to check that we are unlocked on the next event loop.\n        source.onended = function() {\n          source.disconnect(0);\n\n          // Update the unlocked state and prevent this check from happening again.\n          self._audioUnlocked = true;\n\n          // Remove the touch start listener.\n          document.removeEventListener('touchstart', unlock, true);\n          document.removeEventListener('touchend', unlock, true);\n          document.removeEventListener('click', unlock, true);\n          document.removeEventListener('keydown', unlock, true);\n\n          // Let all sounds know that audio has been unlocked.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('unlock');\n          }\n        };\n      };\n\n      // Setup a touch start listener to attempt an unlock in.\n      document.addEventListener('touchstart', unlock, true);\n      document.addEventListener('touchend', unlock, true);\n      document.addEventListener('click', unlock, true);\n      document.addEventListener('keydown', unlock, true);\n\n      return self;\n    },\n\n    /**\n     * Get an unlocked HTML5 Audio object from the pool. If none are left,\n     * return a new Audio object and throw a warning.\n     * @return {Audio} HTML5 Audio object.\n     */\n    _obtainHtml5Audio: function() {\n      var self = this || Howler;\n\n      // Return the next object from the pool if one exists.\n      if (self._html5AudioPool.length) {\n        return self._html5AudioPool.pop();\n      }\n\n      //.Check if the audio is locked and throw a warning.\n      var testPlay = new Audio().play();\n      if (testPlay && typeof Promise !== 'undefined' && (testPlay instanceof Promise || typeof testPlay.then === 'function')) {\n        testPlay.catch(function() {\n          console.warn('HTML5 Audio pool exhausted, returning potentially locked audio object.');\n        });\n      }\n\n      return new Audio();\n    },\n\n    /**\n     * Return an activated HTML5 Audio object to the pool.\n     * @return {Howler}\n     */\n    _releaseHtml5Audio: function(audio) {\n      var self = this || Howler;\n\n      // Don't add audio to the pool if we don't know if it has been unlocked.\n      if (audio._unlocked) {\n        self._html5AudioPool.push(audio);\n      }\n\n      return self;\n    },\n\n    /**\n     * Automatically suspend the Web Audio AudioContext after no sound has played for 30 seconds.\n     * This saves processing/energy and fixes various browser-specific bugs with audio getting stuck.\n     * @return {Howler}\n     */\n    _autoSuspend: function() {\n      var self = this;\n\n      if (!self.autoSuspend || !self.ctx || typeof self.ctx.suspend === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      // Check if any sounds are playing.\n      for (var i=0; i<self._howls.length; i++) {\n        if (self._howls[i]._webAudio) {\n          for (var j=0; j<self._howls[i]._sounds.length; j++) {\n            if (!self._howls[i]._sounds[j]._paused) {\n              return self;\n            }\n          }\n        }\n      }\n\n      if (self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n      }\n\n      // If no sound has played after 30 seconds, suspend the context.\n      self._suspendTimer = setTimeout(function() {\n        if (!self.autoSuspend) {\n          return;\n        }\n\n        self._suspendTimer = null;\n        self.state = 'suspending';\n\n        // Handle updating the state of the audio context after suspending.\n        var handleSuspension = function() {\n          self.state = 'suspended';\n\n          if (self._resumeAfterSuspend) {\n            delete self._resumeAfterSuspend;\n            self._autoResume();\n          }\n        };\n\n        // Either the state gets suspended or it is interrupted.\n        // Either way, we need to update the state to suspended.\n        self.ctx.suspend().then(handleSuspension, handleSuspension);\n      }, 30000);\n\n      return self;\n    },\n\n    /**\n     * Automatically resume the Web Audio AudioContext when a new sound is played.\n     * @return {Howler}\n     */\n    _autoResume: function() {\n      var self = this;\n\n      if (!self.ctx || typeof self.ctx.resume === 'undefined' || !Howler.usingWebAudio) {\n        return;\n      }\n\n      if (self.state === 'running' && self.ctx.state !== 'interrupted' && self._suspendTimer) {\n        clearTimeout(self._suspendTimer);\n        self._suspendTimer = null;\n      } else if (self.state === 'suspended' || self.state === 'running' && self.ctx.state === 'interrupted') {\n        self.ctx.resume().then(function() {\n          self.state = 'running';\n\n          // Emit to all Howls that the audio has resumed.\n          for (var i=0; i<self._howls.length; i++) {\n            self._howls[i]._emit('resume');\n          }\n        });\n\n        if (self._suspendTimer) {\n          clearTimeout(self._suspendTimer);\n          self._suspendTimer = null;\n        }\n      } else if (self.state === 'suspending') {\n        self._resumeAfterSuspend = true;\n      }\n\n      return self;\n    }\n  };\n\n  // Setup the global audio controller.\n  var Howler = new HowlerGlobal();\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create an audio group controller.\n   * @param {Object} o Passed in properties for this group.\n   */\n  var Howl = function(o) {\n    var self = this;\n\n    // Throw an error if no source is provided.\n    if (!o.src || o.src.length === 0) {\n      console.error('An array of source files must be passed with any new Howl.');\n      return;\n    }\n\n    self.init(o);\n  };\n  Howl.prototype = {\n    /**\n     * Initialize a new Howl group object.\n     * @param  {Object} o Passed in properties for this group.\n     * @return {Howl}\n     */\n    init: function(o) {\n      var self = this;\n\n      // If we don't have an AudioContext created yet, run the setup.\n      if (!Howler.ctx) {\n        setupAudioContext();\n      }\n\n      // Setup user-defined default properties.\n      self._autoplay = o.autoplay || false;\n      self._format = (typeof o.format !== 'string') ? o.format : [o.format];\n      self._html5 = o.html5 || false;\n      self._muted = o.mute || false;\n      self._loop = o.loop || false;\n      self._pool = o.pool || 5;\n      self._preload = (typeof o.preload === 'boolean' || o.preload === 'metadata') ? o.preload : true;\n      self._rate = o.rate || 1;\n      self._sprite = o.sprite || {};\n      self._src = (typeof o.src !== 'string') ? o.src : [o.src];\n      self._volume = o.volume !== undefined ? o.volume : 1;\n      self._xhr = {\n        method: o.xhr && o.xhr.method ? o.xhr.method : 'GET',\n        headers: o.xhr && o.xhr.headers ? o.xhr.headers : null,\n        withCredentials: o.xhr && o.xhr.withCredentials ? o.xhr.withCredentials : false,\n      };\n\n      // Setup all other default properties.\n      self._duration = 0;\n      self._state = 'unloaded';\n      self._sounds = [];\n      self._endTimers = {};\n      self._queue = [];\n      self._playLock = false;\n\n      // Setup event listeners.\n      self._onend = o.onend ? [{fn: o.onend}] : [];\n      self._onfade = o.onfade ? [{fn: o.onfade}] : [];\n      self._onload = o.onload ? [{fn: o.onload}] : [];\n      self._onloaderror = o.onloaderror ? [{fn: o.onloaderror}] : [];\n      self._onplayerror = o.onplayerror ? [{fn: o.onplayerror}] : [];\n      self._onpause = o.onpause ? [{fn: o.onpause}] : [];\n      self._onplay = o.onplay ? [{fn: o.onplay}] : [];\n      self._onstop = o.onstop ? [{fn: o.onstop}] : [];\n      self._onmute = o.onmute ? [{fn: o.onmute}] : [];\n      self._onvolume = o.onvolume ? [{fn: o.onvolume}] : [];\n      self._onrate = o.onrate ? [{fn: o.onrate}] : [];\n      self._onseek = o.onseek ? [{fn: o.onseek}] : [];\n      self._onunlock = o.onunlock ? [{fn: o.onunlock}] : [];\n      self._onresume = [];\n\n      // Web Audio or HTML5 Audio?\n      self._webAudio = Howler.usingWebAudio && !self._html5;\n\n      // Automatically try to enable audio.\n      if (typeof Howler.ctx !== 'undefined' && Howler.ctx && Howler.autoUnlock) {\n        Howler._unlockAudio();\n      }\n\n      // Keep track of this Howl group in the global controller.\n      Howler._howls.push(self);\n\n      // If they selected autoplay, add a play event to the load queue.\n      if (self._autoplay) {\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play();\n          }\n        });\n      }\n\n      // Load the source file unless otherwise specified.\n      if (self._preload && self._preload !== 'none') {\n        self.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Load the audio file.\n     * @return {Howler}\n     */\n    load: function() {\n      var self = this;\n      var url = null;\n\n      // If no audio is available, quit immediately.\n      if (Howler.noAudio) {\n        self._emit('loaderror', null, 'No audio support.');\n        return;\n      }\n\n      // Make sure our source is in an array.\n      if (typeof self._src === 'string') {\n        self._src = [self._src];\n      }\n\n      // Loop through the sources and pick the first one that is compatible.\n      for (var i=0; i<self._src.length; i++) {\n        var ext, str;\n\n        if (self._format && self._format[i]) {\n          // If an extension was specified, use that instead.\n          ext = self._format[i];\n        } else {\n          // Make sure the source is a string.\n          str = self._src[i];\n          if (typeof str !== 'string') {\n            self._emit('loaderror', null, 'Non-string found in selected audio sources - ignoring.');\n            continue;\n          }\n\n          // Extract the file extension from the URL or base64 data URI.\n          ext = /^data:audio\\/([^;,]+);/i.exec(str);\n          if (!ext) {\n            ext = /\\.([^.]+)$/.exec(str.split('?', 1)[0]);\n          }\n\n          if (ext) {\n            ext = ext[1].toLowerCase();\n          }\n        }\n\n        // Log a warning if no extension was found.\n        if (!ext) {\n          console.warn('No file extension was found. Consider using the \"format\" property or specify an extension.');\n        }\n\n        // Check if this extension is available.\n        if (ext && Howler.codecs(ext)) {\n          url = self._src[i];\n          break;\n        }\n      }\n\n      if (!url) {\n        self._emit('loaderror', null, 'No codec support for selected audio sources.');\n        return;\n      }\n\n      self._src = url;\n      self._state = 'loading';\n\n      // If the hosting page is HTTPS and the source isn't,\n      // drop down to HTML5 Audio to avoid Mixed Content errors.\n      if (window.location.protocol === 'https:' && url.slice(0, 5) === 'http:') {\n        self._html5 = true;\n        self._webAudio = false;\n      }\n\n      // Create a new sound object and add it to the pool.\n      new Sound(self);\n\n      // Load and decode the audio data for playback.\n      if (self._webAudio) {\n        loadBuffer(self);\n      }\n\n      return self;\n    },\n\n    /**\n     * Play a sound or resume previous playback.\n     * @param  {String/Number} sprite   Sprite name for sprite playback or sound id to continue previous.\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Number}          Sound ID.\n     */\n    play: function(sprite, internal) {\n      var self = this;\n      var id = null;\n\n      // Determine if a sprite, sound id or nothing was passed\n      if (typeof sprite === 'number') {\n        id = sprite;\n        sprite = null;\n      } else if (typeof sprite === 'string' && self._state === 'loaded' && !self._sprite[sprite]) {\n        // If the passed sprite doesn't exist, do nothing.\n        return null;\n      } else if (typeof sprite === 'undefined') {\n        // Use the default sound sprite (plays the full audio length).\n        sprite = '__default';\n\n        // Check if there is a single paused sound that isn't ended.\n        // If there is, play that sound. If not, continue as usual.\n        if (!self._playLock) {\n          var num = 0;\n          for (var i=0; i<self._sounds.length; i++) {\n            if (self._sounds[i]._paused && !self._sounds[i]._ended) {\n              num++;\n              id = self._sounds[i]._id;\n            }\n          }\n\n          if (num === 1) {\n            sprite = null;\n          } else {\n            id = null;\n          }\n        }\n      }\n\n      // Get the selected node, or get one from the pool.\n      var sound = id ? self._soundById(id) : self._inactiveSound();\n\n      // If the sound doesn't exist, do nothing.\n      if (!sound) {\n        return null;\n      }\n\n      // Select the sprite definition.\n      if (id && !sprite) {\n        sprite = sound._sprite || '__default';\n      }\n\n      // If the sound hasn't loaded, we must wait to get the audio's duration.\n      // We also need to wait to make sure we don't run into race conditions with\n      // the order of function calls.\n      if (self._state !== 'loaded') {\n        // Set the sprite value on this sound.\n        sound._sprite = sprite;\n\n        // Mark this sound as not ended in case another sound is played before this one loads.\n        sound._ended = false;\n\n        // Add the sound to the queue to be played on load.\n        var soundId = sound._id;\n        self._queue.push({\n          event: 'play',\n          action: function() {\n            self.play(soundId);\n          }\n        });\n\n        return soundId;\n      }\n\n      // Don't play the sound if an id was passed and it is already playing.\n      if (id && !sound._paused) {\n        // Trigger the play event, in order to keep iterating through queue.\n        if (!internal) {\n          self._loadQueue('play');\n        }\n\n        return sound._id;\n      }\n\n      // Make sure the AudioContext isn't suspended, and resume it if it is.\n      if (self._webAudio) {\n        Howler._autoResume();\n      }\n\n      // Determine how long to play for and where to start playing.\n      var seek = Math.max(0, sound._seek > 0 ? sound._seek : self._sprite[sprite][0] / 1000);\n      var duration = Math.max(0, ((self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000) - seek);\n      var timeout = (duration * 1000) / Math.abs(sound._rate);\n      var start = self._sprite[sprite][0] / 1000;\n      var stop = (self._sprite[sprite][0] + self._sprite[sprite][1]) / 1000;\n      sound._sprite = sprite;\n\n      // Mark the sound as ended instantly so that this async playback\n      // doesn't get grabbed by another call to play while this one waits to start.\n      sound._ended = false;\n\n      // Update the parameters of the sound.\n      var setParams = function() {\n        sound._paused = false;\n        sound._seek = seek;\n        sound._start = start;\n        sound._stop = stop;\n        sound._loop = !!(sound._loop || self._sprite[sprite][2]);\n      };\n\n      // End the sound instantly if seek is at the end.\n      if (seek >= stop) {\n        self._ended(sound);\n        return;\n      }\n\n      // Begin the actual playback.\n      var node = sound._node;\n      if (self._webAudio) {\n        // Fire this when the sound is ready to play to begin Web Audio playback.\n        var playWebAudio = function() {\n          self._playLock = false;\n          setParams();\n          self._refreshBuffer(sound);\n\n          // Setup the playback params.\n          var vol = (sound._muted || self._muted) ? 0 : sound._volume;\n          node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n          sound._playStart = Howler.ctx.currentTime;\n\n          // Play the sound using the supported method.\n          if (typeof node.bufferSource.start === 'undefined') {\n            sound._loop ? node.bufferSource.noteGrainOn(0, seek, 86400) : node.bufferSource.noteGrainOn(0, seek, duration);\n          } else {\n            sound._loop ? node.bufferSource.start(0, seek, 86400) : node.bufferSource.start(0, seek, duration);\n          }\n\n          // Start a new timer if none is present.\n          if (timeout !== Infinity) {\n            self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n          }\n\n          if (!internal) {\n            setTimeout(function() {\n              self._emit('play', sound._id);\n              self._loadQueue();\n            }, 0);\n          }\n        };\n\n        if (Howler.state === 'running' && Howler.ctx.state !== 'interrupted') {\n          playWebAudio();\n        } else {\n          self._playLock = true;\n\n          // Wait for the audio context to resume before playing.\n          self.once('resume', playWebAudio);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      } else {\n        // Fire this when the sound is ready to play to begin HTML5 Audio playback.\n        var playHtml5 = function() {\n          node.currentTime = seek;\n          node.muted = sound._muted || self._muted || Howler._muted || node.muted;\n          node.volume = sound._volume * Howler.volume();\n          node.playbackRate = sound._rate;\n\n          // Some browsers will throw an error if this is called without user interaction.\n          try {\n            var play = node.play();\n\n            // Support older browsers that don't support promises, and thus don't have this issue.\n            if (play && typeof Promise !== 'undefined' && (play instanceof Promise || typeof play.then === 'function')) {\n              // Implements a lock to prevent DOMException: The play() request was interrupted by a call to pause().\n              self._playLock = true;\n\n              // Set param values immediately.\n              setParams();\n\n              // Releases the lock and executes queued actions.\n              play\n                .then(function() {\n                  self._playLock = false;\n                  node._unlocked = true;\n                  if (!internal) {\n                    self._emit('play', sound._id);\n                  } else {\n                    self._loadQueue();\n                  }\n                })\n                .catch(function() {\n                  self._playLock = false;\n                  self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                    'on mobile devices and Chrome where playback was not within a user interaction.');\n\n                  // Reset the ended and paused values.\n                  sound._ended = true;\n                  sound._paused = true;\n                });\n            } else if (!internal) {\n              self._playLock = false;\n              setParams();\n              self._emit('play', sound._id);\n            }\n\n            // Setting rate before playing won't work in IE, so we set it again here.\n            node.playbackRate = sound._rate;\n\n            // If the node is still paused, then we can assume there was a playback issue.\n            if (node.paused) {\n              self._emit('playerror', sound._id, 'Playback was unable to start. This is most commonly an issue ' +\n                'on mobile devices and Chrome where playback was not within a user interaction.');\n              return;\n            }\n\n            // Setup the end timer on sprites or listen for the ended event.\n            if (sprite !== '__default' || sound._loop) {\n              self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n            } else {\n              self._endTimers[sound._id] = function() {\n                // Fire ended on this audio node.\n                self._ended(sound);\n\n                // Clear this listener.\n                node.removeEventListener('ended', self._endTimers[sound._id], false);\n              };\n              node.addEventListener('ended', self._endTimers[sound._id], false);\n            }\n          } catch (err) {\n            self._emit('playerror', sound._id, err);\n          }\n        };\n\n        // If this is streaming audio, make sure the src is set and load again.\n        if (node.src === 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA') {\n          node.src = self._src;\n          node.load();\n        }\n\n        // Play immediately if ready, or wait for the 'canplaythrough'e vent.\n        var loadedNoReadyState = (window && window.ejecta) || (!node.readyState && Howler._navigator.isCocoonJS);\n        if (node.readyState >= 3 || loadedNoReadyState) {\n          playHtml5();\n        } else {\n          self._playLock = true;\n          self._state = 'loading';\n\n          var listener = function() {\n            self._state = 'loaded';\n            \n            // Begin playback.\n            playHtml5();\n\n            // Clear this listener.\n            node.removeEventListener(Howler._canPlayEvent, listener, false);\n          };\n          node.addEventListener(Howler._canPlayEvent, listener, false);\n\n          // Cancel the end timer.\n          self._clearTimer(sound._id);\n        }\n      }\n\n      return sound._id;\n    },\n\n    /**\n     * Pause playback and save current position.\n     * @param  {Number} id The sound ID (empty to pause all in group).\n     * @return {Howl}\n     */\n    pause: function(id) {\n      var self = this;\n\n      // If the sound hasn't loaded or a play() promise is pending, add it to the load queue to pause when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'pause',\n          action: function() {\n            self.pause(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be paused.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound && !sound._paused) {\n          // Reset the seek position.\n          sound._seek = self.seek(ids[i]);\n          sound._rateSeek = 0;\n          sound._paused = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound has been created.\n              if (!sound._node.bufferSource) {\n                continue;\n              }\n\n              if (typeof sound._node.bufferSource.stop === 'undefined') {\n                sound._node.bufferSource.noteOff(0);\n              } else {\n                sound._node.bufferSource.stop(0);\n              }\n\n              // Clean up the buffer source.\n              self._cleanBuffer(sound._node);\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.pause();\n            }\n          }\n        }\n\n        // Fire the pause event, unless `true` is passed as the 2nd argument.\n        if (!arguments[1]) {\n          self._emit('pause', sound ? sound._id : null);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Stop playback and reset to start.\n     * @param  {Number} id The sound ID (empty to stop all in group).\n     * @param  {Boolean} internal Internal Use: true prevents event firing.\n     * @return {Howl}\n     */\n    stop: function(id, internal) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to stop when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'stop',\n          action: function() {\n            self.stop(id);\n          }\n        });\n\n        return self;\n      }\n\n      // If no id is passed, get all ID's to be stopped.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Clear the end timer.\n        self._clearTimer(ids[i]);\n\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          // Reset the seek position.\n          sound._seek = sound._start || 0;\n          sound._rateSeek = 0;\n          sound._paused = true;\n          sound._ended = true;\n\n          // Stop currently running fades.\n          self._stopFade(ids[i]);\n\n          if (sound._node) {\n            if (self._webAudio) {\n              // Make sure the sound's AudioBufferSourceNode has been created.\n              if (sound._node.bufferSource) {\n                if (typeof sound._node.bufferSource.stop === 'undefined') {\n                  sound._node.bufferSource.noteOff(0);\n                } else {\n                  sound._node.bufferSource.stop(0);\n                }\n\n                // Clean up the buffer source.\n                self._cleanBuffer(sound._node);\n              }\n            } else if (!isNaN(sound._node.duration) || sound._node.duration === Infinity) {\n              sound._node.currentTime = sound._start || 0;\n              sound._node.pause();\n\n              // If this is a live stream, stop download once the audio is stopped.\n              if (sound._node.duration === Infinity) {\n                self._clearSound(sound._node);\n              }\n            }\n          }\n\n          if (!internal) {\n            self._emit('stop', sound._id);\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Mute/unmute a single sound or all sounds in this Howl group.\n     * @param  {Boolean} muted Set to true to mute and false to unmute.\n     * @param  {Number} id    The sound ID to update (omit to mute/unmute all).\n     * @return {Howl}\n     */\n    mute: function(muted, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to mute when capable.\n      if (self._state !== 'loaded'|| self._playLock) {\n        self._queue.push({\n          event: 'mute',\n          action: function() {\n            self.mute(muted, id);\n          }\n        });\n\n        return self;\n      }\n\n      // If applying mute/unmute to all sounds, update the group's value.\n      if (typeof id === 'undefined') {\n        if (typeof muted === 'boolean') {\n          self._muted = muted;\n        } else {\n          return self._muted;\n        }\n      }\n\n      // If no id is passed, get all ID's to be muted.\n      var ids = self._getSoundIds(id);\n\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._muted = muted;\n\n          // Cancel active fade and set the volume to the end value.\n          if (sound._interval) {\n            self._stopFade(sound._id);\n          }\n\n          if (self._webAudio && sound._node) {\n            sound._node.gain.setValueAtTime(muted ? 0 : sound._volume, Howler.ctx.currentTime);\n          } else if (sound._node) {\n            sound._node.muted = Howler._muted ? true : muted;\n          }\n\n          self._emit('mute', sound._id);\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the volume of this sound or of the Howl group. This method can optionally take 0, 1 or 2 arguments.\n     *   volume() -> Returns the group's volume value.\n     *   volume(id) -> Returns the sound id's current volume.\n     *   volume(vol) -> Sets the volume of all sounds in this Howl group.\n     *   volume(vol, id) -> Sets the volume of passed sound id.\n     * @return {Howl/Number} Returns self or current volume.\n     */\n    volume: function() {\n      var self = this;\n      var args = arguments;\n      var vol, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // Return the value of the groups' volume.\n        return self._volume;\n      } else if (args.length === 1 || args.length === 2 && typeof args[1] === 'undefined') {\n        // First check if this is an ID, and if not, assume it is a new volume.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          vol = parseFloat(args[0]);\n        }\n      } else if (args.length >= 2) {\n        vol = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the volume or return the current volume.\n      var sound;\n      if (typeof vol !== 'undefined' && vol >= 0 && vol <= 1) {\n        // If the sound hasn't loaded, add it to the load queue to change volume when capable.\n        if (self._state !== 'loaded'|| self._playLock) {\n          self._queue.push({\n            event: 'volume',\n            action: function() {\n              self.volume.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group volume.\n        if (typeof id === 'undefined') {\n          self._volume = vol;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            sound._volume = vol;\n\n            // Stop currently running fades.\n            if (!args[2]) {\n              self._stopFade(id[i]);\n            }\n\n            if (self._webAudio && sound._node && !sound._muted) {\n              sound._node.gain.setValueAtTime(vol, Howler.ctx.currentTime);\n            } else if (sound._node && !sound._muted) {\n              sound._node.volume = vol * Howler.volume();\n            }\n\n            self._emit('volume', sound._id);\n          }\n        }\n      } else {\n        sound = id ? self._soundById(id) : self._sounds[0];\n        return sound ? sound._volume : 0;\n      }\n\n      return self;\n    },\n\n    /**\n     * Fade a currently playing sound between two volumes (if no id is passed, all sounds will fade).\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id (omit to fade all sounds).\n     * @return {Howl}\n     */\n    fade: function(from, to, len, id) {\n      var self = this;\n\n      // If the sound hasn't loaded, add it to the load queue to fade when capable.\n      if (self._state !== 'loaded' || self._playLock) {\n        self._queue.push({\n          event: 'fade',\n          action: function() {\n            self.fade(from, to, len, id);\n          }\n        });\n\n        return self;\n      }\n\n      // Make sure the to/from/len values are numbers.\n      from = Math.min(Math.max(0, parseFloat(from)), 1);\n      to = Math.min(Math.max(0, parseFloat(to)), 1);\n      len = parseFloat(len);\n\n      // Set the volume to the start position.\n      self.volume(from, id);\n\n      // Fade the volume of one or all sounds.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        // Get the sound.\n        var sound = self._soundById(ids[i]);\n\n        // Create a linear fade or fall back to timeouts with HTML5 Audio.\n        if (sound) {\n          // Stop the previous fade if no sprite is being used (otherwise, volume handles this).\n          if (!id) {\n            self._stopFade(ids[i]);\n          }\n\n          // If we are using Web Audio, let the native methods do the actual fade.\n          if (self._webAudio && !sound._muted) {\n            var currentTime = Howler.ctx.currentTime;\n            var end = currentTime + (len / 1000);\n            sound._volume = from;\n            sound._node.gain.setValueAtTime(from, currentTime);\n            sound._node.gain.linearRampToValueAtTime(to, end);\n          }\n\n          self._startFadeInterval(sound, from, to, len, ids[i], typeof id === 'undefined');\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Starts the internal interval to fade a sound.\n     * @param  {Object} sound Reference to sound to fade.\n     * @param  {Number} from The value to fade from (0.0 to 1.0).\n     * @param  {Number} to   The volume to fade to (0.0 to 1.0).\n     * @param  {Number} len  Time in milliseconds to fade.\n     * @param  {Number} id   The sound id to fade.\n     * @param  {Boolean} isGroup   If true, set the volume on the group.\n     */\n    _startFadeInterval: function(sound, from, to, len, id, isGroup) {\n      var self = this;\n      var vol = from;\n      var diff = to - from;\n      var steps = Math.abs(diff / 0.01);\n      var stepLen = Math.max(4, (steps > 0) ? len / steps : len);\n      var lastTick = Date.now();\n\n      // Store the value being faded to.\n      sound._fadeTo = to;\n\n      // Update the volume value on each interval tick.\n      sound._interval = setInterval(function() {\n        // Update the volume based on the time since the last tick.\n        var tick = (Date.now() - lastTick) / len;\n        lastTick = Date.now();\n        vol += diff * tick;\n\n        // Round to within 2 decimal points.\n        vol = Math.round(vol * 100) / 100;\n\n        // Make sure the volume is in the right bounds.\n        if (diff < 0) {\n          vol = Math.max(to, vol);\n        } else {\n          vol = Math.min(to, vol);\n        }\n\n        // Change the volume.\n        if (self._webAudio) {\n          sound._volume = vol;\n        } else {\n          self.volume(vol, sound._id, true);\n        }\n\n        // Set the group's volume.\n        if (isGroup) {\n          self._volume = vol;\n        }\n\n        // When the fade is complete, stop it and fire event.\n        if ((to < from && vol <= to) || (to > from && vol >= to)) {\n          clearInterval(sound._interval);\n          sound._interval = null;\n          sound._fadeTo = null;\n          self.volume(to, sound._id);\n          self._emit('fade', sound._id);\n        }\n      }, stepLen);\n    },\n\n    /**\n     * Internal method that stops the currently playing fade when\n     * a new fade starts, volume is changed or the sound is stopped.\n     * @param  {Number} id The sound id.\n     * @return {Howl}\n     */\n    _stopFade: function(id) {\n      var self = this;\n      var sound = self._soundById(id);\n\n      if (sound && sound._interval) {\n        if (self._webAudio) {\n          sound._node.gain.cancelScheduledValues(Howler.ctx.currentTime);\n        }\n\n        clearInterval(sound._interval);\n        sound._interval = null;\n        self.volume(sound._fadeTo, id);\n        sound._fadeTo = null;\n        self._emit('fade', id);\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the loop parameter on a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   loop() -> Returns the group's loop value.\n     *   loop(id) -> Returns the sound id's loop value.\n     *   loop(loop) -> Sets the loop value for all sounds in this Howl group.\n     *   loop(loop, id) -> Sets the loop value of passed sound id.\n     * @return {Howl/Boolean} Returns self or current loop value.\n     */\n    loop: function() {\n      var self = this;\n      var args = arguments;\n      var loop, id, sound;\n\n      // Determine the values for loop and id.\n      if (args.length === 0) {\n        // Return the grou's loop value.\n        return self._loop;\n      } else if (args.length === 1) {\n        if (typeof args[0] === 'boolean') {\n          loop = args[0];\n          self._loop = loop;\n        } else {\n          // Return this sound's loop value.\n          sound = self._soundById(parseInt(args[0], 10));\n          return sound ? sound._loop : false;\n        }\n      } else if (args.length === 2) {\n        loop = args[0];\n        id = parseInt(args[1], 10);\n      }\n\n      // If no id is passed, get all ID's to be looped.\n      var ids = self._getSoundIds(id);\n      for (var i=0; i<ids.length; i++) {\n        sound = self._soundById(ids[i]);\n\n        if (sound) {\n          sound._loop = loop;\n          if (self._webAudio && sound._node && sound._node.bufferSource) {\n            sound._node.bufferSource.loop = loop;\n            if (loop) {\n              sound._node.bufferSource.loopStart = sound._start || 0;\n              sound._node.bufferSource.loopEnd = sound._stop;\n\n              // If playing, restart playback to ensure looping updates.\n              if (self.playing(ids[i])) {\n                self.pause(ids[i], true);\n                self.play(ids[i], true);\n              }\n            }\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the playback rate of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   rate() -> Returns the first sound node's current playback rate.\n     *   rate(id) -> Returns the sound id's current playback rate.\n     *   rate(rate) -> Sets the playback rate of all sounds in this Howl group.\n     *   rate(rate, id) -> Sets the playback rate of passed sound id.\n     * @return {Howl/Number} Returns self or the current playback rate.\n     */\n    rate: function() {\n      var self = this;\n      var args = arguments;\n      var rate, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current rate of the first node.\n        id = self._sounds[0]._id;\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new rate value.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else {\n          rate = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        rate = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // Update the playback rate or return the current value.\n      var sound;\n      if (typeof rate === 'number') {\n        // If the sound hasn't loaded, add it to the load queue to change playback rate when capable.\n        if (self._state !== 'loaded' || self._playLock) {\n          self._queue.push({\n            event: 'rate',\n            action: function() {\n              self.rate.apply(self, args);\n            }\n          });\n\n          return self;\n        }\n\n        // Set the group rate.\n        if (typeof id === 'undefined') {\n          self._rate = rate;\n        }\n\n        // Update one or all volumes.\n        id = self._getSoundIds(id);\n        for (var i=0; i<id.length; i++) {\n          // Get the sound.\n          sound = self._soundById(id[i]);\n\n          if (sound) {\n            // Keep track of our position when the rate changed and update the playback\n            // start position so we can properly adjust the seek position for time elapsed.\n            if (self.playing(id[i])) {\n              sound._rateSeek = self.seek(id[i]);\n              sound._playStart = self._webAudio ? Howler.ctx.currentTime : sound._playStart;\n            }\n            sound._rate = rate;\n\n            // Change the playback rate.\n            if (self._webAudio && sound._node && sound._node.bufferSource) {\n              sound._node.bufferSource.playbackRate.setValueAtTime(rate, Howler.ctx.currentTime);\n            } else if (sound._node) {\n              sound._node.playbackRate = rate;\n            }\n\n            // Reset the timers.\n            var seek = self.seek(id[i]);\n            var duration = ((self._sprite[sound._sprite][0] + self._sprite[sound._sprite][1]) / 1000) - seek;\n            var timeout = (duration * 1000) / Math.abs(sound._rate);\n\n            // Start a new end timer if sound is already playing.\n            if (self._endTimers[id[i]] || !sound._paused) {\n              self._clearTimer(id[i]);\n              self._endTimers[id[i]] = setTimeout(self._ended.bind(self, sound), timeout);\n            }\n\n            self._emit('rate', sound._id);\n          }\n        }\n      } else {\n        sound = self._soundById(id);\n        return sound ? sound._rate : self._rate;\n      }\n\n      return self;\n    },\n\n    /**\n     * Get/set the seek position of a sound. This method can optionally take 0, 1 or 2 arguments.\n     *   seek() -> Returns the first sound node's current seek position.\n     *   seek(id) -> Returns the sound id's current seek position.\n     *   seek(seek) -> Sets the seek position of the first sound node.\n     *   seek(seek, id) -> Sets the seek position of passed sound id.\n     * @return {Howl/Number} Returns self or the current seek position.\n     */\n    seek: function() {\n      var self = this;\n      var args = arguments;\n      var seek, id;\n\n      // Determine the values based on arguments.\n      if (args.length === 0) {\n        // We will simply return the current position of the first node.\n        if (self._sounds.length) {\n          id = self._sounds[0]._id;\n        }\n      } else if (args.length === 1) {\n        // First check if this is an ID, and if not, assume it is a new seek position.\n        var ids = self._getSoundIds();\n        var index = ids.indexOf(args[0]);\n        if (index >= 0) {\n          id = parseInt(args[0], 10);\n        } else if (self._sounds.length) {\n          id = self._sounds[0]._id;\n          seek = parseFloat(args[0]);\n        }\n      } else if (args.length === 2) {\n        seek = parseFloat(args[0]);\n        id = parseInt(args[1], 10);\n      }\n\n      // If there is no ID, bail out.\n      if (typeof id === 'undefined') {\n        return 0;\n      }\n\n      // If the sound hasn't loaded, add it to the load queue to seek when capable.\n      if (typeof seek === 'number' && (self._state !== 'loaded' || self._playLock)) {\n        self._queue.push({\n          event: 'seek',\n          action: function() {\n            self.seek.apply(self, args);\n          }\n        });\n\n        return self;\n      }\n\n      // Get the sound.\n      var sound = self._soundById(id);\n\n      if (sound) {\n        if (typeof seek === 'number' && seek >= 0) {\n          // Pause the sound and update position for restarting playback.\n          var playing = self.playing(id);\n          if (playing) {\n            self.pause(id, true);\n          }\n\n          // Move the position of the track and cancel timer.\n          sound._seek = seek;\n          sound._ended = false;\n          self._clearTimer(id);\n\n          // Update the seek position for HTML5 Audio.\n          if (!self._webAudio && sound._node && !isNaN(sound._node.duration)) {\n            sound._node.currentTime = seek;\n          }\n\n          // Seek and emit when ready.\n          var seekAndEmit = function() {\n            // Restart the playback if the sound was playing.\n            if (playing) {\n              self.play(id, true);\n            }\n\n            self._emit('seek', id);\n          };\n\n          // Wait for the play lock to be unset before emitting (HTML5 Audio).\n          if (playing && !self._webAudio) {\n            var emitSeek = function() {\n              if (!self._playLock) {\n                seekAndEmit();\n              } else {\n                setTimeout(emitSeek, 0);\n              }\n            };\n            setTimeout(emitSeek, 0);\n          } else {\n            seekAndEmit();\n          }\n        } else {\n          if (self._webAudio) {\n            var realTime = self.playing(id) ? Howler.ctx.currentTime - sound._playStart : 0;\n            var rateSeek = sound._rateSeek ? sound._rateSeek - sound._seek : 0;\n            return sound._seek + (rateSeek + realTime * Math.abs(sound._rate));\n          } else {\n            return sound._node.currentTime;\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Check if a specific sound is currently playing or not (if id is provided), or check if at least one of the sounds in the group is playing or not.\n     * @param  {Number}  id The sound id to check. If none is passed, the whole sound group is checked.\n     * @return {Boolean} True if playing and false if not.\n     */\n    playing: function(id) {\n      var self = this;\n\n      // Check the passed sound ID (if any).\n      if (typeof id === 'number') {\n        var sound = self._soundById(id);\n        return sound ? !sound._paused : false;\n      }\n\n      // Otherwise, loop through all sounds and check if any are playing.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (!self._sounds[i]._paused) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Get the duration of this sound. Passing a sound id will return the sprite duration.\n     * @param  {Number} id The sound id to check. If none is passed, return full source duration.\n     * @return {Number} Audio duration in seconds.\n     */\n    duration: function(id) {\n      var self = this;\n      var duration = self._duration;\n\n      // If we pass an ID, get the sound and return the sprite length.\n      var sound = self._soundById(id);\n      if (sound) {\n        duration = self._sprite[sound._sprite][1] / 1000;\n      }\n\n      return duration;\n    },\n\n    /**\n     * Returns the current loaded state of this Howl.\n     * @return {String} 'unloaded', 'loading', 'loaded'\n     */\n    state: function() {\n      return this._state;\n    },\n\n    /**\n     * Unload and destroy the current Howl object.\n     * This will immediately stop all sound instances attached to this group.\n     */\n    unload: function() {\n      var self = this;\n\n      // Stop playing any active sounds.\n      var sounds = self._sounds;\n      for (var i=0; i<sounds.length; i++) {\n        // Stop the sound if it is currently playing.\n        if (!sounds[i]._paused) {\n          self.stop(sounds[i]._id);\n        }\n\n        // Remove the source or disconnect.\n        if (!self._webAudio) {\n          // Set the source to 0-second silence to stop any downloading (except in IE).\n          self._clearSound(sounds[i]._node);\n\n          // Remove any event listeners.\n          sounds[i]._node.removeEventListener('error', sounds[i]._errorFn, false);\n          sounds[i]._node.removeEventListener(Howler._canPlayEvent, sounds[i]._loadFn, false);\n          sounds[i]._node.removeEventListener('ended', sounds[i]._endFn, false);\n\n          // Release the Audio object back to the pool.\n          Howler._releaseHtml5Audio(sounds[i]._node);\n        }\n\n        // Empty out all of the nodes.\n        delete sounds[i]._node;\n\n        // Make sure all timers are cleared out.\n        self._clearTimer(sounds[i]._id);\n      }\n\n      // Remove the references in the global Howler object.\n      var index = Howler._howls.indexOf(self);\n      if (index >= 0) {\n        Howler._howls.splice(index, 1);\n      }\n\n      // Delete this sound from the cache (if no other Howl is using it).\n      var remCache = true;\n      for (i=0; i<Howler._howls.length; i++) {\n        if (Howler._howls[i]._src === self._src || self._src.indexOf(Howler._howls[i]._src) >= 0) {\n          remCache = false;\n          break;\n        }\n      }\n\n      if (cache && remCache) {\n        delete cache[self._src];\n      }\n\n      // Clear global errors.\n      Howler.noAudio = false;\n\n      // Clear out `self`.\n      self._state = 'unloaded';\n      self._sounds = [];\n      self = null;\n\n      return null;\n    },\n\n    /**\n     * Listen to a custom event.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @param  {Number}   once  (INTERNAL) Marks event to fire only once.\n     * @return {Howl}\n     */\n    on: function(event, fn, id, once) {\n      var self = this;\n      var events = self['_on' + event];\n\n      if (typeof fn === 'function') {\n        events.push(once ? {id: id, fn: fn, once: once} : {id: id, fn: fn});\n      }\n\n      return self;\n    },\n\n    /**\n     * Remove a custom event. Call without parameters to remove all events.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to remove. Leave empty to remove all.\n     * @param  {Number}   id    (optional) Only remove events for this sound.\n     * @return {Howl}\n     */\n    off: function(event, fn, id) {\n      var self = this;\n      var events = self['_on' + event];\n      var i = 0;\n\n      // Allow passing just an event and ID.\n      if (typeof fn === 'number') {\n        id = fn;\n        fn = null;\n      }\n\n      if (fn || id) {\n        // Loop through event store and remove the passed function.\n        for (i=0; i<events.length; i++) {\n          var isId = (id === events[i].id);\n          if (fn === events[i].fn && isId || !fn && isId) {\n            events.splice(i, 1);\n            break;\n          }\n        }\n      } else if (event) {\n        // Clear out all events of this type.\n        self['_on' + event] = [];\n      } else {\n        // Clear out all events of every type.\n        var keys = Object.keys(self);\n        for (i=0; i<keys.length; i++) {\n          if ((keys[i].indexOf('_on') === 0) && Array.isArray(self[keys[i]])) {\n            self[keys[i]] = [];\n          }\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Listen to a custom event and remove it once fired.\n     * @param  {String}   event Event name.\n     * @param  {Function} fn    Listener to call.\n     * @param  {Number}   id    (optional) Only listen to events for this sound.\n     * @return {Howl}\n     */\n    once: function(event, fn, id) {\n      var self = this;\n\n      // Setup the event listener.\n      self.on(event, fn, id, 1);\n\n      return self;\n    },\n\n    /**\n     * Emit all events of a specific type and pass the sound id.\n     * @param  {String} event Event name.\n     * @param  {Number} id    Sound ID.\n     * @param  {Number} msg   Message to go with event.\n     * @return {Howl}\n     */\n    _emit: function(event, id, msg) {\n      var self = this;\n      var events = self['_on' + event];\n\n      // Loop through event store and fire all functions.\n      for (var i=events.length-1; i>=0; i--) {\n        // Only fire the listener if the correct ID is used.\n        if (!events[i].id || events[i].id === id || event === 'load') {\n          setTimeout(function(fn) {\n            fn.call(this, id, msg);\n          }.bind(self, events[i].fn), 0);\n\n          // If this event was setup with `once`, remove it.\n          if (events[i].once) {\n            self.off(event, events[i].fn, events[i].id);\n          }\n        }\n      }\n\n      // Pass the event type into load queue so that it can continue stepping.\n      self._loadQueue(event);\n\n      return self;\n    },\n\n    /**\n     * Queue of actions initiated before the sound has loaded.\n     * These will be called in sequence, with the next only firing\n     * after the previous has finished executing (even if async like play).\n     * @return {Howl}\n     */\n    _loadQueue: function(event) {\n      var self = this;\n\n      if (self._queue.length > 0) {\n        var task = self._queue[0];\n\n        // Remove this task if a matching event was passed.\n        if (task.event === event) {\n          self._queue.shift();\n          self._loadQueue();\n        }\n\n        // Run the task if no event type is passed.\n        if (!event) {\n          task.action();\n        }\n      }\n\n      return self;\n    },\n\n    /**\n     * Fired when playback ends at the end of the duration.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _ended: function(sound) {\n      var self = this;\n      var sprite = sound._sprite;\n\n      // If we are using IE and there was network latency we may be clipping\n      // audio before it completes playing. Lets check the node to make sure it\n      // believes it has completed, before ending the playback.\n      if (!self._webAudio && sound._node && !sound._node.paused && !sound._node.ended && sound._node.currentTime < sound._stop) {\n        setTimeout(self._ended.bind(self, sound), 100);\n        return self;\n      }\n\n      // Should this sound loop?\n      var loop = !!(sound._loop || self._sprite[sprite][2]);\n\n      // Fire the ended event.\n      self._emit('end', sound._id);\n\n      // Restart the playback for HTML5 Audio loop.\n      if (!self._webAudio && loop) {\n        self.stop(sound._id, true).play(sound._id);\n      }\n\n      // Restart this timer if on a Web Audio loop.\n      if (self._webAudio && loop) {\n        self._emit('play', sound._id);\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        sound._playStart = Howler.ctx.currentTime;\n\n        var timeout = ((sound._stop - sound._start) * 1000) / Math.abs(sound._rate);\n        self._endTimers[sound._id] = setTimeout(self._ended.bind(self, sound), timeout);\n      }\n\n      // Mark the node as paused.\n      if (self._webAudio && !loop) {\n        sound._paused = true;\n        sound._ended = true;\n        sound._seek = sound._start || 0;\n        sound._rateSeek = 0;\n        self._clearTimer(sound._id);\n\n        // Clean up the buffer source.\n        self._cleanBuffer(sound._node);\n\n        // Attempt to auto-suspend AudioContext if no sounds are still playing.\n        Howler._autoSuspend();\n      }\n\n      // When using a sprite, end the track.\n      if (!self._webAudio && !loop) {\n        self.stop(sound._id, true);\n      }\n\n      return self;\n    },\n\n    /**\n     * Clear the end timer for a sound playback.\n     * @param  {Number} id The sound ID.\n     * @return {Howl}\n     */\n    _clearTimer: function(id) {\n      var self = this;\n\n      if (self._endTimers[id]) {\n        // Clear the timeout or remove the ended listener.\n        if (typeof self._endTimers[id] !== 'function') {\n          clearTimeout(self._endTimers[id]);\n        } else {\n          var sound = self._soundById(id);\n          if (sound && sound._node) {\n            sound._node.removeEventListener('ended', self._endTimers[id], false);\n          }\n        }\n\n        delete self._endTimers[id];\n      }\n\n      return self;\n    },\n\n    /**\n     * Return the sound identified by this ID, or return null.\n     * @param  {Number} id Sound ID\n     * @return {Object}    Sound object or null.\n     */\n    _soundById: function(id) {\n      var self = this;\n\n      // Loop through all sounds and find the one with this ID.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (id === self._sounds[i]._id) {\n          return self._sounds[i];\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Return an inactive sound from the pool or create a new one.\n     * @return {Sound} Sound playback object.\n     */\n    _inactiveSound: function() {\n      var self = this;\n\n      self._drain();\n\n      // Find the first inactive node to recycle.\n      for (var i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          return self._sounds[i].reset();\n        }\n      }\n\n      // If no inactive node was found, create a new one.\n      return new Sound(self);\n    },\n\n    /**\n     * Drain excess inactive sounds from the pool.\n     */\n    _drain: function() {\n      var self = this;\n      var limit = self._pool;\n      var cnt = 0;\n      var i = 0;\n\n      // If there are less sounds than the max pool size, we are done.\n      if (self._sounds.length < limit) {\n        return;\n      }\n\n      // Count the number of inactive sounds.\n      for (i=0; i<self._sounds.length; i++) {\n        if (self._sounds[i]._ended) {\n          cnt++;\n        }\n      }\n\n      // Remove excess inactive sounds, going in reverse order.\n      for (i=self._sounds.length - 1; i>=0; i--) {\n        if (cnt <= limit) {\n          return;\n        }\n\n        if (self._sounds[i]._ended) {\n          // Disconnect the audio source when using Web Audio.\n          if (self._webAudio && self._sounds[i]._node) {\n            self._sounds[i]._node.disconnect(0);\n          }\n\n          // Remove sounds until we have the pool size.\n          self._sounds.splice(i, 1);\n          cnt--;\n        }\n      }\n    },\n\n    /**\n     * Get all ID's from the sounds pool.\n     * @param  {Number} id Only return one ID if one is passed.\n     * @return {Array}    Array of IDs.\n     */\n    _getSoundIds: function(id) {\n      var self = this;\n\n      if (typeof id === 'undefined') {\n        var ids = [];\n        for (var i=0; i<self._sounds.length; i++) {\n          ids.push(self._sounds[i]._id);\n        }\n\n        return ids;\n      } else {\n        return [id];\n      }\n    },\n\n    /**\n     * Load the sound back into the buffer source.\n     * @param  {Sound} sound The sound object to work with.\n     * @return {Howl}\n     */\n    _refreshBuffer: function(sound) {\n      var self = this;\n\n      // Setup the buffer source for playback.\n      sound._node.bufferSource = Howler.ctx.createBufferSource();\n      sound._node.bufferSource.buffer = cache[self._src];\n\n      // Connect to the correct node.\n      if (sound._panner) {\n        sound._node.bufferSource.connect(sound._panner);\n      } else {\n        sound._node.bufferSource.connect(sound._node);\n      }\n\n      // Setup looping and playback rate.\n      sound._node.bufferSource.loop = sound._loop;\n      if (sound._loop) {\n        sound._node.bufferSource.loopStart = sound._start || 0;\n        sound._node.bufferSource.loopEnd = sound._stop || 0;\n      }\n      sound._node.bufferSource.playbackRate.setValueAtTime(sound._rate, Howler.ctx.currentTime);\n\n      return self;\n    },\n\n    /**\n     * Prevent memory leaks by cleaning up the buffer source after playback.\n     * @param  {Object} node Sound's audio node containing the buffer source.\n     * @return {Howl}\n     */\n    _cleanBuffer: function(node) {\n      var self = this;\n      var isIOS = Howler._navigator && Howler._navigator.vendor.indexOf('Apple') >= 0;\n\n      if (!node.bufferSource) {\n        return self;\n      }\n\n      if (Howler._scratchBuffer && node.bufferSource) {\n        node.bufferSource.onended = null;\n        node.bufferSource.disconnect(0);\n        if (isIOS) {\n          try { node.bufferSource.buffer = Howler._scratchBuffer; } catch(e) {}\n        }\n      }\n      node.bufferSource = null;\n\n      return self;\n    },\n\n    /**\n     * Set the source to a 0-second silence to stop any downloading (except in IE).\n     * @param  {Object} node Audio node to clear.\n     */\n    _clearSound: function(node) {\n      var checkIE = /MSIE |Trident\\//.test(Howler._navigator && Howler._navigator.userAgent);\n      if (!checkIE) {\n        node.src = 'data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA';\n      }\n    }\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Setup the sound object, which each node attached to a Howl group is contained in.\n   * @param {Object} howl The Howl parent group.\n   */\n  var Sound = function(howl) {\n    this._parent = howl;\n    this.init();\n  };\n  Sound.prototype = {\n    /**\n     * Initialize a new Sound object.\n     * @return {Sound}\n     */\n    init: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup the default parameters.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a unique ID for this sound.\n      self._id = ++Howler._counter;\n\n      // Add itself to the parent's pool.\n      parent._sounds.push(self);\n\n      // Create the new node.\n      self.create();\n\n      return self;\n    },\n\n    /**\n     * Create and setup a new sound object, whether HTML5 Audio or Web Audio.\n     * @return {Sound}\n     */\n    create: function() {\n      var self = this;\n      var parent = self._parent;\n      var volume = (Howler._muted || self._muted || self._parent._muted) ? 0 : self._volume;\n\n      if (parent._webAudio) {\n        // Create the gain node for controlling volume (the source will connect to this).\n        self._node = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n        self._node.gain.setValueAtTime(volume, Howler.ctx.currentTime);\n        self._node.paused = true;\n        self._node.connect(Howler.masterGain);\n      } else if (!Howler.noAudio) {\n        // Get an unlocked Audio object from the pool.\n        self._node = Howler._obtainHtml5Audio();\n\n        // Listen for errors (http://dev.w3.org/html5/spec-author-view/spec.html#mediaerror).\n        self._errorFn = self._errorListener.bind(self);\n        self._node.addEventListener('error', self._errorFn, false);\n\n        // Listen for 'canplaythrough' event to let us know the sound is ready.\n        self._loadFn = self._loadListener.bind(self);\n        self._node.addEventListener(Howler._canPlayEvent, self._loadFn, false);\n\n        // Listen for the 'ended' event on the sound to account for edge-case where\n        // a finite sound has a duration of Infinity.\n        self._endFn = self._endListener.bind(self);\n        self._node.addEventListener('ended', self._endFn, false);\n\n        // Setup the new audio node.\n        self._node.src = parent._src;\n        self._node.preload = parent._preload === true ? 'auto' : parent._preload;\n        self._node.volume = volume * Howler.volume();\n\n        // Begin loading the source.\n        self._node.load();\n      }\n\n      return self;\n    },\n\n    /**\n     * Reset the parameters of this sound to the original state (for recycle).\n     * @return {Sound}\n     */\n    reset: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all of the parameters of this sound.\n      self._muted = parent._muted;\n      self._loop = parent._loop;\n      self._volume = parent._volume;\n      self._rate = parent._rate;\n      self._seek = 0;\n      self._rateSeek = 0;\n      self._paused = true;\n      self._ended = true;\n      self._sprite = '__default';\n\n      // Generate a new ID so that it isn't confused with the previous sound.\n      self._id = ++Howler._counter;\n\n      return self;\n    },\n\n    /**\n     * HTML5 Audio error listener callback.\n     */\n    _errorListener: function() {\n      var self = this;\n\n      // Fire an error event and pass back the code.\n      self._parent._emit('loaderror', self._id, self._node.error ? self._node.error.code : 0);\n\n      // Clear the event listener.\n      self._node.removeEventListener('error', self._errorFn, false);\n    },\n\n    /**\n     * HTML5 Audio canplaythrough listener callback.\n     */\n    _loadListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Round up the duration to account for the lower precision in HTML5 Audio.\n      parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n      // Setup a sprite if none is defined.\n      if (Object.keys(parent._sprite).length === 0) {\n        parent._sprite = {__default: [0, parent._duration * 1000]};\n      }\n\n      if (parent._state !== 'loaded') {\n        parent._state = 'loaded';\n        parent._emit('load');\n        parent._loadQueue();\n      }\n\n      // Clear the event listener.\n      self._node.removeEventListener(Howler._canPlayEvent, self._loadFn, false);\n    },\n\n    /**\n     * HTML5 Audio ended listener callback.\n     */\n    _endListener: function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Only handle the `ended`` event if the duration is Infinity.\n      if (parent._duration === Infinity) {\n        // Update the parent duration to match the real audio duration.\n        // Round up the duration to account for the lower precision in HTML5 Audio.\n        parent._duration = Math.ceil(self._node.duration * 10) / 10;\n\n        // Update the sprite that corresponds to the real duration.\n        if (parent._sprite.__default[1] === Infinity) {\n          parent._sprite.__default[1] = parent._duration * 1000;\n        }\n\n        // Run the regular ended method.\n        parent._ended(self);\n      }\n\n      // Clear the event listener since the duration is now correct.\n      self._node.removeEventListener('ended', self._endFn, false);\n    }\n  };\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  var cache = {};\n\n  /**\n   * Buffer a sound from URL, Data URI or cache and decode to audio source (Web Audio API).\n   * @param  {Howl} self\n   */\n  var loadBuffer = function(self) {\n    var url = self._src;\n\n    // Check if the buffer has already been cached and use it instead.\n    if (cache[url]) {\n      // Set the duration from the cache.\n      self._duration = cache[url].duration;\n\n      // Load the sound into this Howl.\n      loadSound(self);\n\n      return;\n    }\n\n    if (/^data:[^;]+;base64,/.test(url)) {\n      // Decode the base64 data URI without XHR, since some browsers don't support it.\n      var data = atob(url.split(',')[1]);\n      var dataView = new Uint8Array(data.length);\n      for (var i=0; i<data.length; ++i) {\n        dataView[i] = data.charCodeAt(i);\n      }\n\n      decodeAudioData(dataView.buffer, self);\n    } else {\n      // Load the buffer from the URL.\n      var xhr = new XMLHttpRequest();\n      xhr.open(self._xhr.method, url, true);\n      xhr.withCredentials = self._xhr.withCredentials;\n      xhr.responseType = 'arraybuffer';\n\n      // Apply any custom headers to the request.\n      if (self._xhr.headers) {\n        Object.keys(self._xhr.headers).forEach(function(key) {\n          xhr.setRequestHeader(key, self._xhr.headers[key]);\n        });\n      }\n\n      xhr.onload = function() {\n        // Make sure we get a successful response back.\n        var code = (xhr.status + '')[0];\n        if (code !== '0' && code !== '2' && code !== '3') {\n          self._emit('loaderror', null, 'Failed loading audio file with status: ' + xhr.status + '.');\n          return;\n        }\n\n        decodeAudioData(xhr.response, self);\n      };\n      xhr.onerror = function() {\n        // If there is an error, switch to HTML5 Audio.\n        if (self._webAudio) {\n          self._html5 = true;\n          self._webAudio = false;\n          self._sounds = [];\n          delete cache[url];\n          self.load();\n        }\n      };\n      safeXhrSend(xhr);\n    }\n  };\n\n  /**\n   * Send the XHR request wrapped in a try/catch.\n   * @param  {Object} xhr XHR to send.\n   */\n  var safeXhrSend = function(xhr) {\n    try {\n      xhr.send();\n    } catch (e) {\n      xhr.onerror();\n    }\n  };\n\n  /**\n   * Decode audio data from an array buffer.\n   * @param  {ArrayBuffer} arraybuffer The audio data.\n   * @param  {Howl}        self\n   */\n  var decodeAudioData = function(arraybuffer, self) {\n    // Fire a load error if something broke.\n    var error = function() {\n      self._emit('loaderror', null, 'Decoding audio data failed.');\n    };\n\n    // Load the sound on success.\n    var success = function(buffer) {\n      if (buffer && self._sounds.length > 0) {\n        cache[self._src] = buffer;\n        loadSound(self, buffer);\n      } else {\n        error();\n      }\n    };\n\n    // Decode the buffer into an audio source.\n    if (typeof Promise !== 'undefined' && Howler.ctx.decodeAudioData.length === 1) {\n      Howler.ctx.decodeAudioData(arraybuffer).then(success).catch(error);\n    } else {\n      Howler.ctx.decodeAudioData(arraybuffer, success, error);\n    }\n  }\n\n  /**\n   * Sound is now loaded, so finish setting everything up and fire the loaded event.\n   * @param  {Howl} self\n   * @param  {Object} buffer The decoded buffer sound source.\n   */\n  var loadSound = function(self, buffer) {\n    // Set the duration.\n    if (buffer && !self._duration) {\n      self._duration = buffer.duration;\n    }\n\n    // Setup a sprite if none is defined.\n    if (Object.keys(self._sprite).length === 0) {\n      self._sprite = {__default: [0, self._duration * 1000]};\n    }\n\n    // Fire the loaded event.\n    if (self._state !== 'loaded') {\n      self._state = 'loaded';\n      self._emit('load');\n      self._loadQueue();\n    }\n  };\n\n  /**\n   * Setup the audio context when available, or switch to HTML5 Audio mode.\n   */\n  var setupAudioContext = function() {\n    // If we have already detected that Web Audio isn't supported, don't run this step again.\n    if (!Howler.usingWebAudio) {\n      return;\n    }\n\n    // Check if we are using Web Audio and setup the AudioContext if we are.\n    try {\n      if (typeof AudioContext !== 'undefined') {\n        Howler.ctx = new AudioContext();\n      } else if (typeof webkitAudioContext !== 'undefined') {\n        Howler.ctx = new webkitAudioContext();\n      } else {\n        Howler.usingWebAudio = false;\n      }\n    } catch(e) {\n      Howler.usingWebAudio = false;\n    }\n\n    // If the audio context creation still failed, set using web audio to false.\n    if (!Howler.ctx) {\n      Howler.usingWebAudio = false;\n    }\n\n    // Check if a webview is being used on iOS8 or earlier (rather than the browser).\n    // If it is, disable Web Audio as it causes crashing.\n    var iOS = (/iP(hone|od|ad)/.test(Howler._navigator && Howler._navigator.platform));\n    var appVersion = Howler._navigator && Howler._navigator.appVersion.match(/OS (\\d+)_(\\d+)_?(\\d+)?/);\n    var version = appVersion ? parseInt(appVersion[1], 10) : null;\n    if (iOS && version && version < 9) {\n      var safari = /safari/.test(Howler._navigator && Howler._navigator.userAgent.toLowerCase());\n      if (Howler._navigator && !safari) {\n        Howler.usingWebAudio = false;\n      }\n    }\n\n    // Create and expose the master GainNode when using Web Audio (useful for plugins or advanced usage).\n    if (Howler.usingWebAudio) {\n      Howler.masterGain = (typeof Howler.ctx.createGain === 'undefined') ? Howler.ctx.createGainNode() : Howler.ctx.createGain();\n      Howler.masterGain.gain.setValueAtTime(Howler._muted ? 0 : Howler._volume, Howler.ctx.currentTime);\n      Howler.masterGain.connect(Howler.ctx.destination);\n    }\n\n    // Re-run the setup on Howler.\n    Howler._setup();\n  };\n\n  // Add support for AMD (Asynchronous Module Definition) libraries such as require.js.\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return {\n        Howler: Howler,\n        Howl: Howl\n      };\n    });\n  }\n\n  // Add support for CommonJS libraries such as browserify.\n  if (typeof exports !== 'undefined') {\n    exports.Howler = Howler;\n    exports.Howl = Howl;\n  }\n\n  // Add to global in Node.js (for testing, etc).\n  if (typeof global !== 'undefined') {\n    global.HowlerGlobal = HowlerGlobal;\n    global.Howler = Howler;\n    global.Howl = Howl;\n    global.Sound = Sound;\n  } else if (typeof window !== 'undefined') {  // Define globally in case AMD is not available or unused.\n    window.HowlerGlobal = HowlerGlobal;\n    window.Howler = Howler;\n    window.Howl = Howl;\n    window.Sound = Sound;\n  }\n})();\n\n\n/*!\n *  Spatial Plugin - Adds support for stereo and 3D audio where Web Audio is supported.\n *  \n *  howler.js v2.2.4\n *  howlerjs.com\n *\n *  (c) 2013-2020, James Simpson of GoldFire Studios\n *  goldfirestudios.com\n *\n *  MIT License\n */\n\n(function() {\n\n  'use strict';\n\n  // Setup default properties.\n  HowlerGlobal.prototype._pos = [0, 0, 0];\n  HowlerGlobal.prototype._orientation = [0, 0, -1, 0, 1, 0];\n\n  /** Global Methods **/\n  /***************************************************************************/\n\n  /**\n   * Helper method to update the stereo panning position of all current Howls.\n   * Future Howls will not use this value unless explicitly set.\n   * @param  {Number} pan A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @return {Howler/Number}     Self or current stereo panning value.\n   */\n  HowlerGlobal.prototype.stereo = function(pan) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Loop through all Howls and update their stereo panning.\n    for (var i=self._howls.length-1; i>=0; i--) {\n      self._howls[i].stereo(pan);\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the position of the listener in 3D cartesian space. Sounds using\n   * 3D position will be relative to the listener's position.\n   * @param  {Number} x The x-position of the listener.\n   * @param  {Number} y The y-position of the listener.\n   * @param  {Number} z The z-position of the listener.\n   * @return {Howler/Array}   Self or current listener position.\n   */\n  HowlerGlobal.prototype.pos = function(x, y, z) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._pos[1] : y;\n    z = (typeof z !== 'number') ? self._pos[2] : z;\n\n    if (typeof x === 'number') {\n      self._pos = [x, y, z];\n\n      if (typeof self.ctx.listener.positionX !== 'undefined') {\n        self.ctx.listener.positionX.setTargetAtTime(self._pos[0], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionY.setTargetAtTime(self._pos[1], Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.positionZ.setTargetAtTime(self._pos[2], Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setPosition(self._pos[0], self._pos[1], self._pos[2]);\n      }\n    } else {\n      return self._pos;\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the listener is pointing in the 3D cartesian space.\n   * A front and up vector must be provided. The front is the direction the\n   * face of the listener is pointing, and up is the direction the top of the\n   * listener is pointing. Thus, these values are expected to be at right angles\n   * from each other.\n   * @param  {Number} x   The x-orientation of the listener.\n   * @param  {Number} y   The y-orientation of the listener.\n   * @param  {Number} z   The z-orientation of the listener.\n   * @param  {Number} xUp The x-orientation of the top of the listener.\n   * @param  {Number} yUp The y-orientation of the top of the listener.\n   * @param  {Number} zUp The z-orientation of the top of the listener.\n   * @return {Howler/Array}     Returns self or the current orientation vectors.\n   */\n  HowlerGlobal.prototype.orientation = function(x, y, z, xUp, yUp, zUp) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self.ctx || !self.ctx.listener) {\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    var or = self._orientation;\n    y = (typeof y !== 'number') ? or[1] : y;\n    z = (typeof z !== 'number') ? or[2] : z;\n    xUp = (typeof xUp !== 'number') ? or[3] : xUp;\n    yUp = (typeof yUp !== 'number') ? or[4] : yUp;\n    zUp = (typeof zUp !== 'number') ? or[5] : zUp;\n\n    if (typeof x === 'number') {\n      self._orientation = [x, y, z, xUp, yUp, zUp];\n\n      if (typeof self.ctx.listener.forwardX !== 'undefined') {\n        self.ctx.listener.forwardX.setTargetAtTime(x, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardY.setTargetAtTime(y, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.forwardZ.setTargetAtTime(z, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upX.setTargetAtTime(xUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upY.setTargetAtTime(yUp, Howler.ctx.currentTime, 0.1);\n        self.ctx.listener.upZ.setTargetAtTime(zUp, Howler.ctx.currentTime, 0.1);\n      } else {\n        self.ctx.listener.setOrientation(x, y, z, xUp, yUp, zUp);\n      }\n    } else {\n      return or;\n    }\n\n    return self;\n  };\n\n  /** Group Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core init.\n   * @param  {Function} _super Core init method.\n   * @return {Howl}\n   */\n  Howl.prototype.init = (function(_super) {\n    return function(o) {\n      var self = this;\n\n      // Setup user-defined default properties.\n      self._orientation = o.orientation || [1, 0, 0];\n      self._stereo = o.stereo || null;\n      self._pos = o.pos || null;\n      self._pannerAttr = {\n        coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : 360,\n        coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : 360,\n        coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : 0,\n        distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : 'inverse',\n        maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : 10000,\n        panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : 'HRTF',\n        refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : 1,\n        rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : 1\n      };\n\n      // Setup event listeners.\n      self._onstereo = o.onstereo ? [{fn: o.onstereo}] : [];\n      self._onpos = o.onpos ? [{fn: o.onpos}] : [];\n      self._onorientation = o.onorientation ? [{fn: o.onorientation}] : [];\n\n      // Complete initilization with howler.js core's init function.\n      return _super.call(this, o);\n    };\n  })(Howl.prototype.init);\n\n  /**\n   * Get/set the stereo panning of the audio source for this sound or all in the group.\n   * @param  {Number} pan  A value of -1.0 is all the way left and 1.0 is all the way right.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Number}    Returns self or the current stereo panning value.\n   */\n  Howl.prototype.stereo = function(pan, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change stereo pan when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'stereo',\n        action: function() {\n          self.stereo(pan, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Check for PannerStereoNode support and fallback to PannerNode if it doesn't exist.\n    var pannerType = (typeof Howler.ctx.createStereoPanner === 'undefined') ? 'spatial' : 'stereo';\n\n    // Setup the group's stereo panning if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's stereo panning if no parameters are passed.\n      if (typeof pan === 'number') {\n        self._stereo = pan;\n        self._pos = [pan, 0, 0];\n      } else {\n        return self._stereo;\n      }\n    }\n\n    // Change the streo panning of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof pan === 'number') {\n          sound._stereo = pan;\n          sound._pos = [pan, 0, 0];\n\n          if (sound._node) {\n            // If we are falling back, make sure the panningModel is equalpower.\n            sound._pannerAttr.panningModel = 'equalpower';\n\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || !sound._panner.pan) {\n              setupPanner(sound, pannerType);\n            }\n\n            if (pannerType === 'spatial') {\n              if (typeof sound._panner.positionX !== 'undefined') {\n                sound._panner.positionX.setValueAtTime(pan, Howler.ctx.currentTime);\n                sound._panner.positionY.setValueAtTime(0, Howler.ctx.currentTime);\n                sound._panner.positionZ.setValueAtTime(0, Howler.ctx.currentTime);\n              } else {\n                sound._panner.setPosition(pan, 0, 0);\n              }\n            } else {\n              sound._panner.pan.setValueAtTime(pan, Howler.ctx.currentTime);\n            }\n          }\n\n          self._emit('stereo', sound._id);\n        } else {\n          return sound._stereo;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the 3D spatial position of the audio source for this sound or group relative to the global listener.\n   * @param  {Number} x  The x-position of the audio source.\n   * @param  {Number} y  The y-position of the audio source.\n   * @param  {Number} z  The z-position of the audio source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial position: [x, y, z].\n   */\n  Howl.prototype.pos = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change position when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'pos',\n        action: function() {\n          self.pos(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? 0 : y;\n    z = (typeof z !== 'number') ? -0.5 : z;\n\n    // Setup the group's spatial position if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial position if no parameters are passed.\n      if (typeof x === 'number') {\n        self._pos = [x, y, z];\n      } else {\n        return self._pos;\n      }\n    }\n\n    // Change the spatial position of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._pos = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner || sound._panner.pan) {\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.positionX !== 'undefined') {\n              sound._panner.positionX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.positionY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.positionZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setPosition(x, y, z);\n            }\n          }\n\n          self._emit('pos', sound._id);\n        } else {\n          return sound._pos;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the direction the audio source is pointing in the 3D cartesian coordinate\n   * space. Depending on how direction the sound is, based on the `cone` attributes,\n   * a sound pointing away from the listener can be quiet or silent.\n   * @param  {Number} x  The x-orientation of the source.\n   * @param  {Number} y  The y-orientation of the source.\n   * @param  {Number} z  The z-orientation of the source.\n   * @param  {Number} id (optional) The sound ID. If none is passed, all in group will be updated.\n   * @return {Howl/Array}    Returns self or the current 3D spatial orientation: [x, y, z].\n   */\n  Howl.prototype.orientation = function(x, y, z, id) {\n    var self = this;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // If the sound hasn't loaded, add it to the load queue to change orientation when capable.\n    if (self._state !== 'loaded') {\n      self._queue.push({\n        event: 'orientation',\n        action: function() {\n          self.orientation(x, y, z, id);\n        }\n      });\n\n      return self;\n    }\n\n    // Set the defaults for optional 'y' & 'z'.\n    y = (typeof y !== 'number') ? self._orientation[1] : y;\n    z = (typeof z !== 'number') ? self._orientation[2] : z;\n\n    // Setup the group's spatial orientation if no ID is passed.\n    if (typeof id === 'undefined') {\n      // Return the group's spatial orientation if no parameters are passed.\n      if (typeof x === 'number') {\n        self._orientation = [x, y, z];\n      } else {\n        return self._orientation;\n      }\n    }\n\n    // Change the spatial orientation of one or all sounds in group.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      // Get the sound.\n      var sound = self._soundById(ids[i]);\n\n      if (sound) {\n        if (typeof x === 'number') {\n          sound._orientation = [x, y, z];\n\n          if (sound._node) {\n            // Check if there is a panner setup and create a new one if not.\n            if (!sound._panner) {\n              // Make sure we have a position to setup the node with.\n              if (!sound._pos) {\n                sound._pos = self._pos || [0, 0, -0.5];\n              }\n\n              setupPanner(sound, 'spatial');\n            }\n\n            if (typeof sound._panner.orientationX !== 'undefined') {\n              sound._panner.orientationX.setValueAtTime(x, Howler.ctx.currentTime);\n              sound._panner.orientationY.setValueAtTime(y, Howler.ctx.currentTime);\n              sound._panner.orientationZ.setValueAtTime(z, Howler.ctx.currentTime);\n            } else {\n              sound._panner.setOrientation(x, y, z);\n            }\n          }\n\n          self._emit('orientation', sound._id);\n        } else {\n          return sound._orientation;\n        }\n      }\n    }\n\n    return self;\n  };\n\n  /**\n   * Get/set the panner node's attributes for a sound or group of sounds.\n   * This method can optionall take 0, 1 or 2 arguments.\n   *   pannerAttr() -> Returns the group's values.\n   *   pannerAttr(id) -> Returns the sound id's values.\n   *   pannerAttr(o) -> Set's the values of all sounds in this Howl group.\n   *   pannerAttr(o, id) -> Set's the values of passed sound id.\n   *\n   *   Attributes:\n   *     coneInnerAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      inside of which there will be no volume reduction.\n   *     coneOuterAngle - (360 by default) A parameter for directional audio sources, this is an angle, in degrees,\n   *                      outside of which the volume will be reduced to a constant value of `coneOuterGain`.\n   *     coneOuterGain - (0 by default) A parameter for directional audio sources, this is the gain outside of the\n   *                     `coneOuterAngle`. It is a linear value in the range `[0, 1]`.\n   *     distanceModel - ('inverse' by default) Determines algorithm used to reduce volume as audio moves away from\n   *                     listener. Can be `linear`, `inverse` or `exponential.\n   *     maxDistance - (10000 by default) The maximum distance between source and listener, after which the volume\n   *                   will not be reduced any further.\n   *     refDistance - (1 by default) A reference distance for reducing volume as source moves further from the listener.\n   *                   This is simply a variable of the distance model and has a different effect depending on which model\n   *                   is used and the scale of your coordinates. Generally, volume will be equal to 1 at this distance.\n   *     rolloffFactor - (1 by default) How quickly the volume reduces as source moves from listener. This is simply a\n   *                     variable of the distance model and can be in the range of `[0, 1]` with `linear` and `[0, ∞]`\n   *                     with `inverse` and `exponential`.\n   *     panningModel - ('HRTF' by default) Determines which spatialization algorithm is used to position audio.\n   *                     Can be `HRTF` or `equalpower`.\n   *\n   * @return {Howl/Object} Returns self or current panner attributes.\n   */\n  Howl.prototype.pannerAttr = function() {\n    var self = this;\n    var args = arguments;\n    var o, id, sound;\n\n    // Stop right here if not using Web Audio.\n    if (!self._webAudio) {\n      return self;\n    }\n\n    // Determine the values based on arguments.\n    if (args.length === 0) {\n      // Return the group's panner attribute values.\n      return self._pannerAttr;\n    } else if (args.length === 1) {\n      if (typeof args[0] === 'object') {\n        o = args[0];\n\n        // Set the grou's panner attribute values.\n        if (typeof id === 'undefined') {\n          if (!o.pannerAttr) {\n            o.pannerAttr = {\n              coneInnerAngle: o.coneInnerAngle,\n              coneOuterAngle: o.coneOuterAngle,\n              coneOuterGain: o.coneOuterGain,\n              distanceModel: o.distanceModel,\n              maxDistance: o.maxDistance,\n              refDistance: o.refDistance,\n              rolloffFactor: o.rolloffFactor,\n              panningModel: o.panningModel\n            };\n          }\n\n          self._pannerAttr = {\n            coneInnerAngle: typeof o.pannerAttr.coneInnerAngle !== 'undefined' ? o.pannerAttr.coneInnerAngle : self._coneInnerAngle,\n            coneOuterAngle: typeof o.pannerAttr.coneOuterAngle !== 'undefined' ? o.pannerAttr.coneOuterAngle : self._coneOuterAngle,\n            coneOuterGain: typeof o.pannerAttr.coneOuterGain !== 'undefined' ? o.pannerAttr.coneOuterGain : self._coneOuterGain,\n            distanceModel: typeof o.pannerAttr.distanceModel !== 'undefined' ? o.pannerAttr.distanceModel : self._distanceModel,\n            maxDistance: typeof o.pannerAttr.maxDistance !== 'undefined' ? o.pannerAttr.maxDistance : self._maxDistance,\n            refDistance: typeof o.pannerAttr.refDistance !== 'undefined' ? o.pannerAttr.refDistance : self._refDistance,\n            rolloffFactor: typeof o.pannerAttr.rolloffFactor !== 'undefined' ? o.pannerAttr.rolloffFactor : self._rolloffFactor,\n            panningModel: typeof o.pannerAttr.panningModel !== 'undefined' ? o.pannerAttr.panningModel : self._panningModel\n          };\n        }\n      } else {\n        // Return this sound's panner attribute values.\n        sound = self._soundById(parseInt(args[0], 10));\n        return sound ? sound._pannerAttr : self._pannerAttr;\n      }\n    } else if (args.length === 2) {\n      o = args[0];\n      id = parseInt(args[1], 10);\n    }\n\n    // Update the values of the specified sounds.\n    var ids = self._getSoundIds(id);\n    for (var i=0; i<ids.length; i++) {\n      sound = self._soundById(ids[i]);\n\n      if (sound) {\n        // Merge the new values into the sound.\n        var pa = sound._pannerAttr;\n        pa = {\n          coneInnerAngle: typeof o.coneInnerAngle !== 'undefined' ? o.coneInnerAngle : pa.coneInnerAngle,\n          coneOuterAngle: typeof o.coneOuterAngle !== 'undefined' ? o.coneOuterAngle : pa.coneOuterAngle,\n          coneOuterGain: typeof o.coneOuterGain !== 'undefined' ? o.coneOuterGain : pa.coneOuterGain,\n          distanceModel: typeof o.distanceModel !== 'undefined' ? o.distanceModel : pa.distanceModel,\n          maxDistance: typeof o.maxDistance !== 'undefined' ? o.maxDistance : pa.maxDistance,\n          refDistance: typeof o.refDistance !== 'undefined' ? o.refDistance : pa.refDistance,\n          rolloffFactor: typeof o.rolloffFactor !== 'undefined' ? o.rolloffFactor : pa.rolloffFactor,\n          panningModel: typeof o.panningModel !== 'undefined' ? o.panningModel : pa.panningModel\n        };\n\n        // Create a new panner node if one doesn't already exist.\n        var panner = sound._panner;\n        if (!panner) {\n          // Make sure we have a position to setup the node with.\n          if (!sound._pos) {\n            sound._pos = self._pos || [0, 0, -0.5];\n          }\n\n          // Create a new panner node.\n          setupPanner(sound, 'spatial');\n          panner = sound._panner\n        }\n\n        // Update the panner values or create a new panner if none exists.\n        panner.coneInnerAngle = pa.coneInnerAngle;\n        panner.coneOuterAngle = pa.coneOuterAngle;\n        panner.coneOuterGain = pa.coneOuterGain;\n        panner.distanceModel = pa.distanceModel;\n        panner.maxDistance = pa.maxDistance;\n        panner.refDistance = pa.refDistance;\n        panner.rolloffFactor = pa.rolloffFactor;\n        panner.panningModel = pa.panningModel;\n      }\n    }\n\n    return self;\n  };\n\n  /** Single Sound Methods **/\n  /***************************************************************************/\n\n  /**\n   * Add new properties to the core Sound init.\n   * @param  {Function} _super Core Sound init method.\n   * @return {Sound}\n   */\n  Sound.prototype.init = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Setup user-defined default properties.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // Complete initilization with howler.js core Sound's init function.\n      _super.call(this);\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      }\n    };\n  })(Sound.prototype.init);\n\n  /**\n   * Override the Sound.reset method to clean up properties from the spatial plugin.\n   * @param  {Function} _super Sound reset method.\n   * @return {Sound}\n   */\n  Sound.prototype.reset = (function(_super) {\n    return function() {\n      var self = this;\n      var parent = self._parent;\n\n      // Reset all spatial plugin properties on this sound.\n      self._orientation = parent._orientation;\n      self._stereo = parent._stereo;\n      self._pos = parent._pos;\n      self._pannerAttr = parent._pannerAttr;\n\n      // If a stereo or position was specified, set it up.\n      if (self._stereo) {\n        parent.stereo(self._stereo);\n      } else if (self._pos) {\n        parent.pos(self._pos[0], self._pos[1], self._pos[2], self._id);\n      } else if (self._panner) {\n        // Disconnect the panner.\n        self._panner.disconnect(0);\n        self._panner = undefined;\n        parent._refreshBuffer(self);\n      }\n\n      // Complete resetting of the sound.\n      return _super.call(this);\n    };\n  })(Sound.prototype.reset);\n\n  /** Helper Methods **/\n  /***************************************************************************/\n\n  /**\n   * Create a new panner node and save it on the sound.\n   * @param  {Sound} sound Specific sound to setup panning on.\n   * @param {String} type Type of panner to create: 'stereo' or 'spatial'.\n   */\n  var setupPanner = function(sound, type) {\n    type = type || 'spatial';\n\n    // Create the new panner node.\n    if (type === 'spatial') {\n      sound._panner = Howler.ctx.createPanner();\n      sound._panner.coneInnerAngle = sound._pannerAttr.coneInnerAngle;\n      sound._panner.coneOuterAngle = sound._pannerAttr.coneOuterAngle;\n      sound._panner.coneOuterGain = sound._pannerAttr.coneOuterGain;\n      sound._panner.distanceModel = sound._pannerAttr.distanceModel;\n      sound._panner.maxDistance = sound._pannerAttr.maxDistance;\n      sound._panner.refDistance = sound._pannerAttr.refDistance;\n      sound._panner.rolloffFactor = sound._pannerAttr.rolloffFactor;\n      sound._panner.panningModel = sound._pannerAttr.panningModel;\n\n      if (typeof sound._panner.positionX !== 'undefined') {\n        sound._panner.positionX.setValueAtTime(sound._pos[0], Howler.ctx.currentTime);\n        sound._panner.positionY.setValueAtTime(sound._pos[1], Howler.ctx.currentTime);\n        sound._panner.positionZ.setValueAtTime(sound._pos[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setPosition(sound._pos[0], sound._pos[1], sound._pos[2]);\n      }\n\n      if (typeof sound._panner.orientationX !== 'undefined') {\n        sound._panner.orientationX.setValueAtTime(sound._orientation[0], Howler.ctx.currentTime);\n        sound._panner.orientationY.setValueAtTime(sound._orientation[1], Howler.ctx.currentTime);\n        sound._panner.orientationZ.setValueAtTime(sound._orientation[2], Howler.ctx.currentTime);\n      } else {\n        sound._panner.setOrientation(sound._orientation[0], sound._orientation[1], sound._orientation[2]);\n      }\n    } else {\n      sound._panner = Howler.ctx.createStereoPanner();\n      sound._panner.pan.setValueAtTime(sound._stereo, Howler.ctx.currentTime);\n    }\n\n    sound._panner.connect(sound._node);\n\n    // Update the connections.\n    if (!sound._paused) {\n      sound._parent.pause(sound._id, true).play(sound._id, true);\n    }\n  };\n})();\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Directive, NgModule } from '@angular/core';\nimport { MatCommonModule } from './common-module.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token that can be used to provide the default options the card module. */\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"], [\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"], [\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"], [\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"], [\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], \"*\"];\nconst _c2 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\", \"*\"];\nconst _c3 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c4 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst MAT_CARD_CONFIG = new InjectionToken('MAT_CARD_CONFIG');\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCard {\n  appearance;\n  constructor() {\n    const config = inject(MAT_CARD_CONFIG, {\n      optional: true\n    });\n    this.appearance = config?.appearance || 'raised';\n  }\n  static ɵfac = function MatCard_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCard)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCard,\n    selectors: [[\"mat-card\"]],\n    hostAttrs: [1, \"mat-mdc-card\", \"mdc-card\"],\n    hostVars: 8,\n    hostBindings: function MatCard_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-card-outlined\", ctx.appearance === \"outlined\")(\"mdc-card--outlined\", ctx.appearance === \"outlined\")(\"mat-mdc-card-filled\", ctx.appearance === \"filled\")(\"mdc-card--filled\", ctx.appearance === \"filled\");\n      }\n    },\n    inputs: {\n      appearance: \"appearance\"\n    },\n    exportAs: [\"matCard\"],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatCard_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    styles: [\".mat-mdc-card{display:flex;flex-direction:column;box-sizing:border-box;position:relative;border-style:solid;border-width:0;background-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-elevated-container-elevation, var(--mat-sys-level1))}.mat-mdc-card::after{position:absolute;top:0;left:0;width:100%;height:100%;border:solid 1px rgba(0,0,0,0);content:\\\"\\\";display:block;pointer-events:none;box-sizing:border-box;border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium))}.mat-mdc-card-outlined{background-color:var(--mat-card-outlined-container-color, var(--mat-sys-surface));border-radius:var(--mat-card-outlined-container-shape, var(--mat-sys-corner-medium));border-width:var(--mat-card-outlined-outline-width, 1px);border-color:var(--mat-card-outlined-outline-color, var(--mat-sys-outline-variant));box-shadow:var(--mat-card-outlined-container-elevation, var(--mat-sys-level0))}.mat-mdc-card-outlined::after{border:none}.mat-mdc-card-filled{background-color:var(--mat-card-filled-container-color, var(--mat-sys-surface-container-highest));border-radius:var(--mat-card-filled-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-filled-container-elevation, var(--mat-sys-level0))}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mat-mdc-card-actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font, var(--mat-sys-title-large-font));line-height:var(--mat-card-title-text-line-height, var(--mat-sys-title-large-line-height));font-size:var(--mat-card-title-text-size, var(--mat-sys-title-large-size));letter-spacing:var(--mat-card-title-text-tracking, var(--mat-sys-title-large-tracking));font-weight:var(--mat-card-title-text-weight, var(--mat-sys-title-large-weight))}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color, var(--mat-sys-on-surface));font-family:var(--mat-card-subtitle-text-font, var(--mat-sys-title-medium-font));line-height:var(--mat-card-subtitle-text-line-height, var(--mat-sys-title-medium-line-height));font-size:var(--mat-card-subtitle-text-size, var(--mat-sys-title-medium-size));letter-spacing:var(--mat-card-subtitle-text-tracking, var(--mat-sys-title-medium-tracking));font-weight:var(--mat-card-subtitle-text-weight, var(--mat-sys-title-medium-weight))}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCard, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card',\n      host: {\n        'class': 'mat-mdc-card mdc-card',\n        '[class.mat-mdc-card-outlined]': 'appearance === \"outlined\"',\n        '[class.mdc-card--outlined]': 'appearance === \"outlined\"',\n        '[class.mat-mdc-card-filled]': 'appearance === \"filled\"',\n        '[class.mdc-card--filled]': 'appearance === \"filled\"'\n      },\n      exportAs: 'matCard',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-content></ng-content>\\n\",\n      styles: [\".mat-mdc-card{display:flex;flex-direction:column;box-sizing:border-box;position:relative;border-style:solid;border-width:0;background-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-elevated-container-elevation, var(--mat-sys-level1))}.mat-mdc-card::after{position:absolute;top:0;left:0;width:100%;height:100%;border:solid 1px rgba(0,0,0,0);content:\\\"\\\";display:block;pointer-events:none;box-sizing:border-box;border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium))}.mat-mdc-card-outlined{background-color:var(--mat-card-outlined-container-color, var(--mat-sys-surface));border-radius:var(--mat-card-outlined-container-shape, var(--mat-sys-corner-medium));border-width:var(--mat-card-outlined-outline-width, 1px);border-color:var(--mat-card-outlined-outline-color, var(--mat-sys-outline-variant));box-shadow:var(--mat-card-outlined-container-elevation, var(--mat-sys-level0))}.mat-mdc-card-outlined::after{border:none}.mat-mdc-card-filled{background-color:var(--mat-card-filled-container-color, var(--mat-sys-surface-container-highest));border-radius:var(--mat-card-filled-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-filled-container-elevation, var(--mat-sys-level0))}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mat-mdc-card-actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font, var(--mat-sys-title-large-font));line-height:var(--mat-card-title-text-line-height, var(--mat-sys-title-large-line-height));font-size:var(--mat-card-title-text-size, var(--mat-sys-title-large-size));letter-spacing:var(--mat-card-title-text-tracking, var(--mat-sys-title-large-tracking));font-weight:var(--mat-card-title-text-weight, var(--mat-sys-title-large-weight))}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color, var(--mat-sys-on-surface));font-family:var(--mat-card-subtitle-text-font, var(--mat-sys-title-medium-font));line-height:var(--mat-card-subtitle-text-line-height, var(--mat-sys-title-medium-line-height));font-size:var(--mat-card-subtitle-text-size, var(--mat-sys-title-medium-size));letter-spacing:var(--mat-card-subtitle-text-tracking, var(--mat-sys-title-medium-tracking));font-weight:var(--mat-card-subtitle-text-weight, var(--mat-sys-title-medium-weight))}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\\n\"]\n    }]\n  }], () => [], {\n    appearance: [{\n      type: Input\n    }]\n  });\n})();\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardTitle {\n  static ɵfac = function MatCardTitle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardTitle)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardTitle,\n    selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-title\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardTitle, [{\n    type: Directive,\n    args: [{\n      selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n      host: {\n        'class': 'mat-mdc-card-title'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\nclass MatCardTitleGroup {\n  static ɵfac = function MatCardTitleGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardTitleGroup)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCardTitleGroup,\n    selectors: [[\"mat-card-title-group\"]],\n    hostAttrs: [1, \"mat-mdc-card-title-group\"],\n    ngContentSelectors: _c2,\n    decls: 4,\n    vars: 0,\n    template: function MatCardTitleGroup_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵdomElementStart(0, \"div\");\n        i0.ɵɵprojection(1);\n        i0.ɵɵdomElementEnd();\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardTitleGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-title-group',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-mdc-card-title-group'\n      },\n      template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\"\n    }]\n  }], null, null);\n})();\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardContent {\n  static ɵfac = function MatCardContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardContent)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardContent,\n    selectors: [[\"mat-card-content\"]],\n    hostAttrs: [1, \"mat-mdc-card-content\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardContent, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-content',\n      host: {\n        'class': 'mat-mdc-card-content'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardSubtitle {\n  static ɵfac = function MatCardSubtitle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardSubtitle)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardSubtitle,\n    selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-subtitle\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardSubtitle, [{\n    type: Directive,\n    args: [{\n      selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n      host: {\n        'class': 'mat-mdc-card-subtitle'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardActions {\n  // TODO(jelbourn): deprecate `align` in favor of `actionPosition` or `actionAlignment`\n  // as to not conflict with the native `align` attribute.\n  /** Position of the actions inside the card. */\n  align = 'start';\n  static ɵfac = function MatCardActions_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardActions)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardActions,\n    selectors: [[\"mat-card-actions\"]],\n    hostAttrs: [1, \"mat-mdc-card-actions\", \"mdc-card__actions\"],\n    hostVars: 2,\n    hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-card-actions-align-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      align: \"align\"\n    },\n    exportAs: [\"matCardActions\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardActions, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-actions',\n      exportAs: 'matCardActions',\n      host: {\n        'class': 'mat-mdc-card-actions mdc-card__actions',\n        '[class.mat-mdc-card-actions-align-end]': 'align === \"end\"'\n      }\n    }]\n  }], null, {\n    align: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardHeader {\n  static ɵfac = function MatCardHeader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardHeader)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCardHeader,\n    selectors: [[\"mat-card-header\"]],\n    hostAttrs: [1, \"mat-mdc-card-header\"],\n    ngContentSelectors: _c4,\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"mat-mdc-card-header-text\"]],\n    template: function MatCardHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵprojection(0);\n        i0.ɵɵdomElementStart(1, \"div\", 0);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵdomElementEnd();\n        i0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-header',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-mdc-card-header'\n      },\n      template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\"\n    }]\n  }], null, null);\n})();\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardFooter {\n  static ɵfac = function MatCardFooter_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardFooter)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardFooter,\n    selectors: [[\"mat-card-footer\"]],\n    hostAttrs: [1, \"mat-mdc-card-footer\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardFooter, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-footer',\n      host: {\n        'class': 'mat-mdc-card-footer'\n      }\n    }]\n  }], null, null);\n})();\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n// TODO(jelbourn): support `.mdc-card__media-content`.\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardImage {\n  static ɵfac = function MatCardImage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardImage)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardImage,\n    selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-image\", \"mdc-card__media\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-image], [matCardImage]',\n      host: {\n        'class': 'mat-mdc-card-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n/** Same as `MatCardImage`, but small. */\nclass MatCardSmImage {\n  static ɵfac = function MatCardSmImage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardSmImage)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardSmImage,\n    selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-sm-image\", \"mdc-card__media\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardSmImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-sm-image], [matCardImageSmall]',\n      host: {\n        'class': 'mat-mdc-card-sm-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n/** Same as `MatCardImage`, but medium. */\nclass MatCardMdImage {\n  static ɵfac = function MatCardMdImage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardMdImage)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardMdImage,\n    selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-md-image\", \"mdc-card__media\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardMdImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-md-image], [matCardImageMedium]',\n      host: {\n        'class': 'mat-mdc-card-md-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n/** Same as `MatCardImage`, but large. */\nclass MatCardLgImage {\n  static ɵfac = function MatCardLgImage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardLgImage)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardLgImage,\n    selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-lg-image\", \"mdc-card__media\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardLgImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-lg-image], [matCardImageLarge]',\n      host: {\n        'class': 'mat-mdc-card-lg-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n/** Same as `MatCardImage`, but extra-large. */\nclass MatCardXlImage {\n  static ɵfac = function MatCardXlImage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardXlImage)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardXlImage,\n    selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-xl-image\", \"mdc-card__media\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardXlImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-xl-image], [matCardImageXLarge]',\n      host: {\n        'class': 'mat-mdc-card-xl-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardAvatar {\n  static ɵfac = function MatCardAvatar_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardAvatar)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardAvatar,\n    selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-avatar\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardAvatar, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-avatar], [matCardAvatar]',\n      host: {\n        'class': 'mat-mdc-card-avatar'\n      }\n    }]\n  }], null, null);\n})();\nconst CARD_DIRECTIVES = [MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage];\nclass MatCardModule {\n  static ɵfac = function MatCardModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatCardModule,\n    imports: [MatCommonModule, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage],\n    exports: [MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage, MatCommonModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, ...CARD_DIRECTIVES],\n      exports: [CARD_DIRECTIVES, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MAT_CARD_CONFIG, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n","import * as i0 from '@angular/core';\nimport { Injectable } from '@angular/core';\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.dirty || form && form.submitted));\n  }\n  static ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ShowOnDirtyErrorStateMatcher)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ShowOnDirtyErrorStateMatcher,\n    factory: ShowOnDirtyErrorStateMatcher.ɵfac\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ShowOnDirtyErrorStateMatcher, [{\n    type: Injectable\n  }], null, null);\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n  isErrorState(control, form) {\n    return !!(control && control.invalid && (control.touched || form && form.submitted));\n  }\n  static ɵfac = function ErrorStateMatcher_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ErrorStateMatcher)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ErrorStateMatcher,\n    factory: ErrorStateMatcher.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ErrorStateMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\nexport { ErrorStateMatcher, ShowOnDirtyErrorStateMatcher };\n","/**\n * Class that tracks the error state of a component.\n * @docs-private\n */\nclass _ErrorStateTracker {\n    _defaultMatcher;\n    ngControl;\n    _parentFormGroup;\n    _parentForm;\n    _stateChanges;\n    /** Whether the tracker is currently in an error state. */\n    errorState = false;\n    /** User-defined matcher for the error state. */\n    matcher;\n    constructor(_defaultMatcher, ngControl, _parentFormGroup, _parentForm, _stateChanges) {\n        this._defaultMatcher = _defaultMatcher;\n        this.ngControl = ngControl;\n        this._parentFormGroup = _parentFormGroup;\n        this._parentForm = _parentForm;\n        this._stateChanges = _stateChanges;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n        const oldState = this.errorState;\n        const parent = this._parentFormGroup || this._parentForm;\n        const matcher = this.matcher || this._defaultMatcher;\n        const control = this.ngControl ? this.ngControl.control : null;\n        const newState = matcher?.isErrorState(control, parent) ?? false;\n        if (newState !== oldState) {\n            this.errorState = newState;\n            this._stateChanges.next();\n        }\n    }\n}\n\nexport { _ErrorStateTracker };\n\n","import * as i0 from '@angular/core';\nimport { inject, NgZone, RendererFactory2, Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, shareReplay, takeUntil } from 'rxjs/operators';\n\n/**\n * Handler that logs \"ResizeObserver loop limit exceeded\" errors.\n * These errors are not shown in the Chrome console, so we log them to ensure developers are aware.\n * @param e The error\n */\nconst loopLimitExceededErrorHandler = e => {\n  if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n    console.error(`${e.message}. This could indicate a performance issue with your app. See https://github.com/WICG/resize-observer/blob/master/explainer.md#error-handling`);\n  }\n};\n/**\n * A shared ResizeObserver to be used for a particular box type (content-box, border-box, or\n * device-pixel-content-box)\n */\nclass SingleBoxSharedResizeObserver {\n  _box;\n  /** Stream that emits when the shared observer is destroyed. */\n  _destroyed = new Subject();\n  /** Stream of all events from the ResizeObserver. */\n  _resizeSubject = new Subject();\n  /** ResizeObserver used to observe element resize events. */\n  _resizeObserver;\n  /** A map of elements to streams of their resize events. */\n  _elementObservables = new Map();\n  constructor(/** The box type to observe for resizes. */\n  _box) {\n    this._box = _box;\n    if (typeof ResizeObserver !== 'undefined') {\n      this._resizeObserver = new ResizeObserver(entries => this._resizeSubject.next(entries));\n    }\n  }\n  /**\n   * Gets a stream of resize events for the given element.\n   * @param target The element to observe.\n   * @return The stream of resize events for the element.\n   */\n  observe(target) {\n    if (!this._elementObservables.has(target)) {\n      this._elementObservables.set(target, new Observable(observer => {\n        const subscription = this._resizeSubject.subscribe(observer);\n        this._resizeObserver?.observe(target, {\n          box: this._box\n        });\n        return () => {\n          this._resizeObserver?.unobserve(target);\n          subscription.unsubscribe();\n          this._elementObservables.delete(target);\n        };\n      }).pipe(filter(entries => entries.some(entry => entry.target === target)),\n      // Share a replay of the last event so that subsequent calls to observe the same element\n      // receive initial sizing info like the first one. Also enable ref counting so the\n      // element will be automatically unobserved when there are no more subscriptions.\n      shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }), takeUntil(this._destroyed)));\n    }\n    return this._elementObservables.get(target);\n  }\n  /** Destroys this instance. */\n  destroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._resizeSubject.complete();\n    this._elementObservables.clear();\n  }\n}\n/**\n * Allows observing resize events on multiple elements using a shared set of ResizeObserver.\n * Sharing a ResizeObserver instance is recommended for better performance (see\n * https://github.com/WICG/resize-observer/issues/59).\n *\n * Rather than share a single `ResizeObserver`, this class creates one `ResizeObserver` per type\n * of observed box ('content-box', 'border-box', and 'device-pixel-content-box'). This avoids\n * later calls to `observe` with a different box type from influencing the events dispatched to\n * earlier calls.\n */\nclass SharedResizeObserver {\n  _cleanupErrorListener;\n  /** Map of box type to shared resize observer. */\n  _observers = new Map();\n  /** The Angular zone. */\n  _ngZone = inject(NgZone);\n  constructor() {\n    if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      this._ngZone.runOutsideAngular(() => {\n        const renderer = inject(RendererFactory2).createRenderer(null, null);\n        this._cleanupErrorListener = renderer.listen('window', 'error', loopLimitExceededErrorHandler);\n      });\n    }\n  }\n  ngOnDestroy() {\n    for (const [, observer] of this._observers) {\n      observer.destroy();\n    }\n    this._observers.clear();\n    this._cleanupErrorListener?.();\n  }\n  /**\n   * Gets a stream of resize events for the given target element and box type.\n   * @param target The element to observe for resizes.\n   * @param options Options to pass to the `ResizeObserver`\n   * @return The stream of resize events for the element.\n   */\n  observe(target, options) {\n    const box = options?.box || 'content-box';\n    if (!this._observers.has(box)) {\n      this._observers.set(box, new SingleBoxSharedResizeObserver(box));\n    }\n    return this._observers.get(box).observe(target);\n  }\n  static ɵfac = function SharedResizeObserver_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || SharedResizeObserver)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: SharedResizeObserver,\n    factory: SharedResizeObserver.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SharedResizeObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nexport { SharedResizeObserver };\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { NgTemplateOutlet } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, inject, Input, ElementRef, NgZone, Renderer2, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewChild, ChangeDetectorRef, viewChild, computed, contentChild, signal, effect, afterRenderEffect, ContentChild, ContentChildren } from '@angular/core';\nimport { Subscription, Subject, merge } from 'rxjs';\nimport { startWith, map, pairwise, filter, takeUntil } from 'rxjs/operators';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { _animationsDisabled } from './animation.mjs';\n\n/** The floating label for a `mat-form-field`. */\nconst _c0 = [\"notch\"];\nconst _c1 = [\"matFormFieldNotchedOutline\", \"\"];\nconst _c2 = [\"*\"];\nconst _c3 = [\"iconPrefixContainer\"];\nconst _c4 = [\"textPrefixContainer\"];\nconst _c5 = [\"iconSuffixContainer\"];\nconst _c6 = [\"textSuffixContainer\"];\nconst _c7 = [\"textField\"];\nconst _c8 = [\"*\", [[\"mat-label\"]], [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"]], [[\"\", \"matTextPrefix\", \"\"]], [[\"\", \"matTextSuffix\", \"\"]], [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"]], [[\"mat-error\"], [\"\", \"matError\", \"\"]], [[\"mat-hint\", 3, \"align\", \"end\"]], [[\"mat-hint\", \"align\", \"end\"]]];\nconst _c9 = [\"*\", \"mat-label\", \"[matPrefix], [matIconPrefix]\", \"[matTextPrefix]\", \"[matTextSuffix]\", \"[matSuffix], [matIconSuffix]\", \"mat-error, [matError]\", \"mat-hint:not([align='end'])\", \"mat-hint[align='end']\"];\nfunction MatFormField_ng_template_0_Conditional_0_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n}\nfunction MatFormField_ng_template_0_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 19);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵconditionalCreate(2, MatFormField_ng_template_0_Conditional_0_Conditional_2_Template, 1, 0, \"span\", 20);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"floating\", ctx_r1._shouldLabelFloat())(\"monitorResize\", ctx_r1._hasOutline())(\"id\", ctx_r1._labelId);\n    i0.ɵɵattribute(\"for\", ctx_r1._control.disableAutomaticLabeling ? null : ctx_r1._control.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵconditional(!ctx_r1.hideRequiredMarker && ctx_r1._control.required ? 2 : -1);\n  }\n}\nfunction MatFormField_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, MatFormField_ng_template_0_Conditional_0_Template, 3, 5, \"label\", 19);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r1._hasFloatingLabel() ? 0 : -1);\n  }\n}\nfunction MatFormField_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 7);\n  }\n}\nfunction MatFormField_Conditional_6_Conditional_1_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_6_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_6_Conditional_1_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵconditionalCreate(1, MatFormField_Conditional_6_Conditional_1_Template, 1, 1, null, 13);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matFormFieldNotchedOutlineOpen\", ctx_r1._shouldLabelFloat());\n    i0.ɵɵadvance();\n    i0.ɵɵconditional(!ctx_r1._forceDisplayInfixLabel() ? 1 : -1);\n  }\n}\nfunction MatFormField_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10, 2);\n    i0.ɵɵprojection(2, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11, 3);\n    i0.ɵɵprojection(2, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_10_ng_template_0_Template(rf, ctx) {}\nfunction MatFormField_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatFormField_Conditional_10_ng_template_0_Template, 0, 0, \"ng-template\", 13);\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const labelTemplate_r3 = i0.ɵɵreference(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", labelTemplate_r3);\n  }\n}\nfunction MatFormField_Conditional_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14, 4);\n    i0.ɵɵprojection(2, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15, 5);\n    i0.ɵɵprojection(2, 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatFormField_Conditional_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 16);\n  }\n}\nfunction MatFormField_Case_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 6);\n  }\n}\nfunction MatFormField_Case_18_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"id\", ctx_r1._hintLabelId);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.hintLabel);\n  }\n}\nfunction MatFormField_Case_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, MatFormField_Case_18_Conditional_0_Template, 2, 2, \"mat-hint\", 21);\n    i0.ɵɵprojection(1, 7);\n    i0.ɵɵelement(2, \"div\", 22);\n    i0.ɵɵprojection(3, 8);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r1.hintLabel ? 0 : -1);\n  }\n}\nclass MatLabel {\n  static ɵfac = function MatLabel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatLabel)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatLabel,\n    selectors: [[\"mat-label\"]]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLabel, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-label'\n    }]\n  }], null, null);\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form-field. */\nclass MatError {\n  id = inject(_IdGenerator).getId('mat-mdc-error-');\n  constructor() {}\n  static ɵfac = function MatError_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatError)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatError,\n    selectors: [[\"mat-error\"], [\"\", \"matError\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-form-field-error\", \"mat-mdc-form-field-bottom-align\"],\n    hostVars: 1,\n    hostBindings: function MatError_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n      }\n    },\n    inputs: {\n      id: \"id\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_ERROR,\n      useExisting: MatError\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatError, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-error, [matError]',\n      host: {\n        'class': 'mat-mdc-form-field-error mat-mdc-form-field-bottom-align',\n        '[id]': 'id'\n      },\n      providers: [{\n        provide: MAT_ERROR,\n        useExisting: MatError\n      }]\n    }]\n  }], () => [], {\n    id: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n  /** Whether to align the hint label at the start or end of the line. */\n  align = 'start';\n  /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n  id = inject(_IdGenerator).getId('mat-mdc-hint-');\n  static ɵfac = function MatHint_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatHint)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatHint,\n    selectors: [[\"mat-hint\"]],\n    hostAttrs: [1, \"mat-mdc-form-field-hint\", \"mat-mdc-form-field-bottom-align\"],\n    hostVars: 4,\n    hostBindings: function MatHint_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"align\", null);\n        i0.ɵɵclassProp(\"mat-mdc-form-field-hint-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      align: \"align\",\n      id: \"id\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatHint, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-hint',\n      host: {\n        'class': 'mat-mdc-form-field-hint mat-mdc-form-field-bottom-align',\n        '[class.mat-mdc-form-field-hint-end]': 'align === \"end\"',\n        '[id]': 'id',\n        // Remove align attribute to prevent it from interfering with layout.\n        '[attr.align]': 'null'\n      }\n    }]\n  }], null, {\n    align: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n  set _isTextSelector(value) {\n    this._isText = true;\n  }\n  _isText = false;\n  static ɵfac = function MatPrefix_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatPrefix)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatPrefix,\n    selectors: [[\"\", \"matPrefix\", \"\"], [\"\", \"matIconPrefix\", \"\"], [\"\", \"matTextPrefix\", \"\"]],\n    inputs: {\n      _isTextSelector: [0, \"matTextPrefix\", \"_isTextSelector\"]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_PREFIX,\n      useExisting: MatPrefix\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPrefix, [{\n    type: Directive,\n    args: [{\n      selector: '[matPrefix], [matIconPrefix], [matTextPrefix]',\n      providers: [{\n        provide: MAT_PREFIX,\n        useExisting: MatPrefix\n      }]\n    }]\n  }], null, {\n    _isTextSelector: [{\n      type: Input,\n      args: ['matTextPrefix']\n    }]\n  });\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n  set _isTextSelector(value) {\n    this._isText = true;\n  }\n  _isText = false;\n  static ɵfac = function MatSuffix_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatSuffix)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatSuffix,\n    selectors: [[\"\", \"matSuffix\", \"\"], [\"\", \"matIconSuffix\", \"\"], [\"\", \"matTextSuffix\", \"\"]],\n    inputs: {\n      _isTextSelector: [0, \"matTextSuffix\", \"_isTextSelector\"]\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_SUFFIX,\n      useExisting: MatSuffix\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatSuffix, [{\n    type: Directive,\n    args: [{\n      selector: '[matSuffix], [matIconSuffix], [matTextSuffix]',\n      providers: [{\n        provide: MAT_SUFFIX,\n        useExisting: MatSuffix\n      }]\n    }]\n  }], null, {\n    _isTextSelector: [{\n      type: Input,\n      args: ['matTextSuffix']\n    }]\n  });\n})();\n\n/** An injion token for the parent form-field. */\nconst FLOATING_LABEL_PARENT = new InjectionToken('FloatingLabelParent');\n/**\n * Internal directive that maintains a MDC floating label. This directive does not\n * use the `MDCFloatingLabelFoundation` class, as it is not worth the size cost of\n * including it just to measure the label width and toggle some classes.\n *\n * The use of a directive allows us to conditionally render a floating label in the\n * template without having to manually manage instantiation and destruction of the\n * floating label component based on.\n *\n * The component is responsible for setting up the floating label styles, measuring label\n * width for the outline notch, and providing inputs that can be used to toggle the\n * label's floating or required state.\n */\nclass MatFormFieldFloatingLabel {\n  _elementRef = inject(ElementRef);\n  /** Whether the label is floating. */\n  get floating() {\n    return this._floating;\n  }\n  set floating(value) {\n    this._floating = value;\n    if (this.monitorResize) {\n      this._handleResize();\n    }\n  }\n  _floating = false;\n  /** Whether to monitor for resize events on the floating label. */\n  get monitorResize() {\n    return this._monitorResize;\n  }\n  set monitorResize(value) {\n    this._monitorResize = value;\n    if (this._monitorResize) {\n      this._subscribeToResize();\n    } else {\n      this._resizeSubscription.unsubscribe();\n    }\n  }\n  _monitorResize = false;\n  /** The shared ResizeObserver. */\n  _resizeObserver = inject(SharedResizeObserver);\n  /** The Angular zone. */\n  _ngZone = inject(NgZone);\n  /** The parent form-field. */\n  _parent = inject(FLOATING_LABEL_PARENT);\n  /** The current resize event subscription. */\n  _resizeSubscription = new Subscription();\n  constructor() {}\n  ngOnDestroy() {\n    this._resizeSubscription.unsubscribe();\n  }\n  /** Gets the width of the label. Used for the outline notch. */\n  getWidth() {\n    return estimateScrollWidth(this._elementRef.nativeElement);\n  }\n  /** Gets the HTML element for the floating label. */\n  get element() {\n    return this._elementRef.nativeElement;\n  }\n  /** Handles resize events from the ResizeObserver. */\n  _handleResize() {\n    // In the case where the label grows in size, the following sequence of events occurs:\n    // 1. The label grows by 1px triggering the ResizeObserver\n    // 2. The notch is expanded to accommodate the entire label\n    // 3. The label expands to its full width, triggering the ResizeObserver again\n    //\n    // This is expected, but If we allow this to all happen within the same macro task it causes an\n    // error: `ResizeObserver loop limit exceeded`. Therefore we push the notch resize out until\n    // the next macro task.\n    setTimeout(() => this._parent._handleLabelResized());\n  }\n  /** Subscribes to resize events. */\n  _subscribeToResize() {\n    this._resizeSubscription.unsubscribe();\n    this._ngZone.runOutsideAngular(() => {\n      this._resizeSubscription = this._resizeObserver.observe(this._elementRef.nativeElement, {\n        box: 'border-box'\n      }).subscribe(() => this._handleResize());\n    });\n  }\n  static ɵfac = function MatFormFieldFloatingLabel_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatFormFieldFloatingLabel)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatFormFieldFloatingLabel,\n    selectors: [[\"label\", \"matFormFieldFloatingLabel\", \"\"]],\n    hostAttrs: [1, \"mdc-floating-label\", \"mat-mdc-floating-label\"],\n    hostVars: 2,\n    hostBindings: function MatFormFieldFloatingLabel_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-floating-label--float-above\", ctx.floating);\n      }\n    },\n    inputs: {\n      floating: \"floating\",\n      monitorResize: \"monitorResize\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldFloatingLabel, [{\n    type: Directive,\n    args: [{\n      selector: 'label[matFormFieldFloatingLabel]',\n      host: {\n        'class': 'mdc-floating-label mat-mdc-floating-label',\n        '[class.mdc-floating-label--float-above]': 'floating'\n      }\n    }]\n  }], () => [], {\n    floating: [{\n      type: Input\n    }],\n    monitorResize: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Estimates the scroll width of an element.\n * via https://github.com/material-components/material-components-web/blob/c0a11ef0d000a098fd0c372be8f12d6a99302855/packages/mdc-dom/ponyfill.ts\n */\nfunction estimateScrollWidth(element) {\n  // Check the offsetParent. If the element inherits display: none from any\n  // parent, the offsetParent property will be null (see\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent).\n  // This check ensures we only clone the node when necessary.\n  const htmlEl = element;\n  if (htmlEl.offsetParent !== null) {\n    return htmlEl.scrollWidth;\n  }\n  const clone = htmlEl.cloneNode(true);\n  clone.style.setProperty('position', 'absolute');\n  clone.style.setProperty('transform', 'translate(-9999px, -9999px)');\n  document.documentElement.appendChild(clone);\n  const scrollWidth = clone.scrollWidth;\n  clone.remove();\n  return scrollWidth;\n}\n\n/** Class added when the line ripple is active. */\nconst ACTIVATE_CLASS = 'mdc-line-ripple--active';\n/** Class added when the line ripple is being deactivated. */\nconst DEACTIVATING_CLASS = 'mdc-line-ripple--deactivating';\n/**\n * Internal directive that creates an instance of the MDC line-ripple component. Using a\n * directive allows us to conditionally render a line-ripple in the template without having\n * to manually create and destroy the `MDCLineRipple` component whenever the condition changes.\n *\n * The directive sets up the styles for the line-ripple and provides an API for activating\n * and deactivating the line-ripple.\n */\nclass MatFormFieldLineRipple {\n  _elementRef = inject(ElementRef);\n  _cleanupTransitionEnd;\n  constructor() {\n    const ngZone = inject(NgZone);\n    const renderer = inject(Renderer2);\n    ngZone.runOutsideAngular(() => {\n      this._cleanupTransitionEnd = renderer.listen(this._elementRef.nativeElement, 'transitionend', this._handleTransitionEnd);\n    });\n  }\n  activate() {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(DEACTIVATING_CLASS);\n    classList.add(ACTIVATE_CLASS);\n  }\n  deactivate() {\n    this._elementRef.nativeElement.classList.add(DEACTIVATING_CLASS);\n  }\n  _handleTransitionEnd = event => {\n    const classList = this._elementRef.nativeElement.classList;\n    const isDeactivating = classList.contains(DEACTIVATING_CLASS);\n    if (event.propertyName === 'opacity' && isDeactivating) {\n      classList.remove(ACTIVATE_CLASS, DEACTIVATING_CLASS);\n    }\n  };\n  ngOnDestroy() {\n    this._cleanupTransitionEnd();\n  }\n  static ɵfac = function MatFormFieldLineRipple_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatFormFieldLineRipple)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatFormFieldLineRipple,\n    selectors: [[\"div\", \"matFormFieldLineRipple\", \"\"]],\n    hostAttrs: [1, \"mdc-line-ripple\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldLineRipple, [{\n    type: Directive,\n    args: [{\n      selector: 'div[matFormFieldLineRipple]',\n      host: {\n        'class': 'mdc-line-ripple'\n      }\n    }]\n  }], () => [], null);\n})();\n\n/**\n * Internal component that creates an instance of the MDC notched-outline component.\n *\n * The component sets up the HTML structure and styles for the notched-outline. It provides\n * inputs to toggle the notch state and width.\n */\nclass MatFormFieldNotchedOutline {\n  _elementRef = inject(ElementRef);\n  _ngZone = inject(NgZone);\n  /** Whether the notch should be opened. */\n  open = false;\n  _notch;\n  ngAfterViewInit() {\n    const element = this._elementRef.nativeElement;\n    const label = element.querySelector('.mdc-floating-label');\n    if (label) {\n      element.classList.add('mdc-notched-outline--upgraded');\n      if (typeof requestAnimationFrame === 'function') {\n        label.style.transitionDuration = '0s';\n        this._ngZone.runOutsideAngular(() => {\n          requestAnimationFrame(() => label.style.transitionDuration = '');\n        });\n      }\n    } else {\n      element.classList.add('mdc-notched-outline--no-label');\n    }\n  }\n  _setNotchWidth(labelWidth) {\n    const notch = this._notch.nativeElement;\n    if (!this.open || !labelWidth) {\n      notch.style.width = '';\n    } else {\n      const NOTCH_ELEMENT_PADDING = 8;\n      const NOTCH_ELEMENT_BORDER = 1;\n      notch.style.width = `calc(${labelWidth}px * var(--mat-mdc-form-field-floating-label-scale, 0.75) + ${NOTCH_ELEMENT_PADDING + NOTCH_ELEMENT_BORDER}px)`;\n    }\n  }\n  _setMaxWidth(prefixAndSuffixWidth) {\n    // Set this only on the notch to avoid style recalculations in other parts of the form field.\n    this._notch.nativeElement.style.setProperty('--mat-form-field-notch-max-width', `calc(100% - ${prefixAndSuffixWidth}px)`);\n  }\n  static ɵfac = function MatFormFieldNotchedOutline_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatFormFieldNotchedOutline)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatFormFieldNotchedOutline,\n    selectors: [[\"div\", \"matFormFieldNotchedOutline\", \"\"]],\n    viewQuery: function MatFormFieldNotchedOutline_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notch = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mdc-notched-outline\"],\n    hostVars: 2,\n    hostBindings: function MatFormFieldNotchedOutline_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-notched-outline--notched\", ctx.open);\n      }\n    },\n    inputs: {\n      open: [0, \"matFormFieldNotchedOutlineOpen\", \"open\"]\n    },\n    attrs: _c1,\n    ngContentSelectors: _c2,\n    decls: 5,\n    vars: 0,\n    consts: [[\"notch\", \"\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__leading\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__notch\"], [1, \"mat-mdc-notch-piece\", \"mdc-notched-outline__trailing\"]],\n    template: function MatFormFieldNotchedOutline_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵdomElement(0, \"div\", 1);\n        i0.ɵɵdomElementStart(1, \"div\", 2, 0);\n        i0.ɵɵprojection(3);\n        i0.ɵɵdomElementEnd();\n        i0.ɵɵdomElement(4, \"div\", 3);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldNotchedOutline, [{\n    type: Component,\n    args: [{\n      selector: 'div[matFormFieldNotchedOutline]',\n      host: {\n        'class': 'mdc-notched-outline',\n        // Besides updating the notch state through the MDC component, we toggle this class through\n        // a host binding in order to ensure that the notched-outline renders correctly on the server.\n        '[class.mdc-notched-outline--notched]': 'open'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__leading\\\"></div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__notch\\\" #notch>\\n  <ng-content></ng-content>\\n</div>\\n<div class=\\\"mat-mdc-notch-piece mdc-notched-outline__trailing\\\"></div>\\n\"\n    }]\n  }], null, {\n    open: [{\n      type: Input,\n      args: ['matFormFieldNotchedOutlineOpen']\n    }],\n    _notch: [{\n      type: ViewChild,\n      args: ['notch']\n    }]\n  });\n})();\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n  /** The value of the control. */\n  value;\n  /**\n   * Stream that emits whenever the state of the control changes such that the parent `MatFormField`\n   * needs to run change detection.\n   */\n  stateChanges;\n  /** The element ID for this control. */\n  id;\n  /** The placeholder for this control. */\n  placeholder;\n  /** Gets the AbstractControlDirective for this control. */\n  ngControl;\n  /** Whether the control is focused. */\n  focused;\n  /** Whether the control is empty. */\n  empty;\n  /** Whether the `MatFormField` label should try to float. */\n  shouldLabelFloat;\n  /** Whether the control is required. */\n  required;\n  /** Whether the control is disabled. */\n  disabled;\n  /** Whether the control is in an error state. */\n  errorState;\n  /**\n   * An optional name for the control type that can be used to distinguish `mat-form-field` elements\n   * based on their control type. The form field will add a class,\n   * `mat-form-field-type-{{controlType}}` to its root element.\n   */\n  controlType;\n  /**\n   * Whether the input is currently in an autofilled state. If property is not present on the\n   * control it is assumed to be false.\n   */\n  autofilled;\n  /**\n   * Value of `aria-describedby` that should be merged with the described-by ids\n   * which are set by the form-field.\n   */\n  userAriaDescribedBy;\n  /**\n   * Whether to automatically assign the ID of the form field as the `for` attribute\n   * on the `<label>` inside the form field. Set this to true to prevent the form\n   * field from associating the label with non-native elements.\n   */\n  disableAutomaticLabeling;\n  /** Gets the list of element IDs that currently describe this control. */\n  describedByIds;\n  static ɵfac = function MatFormFieldControl_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatFormFieldControl)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatFormFieldControl\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldControl, [{\n    type: Directive\n  }], null, null);\n})();\n\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n  return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n  return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n  return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/** Default appearance used by the form field. */\nconst DEFAULT_APPEARANCE = 'fill';\n/**\n * Whether the label for form fields should by default float `always`,\n * `never`, or `auto`.\n */\nconst DEFAULT_FLOAT_LABEL = 'auto';\n/** Default way that the subscript element height is set. */\nconst DEFAULT_SUBSCRIPT_SIZING = 'fixed';\n/**\n * Default transform for docked floating labels in a MDC text-field. This value has been\n * extracted from the MDC text-field styles because we programmatically modify the docked\n * label transform, but do not want to accidentally discard the default label transform.\n */\nconst FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM = `translateY(-50%)`;\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _platform = inject(Platform);\n  _idGenerator = inject(_IdGenerator);\n  _ngZone = inject(NgZone);\n  _defaults = inject(MAT_FORM_FIELD_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  _currentDirection;\n  _textField;\n  _iconPrefixContainer;\n  _textPrefixContainer;\n  _iconSuffixContainer;\n  _textSuffixContainer;\n  _floatingLabel;\n  _notchedOutline;\n  _lineRipple;\n  _iconPrefixContainerSignal = viewChild('iconPrefixContainer', ...(ngDevMode ? [{\n    debugName: \"_iconPrefixContainerSignal\"\n  }] : []));\n  _textPrefixContainerSignal = viewChild('textPrefixContainer', ...(ngDevMode ? [{\n    debugName: \"_textPrefixContainerSignal\"\n  }] : []));\n  _iconSuffixContainerSignal = viewChild('iconSuffixContainer', ...(ngDevMode ? [{\n    debugName: \"_iconSuffixContainerSignal\"\n  }] : []));\n  _textSuffixContainerSignal = viewChild('textSuffixContainer', ...(ngDevMode ? [{\n    debugName: \"_textSuffixContainerSignal\"\n  }] : []));\n  _prefixSuffixContainers = computed(() => {\n    return [this._iconPrefixContainerSignal(), this._textPrefixContainerSignal(), this._iconSuffixContainerSignal(), this._textSuffixContainerSignal()].map(container => container?.nativeElement).filter(e => e !== undefined);\n  }, ...(ngDevMode ? [{\n    debugName: \"_prefixSuffixContainers\"\n  }] : []));\n  _formFieldControl;\n  _prefixChildren;\n  _suffixChildren;\n  _errorChildren;\n  _hintChildren;\n  _labelChild = contentChild(MatLabel, ...(ngDevMode ? [{\n    debugName: \"_labelChild\"\n  }] : []));\n  /** Whether the required marker should be hidden. */\n  get hideRequiredMarker() {\n    return this._hideRequiredMarker;\n  }\n  set hideRequiredMarker(value) {\n    this._hideRequiredMarker = coerceBooleanProperty(value);\n  }\n  _hideRequiredMarker = false;\n  /**\n   * Theme color of the form field. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/form-field/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color = 'primary';\n  /** Whether the label should always float or float as the user types. */\n  get floatLabel() {\n    return this._floatLabel || this._defaults?.floatLabel || DEFAULT_FLOAT_LABEL;\n  }\n  set floatLabel(value) {\n    if (value !== this._floatLabel) {\n      this._floatLabel = value;\n      // For backwards compatibility. Custom form field controls or directives might set\n      // the \"floatLabel\" input and expect the form field view to be updated automatically.\n      // e.g. autocomplete trigger. Ideally we'd get rid of this and the consumers would just\n      // emit the \"stateChanges\" observable. TODO(devversion): consider removing.\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _floatLabel;\n  /** The form field appearance style. */\n  get appearance() {\n    return this._appearanceSignal();\n  }\n  set appearance(value) {\n    const newAppearance = value || this._defaults?.appearance || DEFAULT_APPEARANCE;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (newAppearance !== 'fill' && newAppearance !== 'outline') {\n        throw new Error(`MatFormField: Invalid appearance \"${newAppearance}\", valid values are \"fill\" or \"outline\".`);\n      }\n    }\n    this._appearanceSignal.set(newAppearance);\n  }\n  _appearanceSignal = signal(DEFAULT_APPEARANCE, ...(ngDevMode ? [{\n    debugName: \"_appearanceSignal\"\n  }] : []));\n  /**\n   * Whether the form field should reserve space for one line of hint/error text (default)\n   * or to have the spacing grow from 0px as needed based on the size of the hint/error content.\n   * Note that when using dynamic sizing, layout shifts will occur when hint/error text changes.\n   */\n  get subscriptSizing() {\n    return this._subscriptSizing || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n  }\n  set subscriptSizing(value) {\n    this._subscriptSizing = value || this._defaults?.subscriptSizing || DEFAULT_SUBSCRIPT_SIZING;\n  }\n  _subscriptSizing = null;\n  /** Text for the form field hint. */\n  get hintLabel() {\n    return this._hintLabel;\n  }\n  set hintLabel(value) {\n    this._hintLabel = value;\n    this._processHints();\n  }\n  _hintLabel = '';\n  _hasIconPrefix = false;\n  _hasTextPrefix = false;\n  _hasIconSuffix = false;\n  _hasTextSuffix = false;\n  // Unique id for the internal form field label.\n  _labelId = this._idGenerator.getId('mat-mdc-form-field-label-');\n  // Unique id for the hint label.\n  _hintLabelId = this._idGenerator.getId('mat-mdc-hint-');\n  // Ids obtained from the error and hint fields\n  _describedByIds;\n  /** Gets the current form field control */\n  get _control() {\n    return this._explicitFormFieldControl || this._formFieldControl;\n  }\n  set _control(value) {\n    this._explicitFormFieldControl = value;\n  }\n  _destroyed = new Subject();\n  _isFocused = null;\n  _explicitFormFieldControl;\n  _previousControl = null;\n  _previousControlValidatorFn = null;\n  _stateChanges;\n  _valueChanges;\n  _describedByChanges;\n  _outlineLabelOffsetResizeObserver = null;\n  _animationsDisabled = _animationsDisabled();\n  constructor() {\n    const defaults = this._defaults;\n    const dir = inject(Directionality);\n    if (defaults) {\n      if (defaults.appearance) {\n        this.appearance = defaults.appearance;\n      }\n      this._hideRequiredMarker = Boolean(defaults?.hideRequiredMarker);\n      if (defaults.color) {\n        this.color = defaults.color;\n      }\n    }\n    // We need this value inside a `afterRenderEffect`, however at the time of writing, reading the\n    // signal directly causes a memory leak (see https://github.com/angular/angular/issues/62980).\n    // TODO(crisbeto): clean this up once the framework issue is resolved.\n    effect(() => this._currentDirection = dir.valueSignal());\n    this._syncOutlineLabelOffset();\n  }\n  ngAfterViewInit() {\n    // Initial focus state sync. This happens rarely, but we want to account for\n    // it in case the form field control has \"focused\" set to true on init.\n    this._updateFocusState();\n    if (!this._animationsDisabled) {\n      this._ngZone.runOutsideAngular(() => {\n        // Enable animations after a certain amount of time so that they don't run on init.\n        setTimeout(() => {\n          this._elementRef.nativeElement.classList.add('mat-form-field-animations-enabled');\n        }, 300);\n      });\n    }\n    // Because the above changes a value used in the template after it was checked, we need\n    // to trigger CD or the change might not be reflected if there is no other CD scheduled.\n    this._changeDetectorRef.detectChanges();\n  }\n  ngAfterContentInit() {\n    this._assertFormFieldControl();\n    this._initializeSubscript();\n    this._initializePrefixAndSuffix();\n  }\n  ngAfterContentChecked() {\n    this._assertFormFieldControl();\n    // if form field was being used with an input in first place and then replaced by other\n    // component such as select.\n    if (this._control !== this._previousControl) {\n      this._initializeControl(this._previousControl);\n      // keep a reference for last validator we had.\n      if (this._control.ngControl && this._control.ngControl.control) {\n        this._previousControlValidatorFn = this._control.ngControl.control.validator;\n      }\n      this._previousControl = this._control;\n    }\n    // make sure the the control has been initialized.\n    if (this._control.ngControl && this._control.ngControl.control) {\n      // get the validators for current control.\n      const validatorFn = this._control.ngControl.control.validator;\n      // if our current validatorFn isn't equal to it might be we are CD behind, marking the\n      // component will allow us to catch up.\n      if (validatorFn !== this._previousControlValidatorFn) {\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n  }\n  ngOnDestroy() {\n    this._outlineLabelOffsetResizeObserver?.disconnect();\n    this._stateChanges?.unsubscribe();\n    this._valueChanges?.unsubscribe();\n    this._describedByChanges?.unsubscribe();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Gets the id of the label element. If no label is present, returns `null`.\n   */\n  getLabelId = computed(() => this._hasFloatingLabel() ? this._labelId : null, ...(ngDevMode ? [{\n    debugName: \"getLabelId\"\n  }] : []));\n  /**\n   * Gets an ElementRef for the element that a overlay attached to the form field\n   * should be positioned relative to.\n   */\n  getConnectedOverlayOrigin() {\n    return this._textField || this._elementRef;\n  }\n  /** Animates the placeholder up and locks it in position. */\n  _animateAndLockLabel() {\n    // This is for backwards compatibility only. Consumers of the form field might use\n    // this method. e.g. the autocomplete trigger. This method has been added to the non-MDC\n    // form field because setting \"floatLabel\" to \"always\" caused the label to float without\n    // animation. This is different in MDC where the label always animates, so this method\n    // is no longer necessary. There doesn't seem any benefit in adding logic to allow changing\n    // the floating label state without animations. The non-MDC implementation was inconsistent\n    // because it always animates if \"floatLabel\" is set away from \"always\".\n    // TODO(devversion): consider removing this method when releasing the MDC form field.\n    if (this._hasFloatingLabel()) {\n      this.floatLabel = 'always';\n    }\n  }\n  /** Initializes the registered form field control. */\n  _initializeControl(previousControl) {\n    const control = this._control;\n    const classPrefix = 'mat-mdc-form-field-type-';\n    if (previousControl) {\n      this._elementRef.nativeElement.classList.remove(classPrefix + previousControl.controlType);\n    }\n    if (control.controlType) {\n      this._elementRef.nativeElement.classList.add(classPrefix + control.controlType);\n    }\n    // Subscribe to changes in the child control state in order to update the form field UI.\n    this._stateChanges?.unsubscribe();\n    this._stateChanges = control.stateChanges.subscribe(() => {\n      this._updateFocusState();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Updating the `aria-describedby` touches the DOM. Only do it if it actually needs to change.\n    this._describedByChanges?.unsubscribe();\n    this._describedByChanges = control.stateChanges.pipe(startWith([undefined, undefined]), map(() => [control.errorState, control.userAriaDescribedBy]), pairwise(), filter(([[prevErrorState, prevDescribedBy], [currentErrorState, currentDescribedBy]]) => {\n      return prevErrorState !== currentErrorState || prevDescribedBy !== currentDescribedBy;\n    })).subscribe(() => this._syncDescribedByIds());\n    this._valueChanges?.unsubscribe();\n    // Run change detection if the value changes.\n    if (control.ngControl && control.ngControl.valueChanges) {\n      this._valueChanges = control.ngControl.valueChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n  }\n  _checkPrefixAndSuffixTypes() {\n    this._hasIconPrefix = !!this._prefixChildren.find(p => !p._isText);\n    this._hasTextPrefix = !!this._prefixChildren.find(p => p._isText);\n    this._hasIconSuffix = !!this._suffixChildren.find(s => !s._isText);\n    this._hasTextSuffix = !!this._suffixChildren.find(s => s._isText);\n  }\n  /** Initializes the prefix and suffix containers. */\n  _initializePrefixAndSuffix() {\n    this._checkPrefixAndSuffixTypes();\n    // Mark the form field as dirty whenever the prefix or suffix children change. This\n    // is necessary because we conditionally display the prefix/suffix containers based\n    // on whether there is projected content.\n    merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n      this._checkPrefixAndSuffixTypes();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  /**\n   * Initializes the subscript by validating hints and synchronizing \"aria-describedby\" ids\n   * with the custom form field control. Also subscribes to hint and error changes in order\n   * to be able to validate and synchronize ids on change.\n   */\n  _initializeSubscript() {\n    // Re-validate when the number of hints changes.\n    this._hintChildren.changes.subscribe(() => {\n      this._processHints();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Update the aria-described by when the number of errors changes.\n    this._errorChildren.changes.subscribe(() => {\n      this._syncDescribedByIds();\n      this._changeDetectorRef.markForCheck();\n    });\n    // Initial mat-hint validation and subscript describedByIds sync.\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n  /** Throws an error if the form field's control is missing. */\n  _assertFormFieldControl() {\n    if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatFormFieldMissingControlError();\n    }\n  }\n  _updateFocusState() {\n    const controlFocused = this._control.focused;\n    // Usually the MDC foundation would call \"activateFocus\" and \"deactivateFocus\" whenever\n    // certain DOM events are emitted. This is not possible in our implementation of the\n    // form field because we support abstract form field controls which are not necessarily\n    // of type input, nor do we have a reference to a native form field control element. Instead\n    // we handle the focus by checking if the abstract form field control focused state changes.\n    if (controlFocused && !this._isFocused) {\n      this._isFocused = true;\n      this._lineRipple?.activate();\n    } else if (!controlFocused && (this._isFocused || this._isFocused === null)) {\n      this._isFocused = false;\n      this._lineRipple?.deactivate();\n    }\n    this._elementRef.nativeElement.classList.toggle('mat-focused', controlFocused);\n    this._textField?.nativeElement.classList.toggle('mdc-text-field--focused', controlFocused);\n  }\n  /**\n   * The floating label in the docked state needs to account for prefixes. The horizontal offset\n   * is calculated whenever the appearance changes to `outline`, the prefixes change, or when the\n   * form field is added to the DOM. This method sets up all subscriptions which are needed to\n   * trigger the label offset update.\n   */\n  _syncOutlineLabelOffset() {\n    afterRenderEffect({\n      earlyRead: () => {\n        if (this._appearanceSignal() !== 'outline') {\n          this._outlineLabelOffsetResizeObserver?.disconnect();\n          return null;\n        }\n        // Setup a resize observer to monitor changes to the size of the prefix / suffix and\n        // readjust the label offset.\n        if (globalThis.ResizeObserver) {\n          this._outlineLabelOffsetResizeObserver ||= new globalThis.ResizeObserver(() => {\n            this._writeOutlinedLabelStyles(this._getOutlinedLabelOffset());\n          });\n          for (const el of this._prefixSuffixContainers()) {\n            this._outlineLabelOffsetResizeObserver.observe(el, {\n              box: 'border-box'\n            });\n          }\n        }\n        return this._getOutlinedLabelOffset();\n      },\n      write: labelStyles => this._writeOutlinedLabelStyles(labelStyles())\n    });\n  }\n  /** Whether the floating label should always float or not. */\n  _shouldAlwaysFloat() {\n    return this.floatLabel === 'always';\n  }\n  _hasOutline() {\n    return this.appearance === 'outline';\n  }\n  /**\n   * Whether the label should display in the infix. Labels in the outline appearance are\n   * displayed as part of the notched-outline and are horizontally offset to account for\n   * form field prefix content. This won't work in server side rendering since we cannot\n   * measure the width of the prefix container. To make the docked label appear as if the\n   * right offset has been calculated, we forcibly render the label inside the infix. Since\n   * the label is part of the infix, the label cannot overflow the prefix content.\n   */\n  _forceDisplayInfixLabel() {\n    return !this._platform.isBrowser && this._prefixChildren.length && !this._shouldLabelFloat();\n  }\n  _hasFloatingLabel = computed(() => !!this._labelChild(), ...(ngDevMode ? [{\n    debugName: \"_hasFloatingLabel\"\n  }] : []));\n  _shouldLabelFloat() {\n    if (!this._hasFloatingLabel()) {\n      return false;\n    }\n    return this._control.shouldLabelFloat || this._shouldAlwaysFloat();\n  }\n  /**\n   * Determines whether a class from the AbstractControlDirective\n   * should be forwarded to the host element.\n   */\n  _shouldForward(prop) {\n    const control = this._control ? this._control.ngControl : null;\n    return control && control[prop];\n  }\n  /** Gets the type of subscript message to render (error or hint). */\n  _getSubscriptMessageType() {\n    return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState ? 'error' : 'hint';\n  }\n  /** Handle label resize events. */\n  _handleLabelResized() {\n    this._refreshOutlineNotchWidth();\n  }\n  /** Refreshes the width of the outline-notch, if present. */\n  _refreshOutlineNotchWidth() {\n    if (!this._hasOutline() || !this._floatingLabel || !this._shouldLabelFloat()) {\n      this._notchedOutline?._setNotchWidth(0);\n    } else {\n      this._notchedOutline?._setNotchWidth(this._floatingLabel.getWidth());\n    }\n  }\n  /** Does any extra processing that is required when handling the hints. */\n  _processHints() {\n    this._validateHints();\n    this._syncDescribedByIds();\n  }\n  /**\n   * Ensure that there is a maximum of one of each \"mat-hint\" alignment specified. The hint\n   * label specified set through the input is being considered as \"start\" aligned.\n   *\n   * This method is a noop if Angular runs in production mode.\n   */\n  _validateHints() {\n    if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      let startHint;\n      let endHint;\n      this._hintChildren.forEach(hint => {\n        if (hint.align === 'start') {\n          if (startHint || this.hintLabel) {\n            throw getMatFormFieldDuplicatedHintError('start');\n          }\n          startHint = hint;\n        } else if (hint.align === 'end') {\n          if (endHint) {\n            throw getMatFormFieldDuplicatedHintError('end');\n          }\n          endHint = hint;\n        }\n      });\n    }\n  }\n  /**\n   * Sets the list of element IDs that describe the child control. This allows the control to update\n   * its `aria-describedby` attribute accordingly.\n   */\n  _syncDescribedByIds() {\n    if (this._control) {\n      let ids = [];\n      // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n      if (this._control.userAriaDescribedBy && typeof this._control.userAriaDescribedBy === 'string') {\n        ids.push(...this._control.userAriaDescribedBy.split(' '));\n      }\n      if (this._getSubscriptMessageType() === 'hint') {\n        const startHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'start') : null;\n        const endHint = this._hintChildren ? this._hintChildren.find(hint => hint.align === 'end') : null;\n        if (startHint) {\n          ids.push(startHint.id);\n        } else if (this._hintLabel) {\n          ids.push(this._hintLabelId);\n        }\n        if (endHint) {\n          ids.push(endHint.id);\n        }\n      } else if (this._errorChildren) {\n        ids.push(...this._errorChildren.map(error => error.id));\n      }\n      const existingDescribedBy = this._control.describedByIds;\n      let toAssign;\n      // In some cases there might be some `aria-describedby` IDs that were assigned directly,\n      // like by the `AriaDescriber` (see #30011). Attempt to preserve them by taking the previous\n      // attribute value and filtering out the IDs that came from the previous `setDescribedByIds`\n      // call. Note the `|| ids` here allows us to avoid duplicating IDs on the first render.\n      if (existingDescribedBy) {\n        const exclude = this._describedByIds || ids;\n        toAssign = ids.concat(existingDescribedBy.filter(id => id && !exclude.includes(id)));\n      } else {\n        toAssign = ids;\n      }\n      this._control.setDescribedByIds(toAssign);\n      this._describedByIds = ids;\n    }\n  }\n  /**\n   * Calculates the horizontal offset of the label in the outline appearance. In the outline\n   * appearance, the notched-outline and label are not relative to the infix container because\n   * the outline intends to surround prefixes, suffixes and the infix. This means that the\n   * floating label by default overlaps prefixes in the docked state. To avoid this, we need to\n   * horizontally offset the label by the width of the prefix container. The MDC text-field does\n   * not need to do this because they use a fixed width for prefixes. Hence, they can simply\n   * incorporate the horizontal offset into their default text-field styles.\n   */\n  _getOutlinedLabelOffset() {\n    if (!this._hasOutline() || !this._floatingLabel) {\n      return null;\n    }\n    // If no prefix is displayed, reset the outline label offset from potential\n    // previous label offset updates.\n    if (!this._iconPrefixContainer && !this._textPrefixContainer) {\n      return ['', null];\n    }\n    // If the form field is not attached to the DOM yet (e.g. in a tab), we defer\n    // the label offset update until the zone stabilizes.\n    if (!this._isAttachedToDom()) {\n      return null;\n    }\n    const iconPrefixContainer = this._iconPrefixContainer?.nativeElement;\n    const textPrefixContainer = this._textPrefixContainer?.nativeElement;\n    const iconSuffixContainer = this._iconSuffixContainer?.nativeElement;\n    const textSuffixContainer = this._textSuffixContainer?.nativeElement;\n    const iconPrefixContainerWidth = iconPrefixContainer?.getBoundingClientRect().width ?? 0;\n    const textPrefixContainerWidth = textPrefixContainer?.getBoundingClientRect().width ?? 0;\n    const iconSuffixContainerWidth = iconSuffixContainer?.getBoundingClientRect().width ?? 0;\n    const textSuffixContainerWidth = textSuffixContainer?.getBoundingClientRect().width ?? 0;\n    // If the directionality is RTL, the x-axis transform needs to be inverted. This\n    // is because `transformX` does not change based on the page directionality.\n    const negate = this._currentDirection === 'rtl' ? '-1' : '1';\n    const prefixWidth = `${iconPrefixContainerWidth + textPrefixContainerWidth}px`;\n    const labelOffset = `var(--mat-mdc-form-field-label-offset-x, 0px)`;\n    const labelHorizontalOffset = `calc(${negate} * (${prefixWidth} + ${labelOffset}))`;\n    // Update the translateX of the floating label to account for the prefix container,\n    // but allow the CSS to override this setting via a CSS variable when the label is\n    // floating.\n    const floatingLabelTransform = 'var(--mat-mdc-form-field-label-transform, ' + `${FLOATING_LABEL_DEFAULT_DOCKED_TRANSFORM} translateX(${labelHorizontalOffset}))`;\n    // Prevent the label from overlapping the suffix when in resting position.\n    const notchedOutlineWidth = iconPrefixContainerWidth + textPrefixContainerWidth + iconSuffixContainerWidth + textSuffixContainerWidth;\n    return [floatingLabelTransform, notchedOutlineWidth];\n  }\n  /** Writes the styles produced by `_getOutlineLabelOffset` synchronously to the DOM. */\n  _writeOutlinedLabelStyles(styles) {\n    if (styles !== null) {\n      const [floatingLabelTransform, notchedOutlineWidth] = styles;\n      if (this._floatingLabel) {\n        this._floatingLabel.element.style.transform = floatingLabelTransform;\n      }\n      if (notchedOutlineWidth !== null) {\n        this._notchedOutline?._setMaxWidth(notchedOutlineWidth);\n      }\n    }\n  }\n  /** Checks whether the form field is attached to the DOM. */\n  _isAttachedToDom() {\n    const element = this._elementRef.nativeElement;\n    if (element.getRootNode) {\n      const rootNode = element.getRootNode();\n      // If the element is inside the DOM the root node will be either the document\n      // or the closest shadow root, otherwise it'll be the element itself.\n      return rootNode && rootNode !== element;\n    }\n    // Otherwise fall back to checking if it's in the document. This doesn't account for\n    // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n    return document.documentElement.contains(element);\n  }\n  static ɵfac = function MatFormField_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatFormField)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatFormField,\n    selectors: [[\"mat-form-field\"]],\n    contentQueries: function MatFormField_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuerySignal(dirIndex, ctx._labelChild, MatLabel, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatFormFieldControl, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_PREFIX, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_SUFFIX, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_ERROR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MatHint, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance();\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._formFieldControl = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._prefixChildren = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._suffixChildren = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._errorChildren = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._hintChildren = _t);\n      }\n    },\n    viewQuery: function MatFormField_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuerySignal(ctx._iconPrefixContainerSignal, _c3, 5);\n        i0.ɵɵviewQuerySignal(ctx._textPrefixContainerSignal, _c4, 5);\n        i0.ɵɵviewQuerySignal(ctx._iconSuffixContainerSignal, _c5, 5);\n        i0.ɵɵviewQuerySignal(ctx._textSuffixContainerSignal, _c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(MatFormFieldFloatingLabel, 5);\n        i0.ɵɵviewQuery(MatFormFieldNotchedOutline, 5);\n        i0.ɵɵviewQuery(MatFormFieldLineRipple, 5);\n      }\n      if (rf & 2) {\n        i0.ɵɵqueryAdvance(4);\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textField = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._iconPrefixContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textPrefixContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._iconSuffixContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._textSuffixContainer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._floatingLabel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._notchedOutline = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lineRipple = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-form-field\"],\n    hostVars: 38,\n    hostBindings: function MatFormField_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-form-field-label-always-float\", ctx._shouldAlwaysFloat())(\"mat-mdc-form-field-has-icon-prefix\", ctx._hasIconPrefix)(\"mat-mdc-form-field-has-icon-suffix\", ctx._hasIconSuffix)(\"mat-form-field-invalid\", ctx._control.errorState)(\"mat-form-field-disabled\", ctx._control.disabled)(\"mat-form-field-autofilled\", ctx._control.autofilled)(\"mat-form-field-appearance-fill\", ctx.appearance == \"fill\")(\"mat-form-field-appearance-outline\", ctx.appearance == \"outline\")(\"mat-form-field-hide-placeholder\", ctx._hasFloatingLabel() && !ctx._shouldLabelFloat())(\"mat-primary\", ctx.color !== \"accent\" && ctx.color !== \"warn\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"ng-untouched\", ctx._shouldForward(\"untouched\"))(\"ng-touched\", ctx._shouldForward(\"touched\"))(\"ng-pristine\", ctx._shouldForward(\"pristine\"))(\"ng-dirty\", ctx._shouldForward(\"dirty\"))(\"ng-valid\", ctx._shouldForward(\"valid\"))(\"ng-invalid\", ctx._shouldForward(\"invalid\"))(\"ng-pending\", ctx._shouldForward(\"pending\"));\n      }\n    },\n    inputs: {\n      hideRequiredMarker: \"hideRequiredMarker\",\n      color: \"color\",\n      floatLabel: \"floatLabel\",\n      appearance: \"appearance\",\n      subscriptSizing: \"subscriptSizing\",\n      hintLabel: \"hintLabel\"\n    },\n    exportAs: [\"matFormField\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_FORM_FIELD,\n      useExisting: MatFormField\n    }, {\n      provide: FLOATING_LABEL_PARENT,\n      useExisting: MatFormField\n    }])],\n    ngContentSelectors: _c9,\n    decls: 19,\n    vars: 25,\n    consts: [[\"labelTemplate\", \"\"], [\"textField\", \"\"], [\"iconPrefixContainer\", \"\"], [\"textPrefixContainer\", \"\"], [\"textSuffixContainer\", \"\"], [\"iconSuffixContainer\", \"\"], [1, \"mat-mdc-text-field-wrapper\", \"mdc-text-field\", 3, \"click\"], [1, \"mat-mdc-form-field-focus-overlay\"], [1, \"mat-mdc-form-field-flex\"], [\"matFormFieldNotchedOutline\", \"\", 3, \"matFormFieldNotchedOutlineOpen\"], [1, \"mat-mdc-form-field-icon-prefix\"], [1, \"mat-mdc-form-field-text-prefix\"], [1, \"mat-mdc-form-field-infix\"], [3, \"ngTemplateOutlet\"], [1, \"mat-mdc-form-field-text-suffix\"], [1, \"mat-mdc-form-field-icon-suffix\"], [\"matFormFieldLineRipple\", \"\"], [1, \"mat-mdc-form-field-subscript-wrapper\", \"mat-mdc-form-field-bottom-align\"], [\"aria-atomic\", \"true\", \"aria-live\", \"polite\"], [\"matFormFieldFloatingLabel\", \"\", 3, \"floating\", \"monitorResize\", \"id\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-form-field-required-marker\", \"mdc-floating-label--required\"], [3, \"id\"], [1, \"mat-mdc-form-field-hint-spacer\"]],\n    template: function MatFormField_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef(_c8);\n        i0.ɵɵtemplate(0, MatFormField_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(2, \"div\", 6, 1);\n        i0.ɵɵlistener(\"click\", function MatFormField_Template_div_click_2_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._control.onContainerClick($event));\n        });\n        i0.ɵɵconditionalCreate(4, MatFormField_Conditional_4_Template, 1, 0, \"div\", 7);\n        i0.ɵɵelementStart(5, \"div\", 8);\n        i0.ɵɵconditionalCreate(6, MatFormField_Conditional_6_Template, 2, 2, \"div\", 9);\n        i0.ɵɵconditionalCreate(7, MatFormField_Conditional_7_Template, 3, 0, \"div\", 10);\n        i0.ɵɵconditionalCreate(8, MatFormField_Conditional_8_Template, 3, 0, \"div\", 11);\n        i0.ɵɵelementStart(9, \"div\", 12);\n        i0.ɵɵconditionalCreate(10, MatFormField_Conditional_10_Template, 1, 1, null, 13);\n        i0.ɵɵprojection(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵconditionalCreate(12, MatFormField_Conditional_12_Template, 3, 0, \"div\", 14);\n        i0.ɵɵconditionalCreate(13, MatFormField_Conditional_13_Template, 3, 0, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵconditionalCreate(14, MatFormField_Conditional_14_Template, 1, 0, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 17)(16, \"div\", 18);\n        i0.ɵɵconditionalCreate(17, MatFormField_Case_17_Template, 1, 0)(18, MatFormField_Case_18_Template, 4, 1);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        let tmp_19_0;\n        i0.ɵɵadvance(2);\n        i0.ɵɵclassProp(\"mdc-text-field--filled\", !ctx._hasOutline())(\"mdc-text-field--outlined\", ctx._hasOutline())(\"mdc-text-field--no-label\", !ctx._hasFloatingLabel())(\"mdc-text-field--disabled\", ctx._control.disabled)(\"mdc-text-field--invalid\", ctx._control.errorState);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(!ctx._hasOutline() && !ctx._control.disabled ? 4 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx._hasOutline() ? 6 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasIconPrefix ? 7 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasTextPrefix ? 8 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(!ctx._hasOutline() || ctx._forceDisplayInfixLabel() ? 10 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx._hasTextSuffix ? 12 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasIconSuffix ? 13 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(!ctx._hasOutline() ? 14 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"mat-mdc-form-field-subscript-dynamic-size\", ctx.subscriptSizing === \"dynamic\");\n        const subscriptMessageType_r4 = ctx._getSubscriptMessageType();\n        i0.ɵɵadvance();\n        i0.ɵɵclassProp(\"mat-mdc-form-field-error-wrapper\", subscriptMessageType_r4 === \"error\")(\"mat-mdc-form-field-hint-wrapper\", subscriptMessageType_r4 === \"hint\");\n        i0.ɵɵadvance();\n        i0.ɵɵconditional((tmp_19_0 = subscriptMessageType_r4) === \"error\" ? 17 : tmp_19_0 === \"hint\" ? 18 : -1);\n      }\n    },\n    dependencies: [MatFormFieldFloatingLabel, MatFormFieldNotchedOutline, NgTemplateOutlet, MatFormFieldLineRipple, MatHint],\n    styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator,.mdc-text-field__input::-webkit-search-cancel-button{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormField, [{\n    type: Component,\n    args: [{\n      selector: 'mat-form-field',\n      exportAs: 'matFormField',\n      host: {\n        'class': 'mat-mdc-form-field',\n        '[class.mat-mdc-form-field-label-always-float]': '_shouldAlwaysFloat()',\n        '[class.mat-mdc-form-field-has-icon-prefix]': '_hasIconPrefix',\n        '[class.mat-mdc-form-field-has-icon-suffix]': '_hasIconSuffix',\n        // Note that these classes reuse the same names as the non-MDC version, because they can be\n        // considered a public API since custom form controls may use them to style themselves.\n        // See https://github.com/angular/components/pull/20502#discussion_r486124901.\n        '[class.mat-form-field-invalid]': '_control.errorState',\n        '[class.mat-form-field-disabled]': '_control.disabled',\n        '[class.mat-form-field-autofilled]': '_control.autofilled',\n        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n        '[class.mat-form-field-hide-placeholder]': '_hasFloatingLabel() && !_shouldLabelFloat()',\n        '[class.mat-primary]': 'color !== \"accent\" && color !== \"warn\"',\n        '[class.mat-accent]': 'color === \"accent\"',\n        '[class.mat-warn]': 'color === \"warn\"',\n        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n        '[class.ng-touched]': '_shouldForward(\"touched\")',\n        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n        '[class.ng-valid]': '_shouldForward(\"valid\")',\n        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n        '[class.ng-pending]': '_shouldForward(\"pending\")'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_FORM_FIELD,\n        useExisting: MatFormField\n      }, {\n        provide: FLOATING_LABEL_PARENT,\n        useExisting: MatFormField\n      }],\n      imports: [MatFormFieldFloatingLabel, MatFormFieldNotchedOutline, NgTemplateOutlet, MatFormFieldLineRipple, MatHint],\n      template: \"<ng-template #labelTemplate>\\n  <!--\\n    MDC recommends that the text-field is a `<label>` element. This rather complicates the\\n    setup because it would require every form-field control to explicitly set `aria-labelledby`.\\n    This is because the `<label>` itself contains more than the actual label (e.g. prefix, suffix\\n    or other projected content), and screen readers could potentially read out undesired content.\\n    Excluding elements from being printed out requires them to be marked with `aria-hidden`, or\\n    the form control is set to a scoped element for the label (using `aria-labelledby`). Both of\\n    these options seem to complicate the setup because we know exactly what content is rendered\\n    as part of the label, and we don't want to spend resources on walking through projected content\\n    to set `aria-hidden`. Nor do we want to set `aria-labelledby` on every form control if we could\\n    simply link the label to the control using the label `for` attribute.\\n  -->\\n  @if (_hasFloatingLabel()) {\\n    <label\\n      matFormFieldFloatingLabel\\n      [floating]=\\\"_shouldLabelFloat()\\\"\\n      [monitorResize]=\\\"_hasOutline()\\\"\\n      [id]=\\\"_labelId\\\"\\n      [attr.for]=\\\"_control.disableAutomaticLabeling ? null : _control.id\\\"\\n    >\\n      <ng-content select=\\\"mat-label\\\"></ng-content>\\n      <!--\\n        We set the required marker as a separate element, in order to make it easier to target if\\n        apps want to override it and to be able to set `aria-hidden` so that screen readers don't\\n        pick it up.\\n       -->\\n      @if (!hideRequiredMarker && _control.required) {\\n        <span\\n          aria-hidden=\\\"true\\\"\\n          class=\\\"mat-mdc-form-field-required-marker mdc-floating-label--required\\\"\\n        ></span>\\n      }\\n    </label>\\n  }\\n</ng-template>\\n\\n<div\\n  class=\\\"mat-mdc-text-field-wrapper mdc-text-field\\\"\\n  #textField\\n  [class.mdc-text-field--filled]=\\\"!_hasOutline()\\\"\\n  [class.mdc-text-field--outlined]=\\\"_hasOutline()\\\"\\n  [class.mdc-text-field--no-label]=\\\"!_hasFloatingLabel()\\\"\\n  [class.mdc-text-field--disabled]=\\\"_control.disabled\\\"\\n  [class.mdc-text-field--invalid]=\\\"_control.errorState\\\"\\n  (click)=\\\"_control.onContainerClick($event)\\\"\\n>\\n  @if (!_hasOutline() && !_control.disabled) {\\n    <div class=\\\"mat-mdc-form-field-focus-overlay\\\"></div>\\n  }\\n  <div class=\\\"mat-mdc-form-field-flex\\\">\\n    @if (_hasOutline()) {\\n      <div matFormFieldNotchedOutline [matFormFieldNotchedOutlineOpen]=\\\"_shouldLabelFloat()\\\">\\n        @if (!_forceDisplayInfixLabel()) {\\n          <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n        }\\n      </div>\\n    }\\n\\n    @if (_hasIconPrefix) {\\n      <div class=\\\"mat-mdc-form-field-icon-prefix\\\" #iconPrefixContainer>\\n        <ng-content select=\\\"[matPrefix], [matIconPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasTextPrefix) {\\n      <div class=\\\"mat-mdc-form-field-text-prefix\\\" #textPrefixContainer>\\n        <ng-content select=\\\"[matTextPrefix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    <div class=\\\"mat-mdc-form-field-infix\\\">\\n      @if (!_hasOutline() || _forceDisplayInfixLabel()) {\\n        <ng-template [ngTemplateOutlet]=\\\"labelTemplate\\\"></ng-template>\\n      }\\n\\n      <ng-content></ng-content>\\n    </div>\\n\\n    @if (_hasTextSuffix) {\\n      <div class=\\\"mat-mdc-form-field-text-suffix\\\" #textSuffixContainer>\\n        <ng-content select=\\\"[matTextSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n\\n    @if (_hasIconSuffix) {\\n      <div class=\\\"mat-mdc-form-field-icon-suffix\\\" #iconSuffixContainer>\\n        <ng-content select=\\\"[matSuffix], [matIconSuffix]\\\"></ng-content>\\n      </div>\\n    }\\n  </div>\\n\\n  @if (!_hasOutline()) {\\n    <div matFormFieldLineRipple></div>\\n  }\\n</div>\\n\\n<div\\n    class=\\\"mat-mdc-form-field-subscript-wrapper mat-mdc-form-field-bottom-align\\\"\\n    [class.mat-mdc-form-field-subscript-dynamic-size]=\\\"subscriptSizing === 'dynamic'\\\"\\n>\\n  @let subscriptMessageType = _getSubscriptMessageType();\\n\\n  <!-- \\n    Use a single permanent wrapper for both hints and errors so aria-live works correctly,\\n    as having it appear post render will not consistently work. We also do not want to add\\n    additional divs as it causes styling regressions.\\n    -->\\n  <div aria-atomic=\\\"true\\\" aria-live=\\\"polite\\\" \\n      [class.mat-mdc-form-field-error-wrapper]=\\\"subscriptMessageType === 'error'\\\"\\n      [class.mat-mdc-form-field-hint-wrapper]=\\\"subscriptMessageType === 'hint'\\\"\\n    >\\n    @switch (subscriptMessageType) {\\n      @case ('error') {\\n        <ng-content select=\\\"mat-error, [matError]\\\"></ng-content>\\n      }\\n\\n      @case ('hint') {\\n        @if (hintLabel) {\\n          <mat-hint [id]=\\\"_hintLabelId\\\">{{hintLabel}}</mat-hint>\\n        }\\n        <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n        <div class=\\\"mat-mdc-form-field-hint-spacer\\\"></div>\\n        <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n      }\\n    }\\n  </div>\\n</div>\\n\",\n      styles: [\".mdc-text-field{display:inline-flex;align-items:baseline;padding:0 16px;position:relative;box-sizing:border-box;overflow:hidden;will-change:opacity,transform,color;border-top-left-radius:4px;border-top-right-radius:4px;border-bottom-right-radius:0;border-bottom-left-radius:0}.mdc-text-field__input{width:100%;min-width:0;border:none;border-radius:0;background:none;padding:0;-moz-appearance:none;-webkit-appearance:none;height:28px}.mdc-text-field__input::-webkit-calendar-picker-indicator,.mdc-text-field__input::-webkit-search-cancel-button{display:none}.mdc-text-field__input::-ms-clear{display:none}.mdc-text-field__input:focus{outline:none}.mdc-text-field__input:invalid{box-shadow:none}.mdc-text-field__input::placeholder{opacity:0}.mdc-text-field__input::-moz-placeholder{opacity:0}.mdc-text-field__input::-webkit-input-placeholder{opacity:0}.mdc-text-field__input:-ms-input-placeholder{opacity:0}.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mdc-text-field--focused .mdc-text-field__input::placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{opacity:1}.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{opacity:1}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-moz-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive::-webkit-input-placeholder{opacity:0}.mdc-text-field--disabled:not(.mdc-text-field--no-label) .mdc-text-field__input.mat-mdc-input-disabled-interactive:-ms-input-placeholder{opacity:0}.mdc-text-field--outlined .mdc-text-field__input,.mdc-text-field--filled.mdc-text-field--no-label .mdc-text-field__input{height:100%}.mdc-text-field--outlined .mdc-text-field__input{display:flex;border:none !important;background-color:rgba(0,0,0,0)}.mdc-text-field--disabled .mdc-text-field__input{pointer-events:auto}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-filled-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-filled-caret-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-filled-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input{color:var(--mat-form-field-outlined-input-text-color, var(--mat-sys-on-surface));caret-color:var(--mat-form-field-outlined-caret-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-outlined-input-text-placeholder-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-filled-error-caret-color, var(--mat-sys-error))}.mdc-text-field--outlined.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-text-field__input{caret-color:var(--mat-form-field-outlined-error-caret-color, var(--mat-sys-error))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-filled-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-text-field__input{color:var(--mat-form-field-outlined-disabled-input-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}@media(forced-colors: active){.mdc-text-field--disabled .mdc-text-field__input{background-color:Window}}.mdc-text-field--filled{height:56px;border-bottom-right-radius:0;border-bottom-left-radius:0;border-top-left-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small));border-top-right-radius:var(--mat-form-field-filled-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--filled:not(.mdc-text-field--disabled){background-color:var(--mat-form-field-filled-container-color, var(--mat-sys-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled{background-color:var(--mat-form-field-filled-disabled-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 4%, transparent))}.mdc-text-field--outlined{height:56px;overflow:visible;padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)));padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px)}[dir=rtl] .mdc-text-field--outlined{padding-right:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)) + 4px);padding-left:max(16px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}.mdc-floating-label{position:absolute;left:0;transform-origin:left top;line-height:1.15rem;text-align:left;text-overflow:ellipsis;white-space:nowrap;cursor:text;overflow:hidden;will-change:transform}[dir=rtl] .mdc-floating-label{right:0;left:auto;transform-origin:right top;text-align:right}.mdc-text-field .mdc-floating-label{top:50%;transform:translateY(-50%);pointer-events:none}.mdc-notched-outline .mdc-floating-label{display:inline-block;position:relative;max-width:100%}.mdc-text-field--outlined .mdc-floating-label{left:4px;right:auto}[dir=rtl] .mdc-text-field--outlined .mdc-floating-label{left:auto;right:4px}.mdc-text-field--filled .mdc-floating-label{left:16px;right:auto}[dir=rtl] .mdc-text-field--filled .mdc-floating-label{left:auto;right:16px}.mdc-text-field--disabled .mdc-floating-label{cursor:default}@media(forced-colors: active){.mdc-text-field--disabled .mdc-floating-label{z-index:1}}.mdc-text-field--filled.mdc-text-field--no-label .mdc-floating-label{display:none}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-filled-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-filled-hover-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-filled-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-filled-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-filled-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-filled-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--filled .mdc-floating-label{font-family:var(--mat-form-field-filled-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-filled-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-filled-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-filled-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mdc-floating-label{color:var(--mat-form-field-outlined-label-text-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-focus-label-text-color, var(--mat-sys-primary))}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-floating-label{color:var(--mat-form-field-outlined-hover-label-text-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined.mdc-text-field--disabled .mdc-floating-label{color:var(--mat-form-field-outlined-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-floating-label{color:var(--mat-form-field-outlined-error-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mdc-floating-label{color:var(--mat-form-field-outlined-error-focus-label-text-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--disabled):hover .mdc-floating-label{color:var(--mat-form-field-outlined-error-hover-label-text-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined .mdc-floating-label{font-family:var(--mat-form-field-outlined-label-text-font, var(--mat-sys-body-large-font));font-size:var(--mat-form-field-outlined-label-text-size, var(--mat-sys-body-large-size));font-weight:var(--mat-form-field-outlined-label-text-weight, var(--mat-sys-body-large-weight));letter-spacing:var(--mat-form-field-outlined-label-text-tracking, var(--mat-sys-body-large-tracking))}.mdc-floating-label--float-above{cursor:auto;transform:translateY(-106%) scale(0.75)}.mdc-text-field--filled .mdc-floating-label--float-above{transform:translateY(-106%) scale(0.75)}.mdc-text-field--outlined .mdc-floating-label--float-above{transform:translateY(-37.25px) scale(1);font-size:.75rem}.mdc-notched-outline .mdc-floating-label--float-above{text-overflow:clip}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:133.3333333333%}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{transform:translateY(-34.75px) scale(0.75)}.mdc-text-field--outlined.mdc-notched-outline--upgraded .mdc-floating-label--float-above,.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:1rem}.mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:1px;margin-right:0;content:\\\"*\\\"}[dir=rtl] .mdc-floating-label--required:not(.mdc-floating-label--hide-required-marker)::after{margin-left:0;margin-right:1px}.mdc-notched-outline{display:flex;position:absolute;top:0;right:0;left:0;box-sizing:border-box;width:100%;max-width:100%;height:100%;text-align:left;pointer-events:none}[dir=rtl] .mdc-notched-outline{text-align:right}.mdc-text-field--outlined .mdc-notched-outline{z-index:1}.mat-mdc-notch-piece{box-sizing:border-box;height:100%;pointer-events:none;border-top:1px solid;border-bottom:1px solid}.mdc-text-field--focused .mat-mdc-notch-piece{border-width:2px}.mdc-text-field--outlined:not(.mdc-text-field--disabled) .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-outline-color, var(--mat-sys-outline));border-width:var(--mat-form-field-outlined-outline-width, 1px)}.mdc-text-field--outlined:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-hover-outline-color, var(--mat-sys-on-surface))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-focus-outline-color, var(--mat-sys-primary))}.mdc-text-field--outlined.mdc-text-field--disabled .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-notched-outline .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-hover-outline-color, var(--mat-sys-on-error-container))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--invalid.mdc-text-field--focused .mat-mdc-notch-piece{border-color:var(--mat-form-field-outlined-error-focus-outline-color, var(--mat-sys-error))}.mdc-text-field--outlined:not(.mdc-text-field--disabled).mdc-text-field--focused .mdc-notched-outline .mat-mdc-notch-piece{border-width:var(--mat-form-field-outlined-focus-outline-width, 2px)}.mdc-notched-outline__leading{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__leading{width:max(12px,var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small)))}[dir=rtl] .mdc-notched-outline__leading{border-left:none;border-right:1px solid;border-bottom-left-radius:0;border-top-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__trailing{flex-grow:1;border-left:none;border-right:1px solid;border-top-left-radius:0;border-bottom-left-radius:0;border-top-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-right-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}[dir=rtl] .mdc-notched-outline__trailing{border-left:1px solid;border-right:none;border-top-right-radius:0;border-bottom-right-radius:0;border-top-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small));border-bottom-left-radius:var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))}.mdc-notched-outline__notch{flex:0 0 auto;width:auto}.mdc-text-field--outlined .mdc-notched-outline .mdc-notched-outline__notch{max-width:min(var(--mat-form-field-notch-max-width, 100%),calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{max-width:min(100%,calc(100% - max(12px, var(--mat-form-field-outlined-container-shape, var(--mat-sys-corner-extra-small))) * 2))}.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:1px}.mdc-text-field--focused.mdc-text-field--outlined .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-top:2px}.mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:0;padding-right:8px;border-top:none}[dir=rtl] .mdc-notched-outline--notched .mdc-notched-outline__notch{padding-left:8px;padding-right:0}.mdc-notched-outline--no-label .mdc-notched-outline__notch{display:none}.mdc-line-ripple::before,.mdc-line-ripple::after{position:absolute;bottom:0;left:0;width:100%;border-bottom-style:solid;content:\\\"\\\"}.mdc-line-ripple::before{z-index:1;border-bottom-width:var(--mat-form-field-filled-active-indicator-height, 1px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-active-indicator-color, var(--mat-sys-on-surface-variant))}.mdc-text-field--filled:not(.mdc-text-field--disabled):not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-hover-active-indicator-color, var(--mat-sys-on-surface))}.mdc-text-field--filled.mdc-text-field--disabled .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-disabled-active-indicator-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-active-indicator-color, var(--mat-sys-error))}.mdc-text-field--filled:not(.mdc-text-field--disabled).mdc-text-field--invalid:not(.mdc-text-field--focused):hover .mdc-line-ripple::before{border-bottom-color:var(--mat-form-field-filled-error-hover-active-indicator-color, var(--mat-sys-on-error-container))}.mdc-line-ripple::after{transform:scaleX(0);opacity:0;z-index:2}.mdc-text-field--filled .mdc-line-ripple::after{border-bottom-width:var(--mat-form-field-filled-focus-active-indicator-height, 2px)}.mdc-text-field--filled:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-focus-active-indicator-color, var(--mat-sys-primary))}.mdc-text-field--filled.mdc-text-field--invalid:not(.mdc-text-field--disabled) .mdc-line-ripple::after{border-bottom-color:var(--mat-form-field-filled-error-focus-active-indicator-color, var(--mat-sys-error))}.mdc-line-ripple--active::after{transform:scaleX(1);opacity:1}.mdc-line-ripple--deactivating::after{opacity:0}.mdc-text-field--disabled{pointer-events:none}.mat-mdc-form-field-textarea-control{vertical-align:middle;resize:vertical;box-sizing:border-box;height:auto;margin:0;padding:0;border:none;overflow:auto}.mat-mdc-form-field-input-control.mat-mdc-form-field-input-control{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font:inherit;letter-spacing:inherit;text-decoration:inherit;text-transform:inherit;border:none}.mat-mdc-form-field .mat-mdc-floating-label.mdc-floating-label{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;line-height:normal;pointer-events:all;will-change:auto}.mat-mdc-form-field:not(.mat-form-field-disabled) .mat-mdc-floating-label.mdc-floating-label{cursor:inherit}.mdc-text-field--no-label:not(.mdc-text-field--textarea) .mat-mdc-form-field-input-control.mdc-text-field__input,.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control{height:auto}.mat-mdc-text-field-wrapper .mat-mdc-form-field-input-control.mdc-text-field__input[type=color]{height:23px}.mat-mdc-text-field-wrapper{height:auto;flex:auto;will-change:auto}.mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-left:0;--mat-mdc-form-field-label-offset-x: -16px}.mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-right:0}[dir=rtl] .mat-mdc-text-field-wrapper{padding-left:16px;padding-right:16px}[dir=rtl] .mat-mdc-form-field-has-icon-suffix .mat-mdc-text-field-wrapper{padding-left:0}[dir=rtl] .mat-mdc-form-field-has-icon-prefix .mat-mdc-text-field-wrapper{padding-right:0}.mat-form-field-disabled .mdc-text-field__input::placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-moz-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input::-webkit-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-disabled .mdc-text-field__input:-ms-input-placeholder{color:var(--mat-form-field-disabled-input-text-placeholder-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-label-always-float .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms;opacity:1}.mat-mdc-text-field-wrapper .mat-mdc-form-field-infix .mat-mdc-floating-label{left:auto;right:auto}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-text-field__input{display:inline-block}.mat-mdc-form-field .mat-mdc-text-field-wrapper.mdc-text-field .mdc-notched-outline__notch{padding-top:0}.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:1px solid rgba(0,0,0,0)}[dir=rtl] .mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field.mat-mdc-form-field .mdc-notched-outline__notch{border-left:none;border-right:1px solid rgba(0,0,0,0)}.mat-mdc-form-field-infix{min-height:var(--mat-form-field-container-height, 56px);padding-top:var(--mat-form-field-filled-with-label-container-padding-top, 24px);padding-bottom:var(--mat-form-field-filled-with-label-container-padding-bottom, 8px)}.mdc-text-field--outlined .mat-mdc-form-field-infix,.mdc-text-field--no-label .mat-mdc-form-field-infix{padding-top:var(--mat-form-field-container-vertical-padding, 16px);padding-bottom:var(--mat-form-field-container-vertical-padding, 16px)}.mat-mdc-text-field-wrapper .mat-mdc-form-field-flex .mat-mdc-floating-label{top:calc(var(--mat-form-field-container-height, 56px)/2)}.mdc-text-field--filled .mat-mdc-floating-label{display:var(--mat-form-field-filled-label-display, block)}.mat-mdc-text-field-wrapper.mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{--mat-mdc-form-field-label-transform: translateY(calc(calc(6.75px + var(--mat-form-field-container-height, 56px) / 2) * -1)) scale(var(--mat-mdc-form-field-floating-label-scale, 0.75));transform:var(--mat-mdc-form-field-label-transform)}@keyframes _mat-form-field-subscript-animation{from{opacity:0;transform:translateY(-5px)}to{opacity:1;transform:translateY(0)}}.mat-mdc-form-field-subscript-wrapper{box-sizing:border-box;width:100%;position:relative}.mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-error-wrapper{position:absolute;top:0;left:0;right:0;padding:0 16px;opacity:1;transform:translateY(0);animation:_mat-form-field-subscript-animation 0ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field-subscript-dynamic-size .mat-mdc-form-field-error-wrapper{position:static}.mat-mdc-form-field-bottom-align::before{content:\\\"\\\";display:inline-block;height:16px}.mat-mdc-form-field-bottom-align.mat-mdc-form-field-subscript-dynamic-size::before{content:unset}.mat-mdc-form-field-hint-end{order:1}.mat-mdc-form-field-hint-wrapper{display:flex}.mat-mdc-form-field-hint-spacer{flex:1 0 1em}.mat-mdc-form-field-error{display:block;color:var(--mat-form-field-error-text-color, var(--mat-sys-error))}.mat-mdc-form-field-subscript-wrapper,.mat-mdc-form-field-bottom-align::before{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-subscript-text-font, var(--mat-sys-body-small-font));line-height:var(--mat-form-field-subscript-text-line-height, var(--mat-sys-body-small-line-height));font-size:var(--mat-form-field-subscript-text-size, var(--mat-sys-body-small-size));letter-spacing:var(--mat-form-field-subscript-text-tracking, var(--mat-sys-body-small-tracking));font-weight:var(--mat-form-field-subscript-text-weight, var(--mat-sys-body-small-weight))}.mat-mdc-form-field-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;opacity:0;pointer-events:none;background-color:var(--mat-form-field-state-layer-color, var(--mat-sys-on-surface))}.mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-form-field.mat-focused .mat-mdc-form-field-focus-overlay{opacity:var(--mat-form-field-focus-state-layer-opacity, 0)}select.mat-mdc-form-field-input-control{-moz-appearance:none;-webkit-appearance:none;background-color:rgba(0,0,0,0);display:inline-flex;box-sizing:border-box}select.mat-mdc-form-field-input-control:not(:disabled){cursor:pointer}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option{color:var(--mat-form-field-select-option-text-color, var(--mat-sys-neutral10))}select.mat-mdc-form-field-input-control:not(.mat-mdc-native-select-inline) option:disabled{color:var(--mat-form-field-select-disabled-option-text-color, color-mix(in srgb, var(--mat-sys-neutral10) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid rgba(0,0,0,0);border-right:5px solid rgba(0,0,0,0);border-top:5px solid;position:absolute;right:0;top:50%;margin-top:-2.5px;pointer-events:none;color:var(--mat-form-field-enabled-select-arrow-color, var(--mat-sys-on-surface-variant))}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-infix::after{right:auto;left:0}.mat-mdc-form-field-type-mat-native-select.mat-focused .mat-mdc-form-field-infix::after{color:var(--mat-form-field-focus-select-arrow-color, var(--mat-sys-primary))}.mat-mdc-form-field-type-mat-native-select.mat-form-field-disabled .mat-mdc-form-field-infix::after{color:var(--mat-form-field-disabled-select-arrow-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:15px}[dir=rtl] .mat-mdc-form-field-type-mat-native-select .mat-mdc-form-field-input-control{padding-right:0;padding-left:15px}@media(forced-colors: active){.mat-form-field-appearance-fill .mat-mdc-text-field-wrapper{outline:solid 1px}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-form-field-disabled .mat-mdc-text-field-wrapper{outline-color:GrayText}}@media(forced-colors: active){.mat-form-field-appearance-fill.mat-focused .mat-mdc-text-field-wrapper{outline:dashed 3px}}@media(forced-colors: active){.mat-mdc-form-field.mat-focused .mdc-notched-outline{border:dashed 3px}}.mat-mdc-form-field-input-control[type=date],.mat-mdc-form-field-input-control[type=datetime],.mat-mdc-form-field-input-control[type=datetime-local],.mat-mdc-form-field-input-control[type=month],.mat-mdc-form-field-input-control[type=week],.mat-mdc-form-field-input-control[type=time]{line-height:1}.mat-mdc-form-field-input-control::-webkit-datetime-edit{line-height:1;padding:0;margin-bottom:-2px}.mat-mdc-form-field{--mat-mdc-form-field-floating-label-scale: 0.75;display:inline-flex;flex-direction:column;min-width:0;text-align:left;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-form-field-container-text-font, var(--mat-sys-body-large-font));line-height:var(--mat-form-field-container-text-line-height, var(--mat-sys-body-large-line-height));font-size:var(--mat-form-field-container-text-size, var(--mat-sys-body-large-size));letter-spacing:var(--mat-form-field-container-text-tracking, var(--mat-sys-body-large-tracking));font-weight:var(--mat-form-field-container-text-weight, var(--mat-sys-body-large-weight))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-floating-label--float-above{font-size:calc(var(--mat-form-field-outlined-label-text-populated-size)*var(--mat-mdc-form-field-floating-label-scale))}.mat-mdc-form-field .mdc-text-field--outlined .mdc-notched-outline--upgraded .mdc-floating-label--float-above{font-size:var(--mat-form-field-outlined-label-text-populated-size)}[dir=rtl] .mat-mdc-form-field{text-align:right}.mat-mdc-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-mdc-text-field-wrapper{width:100%;z-index:0}.mat-mdc-form-field-icon-prefix,.mat-mdc-form-field-icon-suffix{align-self:center;line-height:0;pointer-events:auto;position:relative;z-index:1}.mat-mdc-form-field-icon-prefix>.mat-icon,.mat-mdc-form-field-icon-suffix>.mat-icon{padding:0 12px;box-sizing:content-box}.mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-leading-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-prefix{color:var(--mat-form-field-disabled-leading-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-form-field-disabled .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-disabled-trailing-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-form-field-invalid .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-trailing-icon-color, var(--mat-sys-error))}.mat-form-field-invalid:not(.mat-focused):not(.mat-form-field-disabled) .mat-mdc-text-field-wrapper:hover .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-hover-trailing-icon-color, var(--mat-sys-on-error-container))}.mat-form-field-invalid.mat-focused .mat-mdc-text-field-wrapper .mat-mdc-form-field-icon-suffix{color:var(--mat-form-field-error-focus-trailing-icon-color, var(--mat-sys-error))}.mat-mdc-form-field-icon-prefix,[dir=rtl] .mat-mdc-form-field-icon-suffix{padding:0 4px 0 0}.mat-mdc-form-field-icon-suffix,[dir=rtl] .mat-mdc-form-field-icon-prefix{padding:0 0 0 4px}.mat-mdc-form-field-subscript-wrapper .mat-icon,.mat-mdc-form-field label .mat-icon{width:1em;height:1em;font-size:inherit}.mat-mdc-form-field-infix{flex:auto;min-width:0;width:180px;position:relative;box-sizing:border-box}.mat-mdc-form-field-infix:has(textarea[cols]){width:auto}.mat-mdc-form-field .mdc-notched-outline__notch{margin-left:-1px;-webkit-clip-path:inset(-9em -999em -9em 1px);clip-path:inset(-9em -999em -9em 1px)}[dir=rtl] .mat-mdc-form-field .mdc-notched-outline__notch{margin-left:0;margin-right:-1px;-webkit-clip-path:inset(-9em 1px -9em -999em);clip-path:inset(-9em 1px -9em -999em)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-floating-label{transition:transform 150ms cubic-bezier(0.4, 0, 0.2, 1),color 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input{transition:opacity 150ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-moz-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input::-webkit-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field__input:-ms-input-placeholder{transition:opacity 67ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-moz-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-moz-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input::-webkit-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input::-webkit-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--no-label .mdc-text-field__input:-ms-input-placeholder,.mat-mdc-form-field.mat-form-field-animations-enabled.mdc-text-field--focused .mdc-text-field__input:-ms-input-placeholder{transition-delay:40ms;transition-duration:110ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-text-field--filled:not(.mdc-ripple-upgraded):focus .mdc-text-field__ripple::before{transition-duration:75ms}.mat-mdc-form-field.mat-form-field-animations-enabled .mdc-line-ripple::after{transition:transform 180ms cubic-bezier(0.4, 0, 0.2, 1),opacity 180ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-hint-wrapper,.mat-mdc-form-field.mat-form-field-animations-enabled .mat-mdc-form-field-error-wrapper{animation-duration:300ms}.mdc-notched-outline .mdc-floating-label{max-width:calc(100% + 1px)}.mdc-notched-outline--upgraded .mdc-floating-label--float-above{max-width:calc(133.3333333333% + 1px)}\\n\"]\n    }]\n  }], () => [], {\n    _textField: [{\n      type: ViewChild,\n      args: ['textField']\n    }],\n    _iconPrefixContainer: [{\n      type: ViewChild,\n      args: ['iconPrefixContainer']\n    }],\n    _textPrefixContainer: [{\n      type: ViewChild,\n      args: ['textPrefixContainer']\n    }],\n    _iconSuffixContainer: [{\n      type: ViewChild,\n      args: ['iconSuffixContainer']\n    }],\n    _textSuffixContainer: [{\n      type: ViewChild,\n      args: ['textSuffixContainer']\n    }],\n    _floatingLabel: [{\n      type: ViewChild,\n      args: [MatFormFieldFloatingLabel]\n    }],\n    _notchedOutline: [{\n      type: ViewChild,\n      args: [MatFormFieldNotchedOutline]\n    }],\n    _lineRipple: [{\n      type: ViewChild,\n      args: [MatFormFieldLineRipple]\n    }],\n    _formFieldControl: [{\n      type: ContentChild,\n      args: [MatFormFieldControl]\n    }],\n    _prefixChildren: [{\n      type: ContentChildren,\n      args: [MAT_PREFIX, {\n        descendants: true\n      }]\n    }],\n    _suffixChildren: [{\n      type: ContentChildren,\n      args: [MAT_SUFFIX, {\n        descendants: true\n      }]\n    }],\n    _errorChildren: [{\n      type: ContentChildren,\n      args: [MAT_ERROR, {\n        descendants: true\n      }]\n    }],\n    _hintChildren: [{\n      type: ContentChildren,\n      args: [MatHint, {\n        descendants: true\n      }]\n    }],\n    hideRequiredMarker: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    floatLabel: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    subscriptSizing: [{\n      type: Input\n    }],\n    hintLabel: [{\n      type: Input\n    }]\n  });\n})();\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatHint, MatLabel, MatPrefix, MatSuffix, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError };\n","import { FocusMonitor, _IdGenerator, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, booleanAttribute, numberAttribute, Directive, Input, ChangeDetectorRef, HOST_TAG_NAME, NgZone, DOCUMENT, EventEmitter, Injector, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, Output, ContentChild, ViewChild, afterNextRender, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Subject, merge } from 'rxjs';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple.mjs';\nimport { _animationsDisabled } from './animation.mjs';\nimport { MatRippleLoader } from './ripple-loader.mjs';\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR, NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { ErrorStateMatcher } from './error-options.mjs';\nimport { _ErrorStateTracker } from './error-state.mjs';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from './form-field2.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport { MatRippleModule } from './ripple-module.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\nimport '@angular/common';\nimport '@angular/cdk/observers/private';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst _c0 = [\"*\", [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c1 = [\"*\", \"mat-chip-avatar, [matChipAvatar]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChip_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChip_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipOption_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementStart(2, \"span\", 7);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 8);\n    i0.ɵɵelement(4, \"path\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MatChipOption_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = \".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\";\nconst _c3 = [[[\"\", \"matChipEdit\", \"\"]], [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"\", \"matChipEditInput\", \"\"]], \"*\", [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c4 = [\"[matChipEdit]\", \"mat-chip-avatar, [matChipAvatar]\", \"[matChipEditInput]\", \"*\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChipRow_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 0);\n  }\n}\nfunction MatChipRow_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipRow_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipRow_Conditional_5_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction MatChipRow_Conditional_5_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\nfunction MatChipRow_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, MatChipRow_Conditional_5_Conditional_0_Template, 1, 0)(1, MatChipRow_Conditional_5_Conditional_1_Template, 1, 0, \"span\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r0.contentEditInput ? 0 : 1);\n  }\n}\nfunction MatChipRow_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 3);\n  }\n}\nfunction MatChipRow_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c5 = [\"*\"];\nconst _c6 = \".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\";\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    separatorKeyCodes: [ENTER]\n  })\n});\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipEdit`. It serves as\n * alternative token to the actual `MatChipEdit` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_EDIT = new InjectionToken('MatChipEdit');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction {\n  _elementRef = inject(ElementRef);\n  _parentChip = inject(MAT_CHIP);\n  /** Whether the action is interactive. */\n  isInteractive = true;\n  /** Whether this is the primary action in the chip. */\n  _isPrimary = true;\n  /** Whether this is the leading action in the chip. */\n  _isLeading = false; // TODO(adolgachev): consolidate usage to secondary css class\n  /** Whether the action is disabled. */\n  get disabled() {\n    return this._disabled || this._parentChip?.disabled || false;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Tab index of the action. */\n  tabIndex = -1;\n  /**\n   * Private API to allow focusing this chip when it is disabled.\n   */\n  _allowFocusWhenDisabled = false;\n  /**\n   * Determine the value of the disabled attribute for this chip action.\n   */\n  _getDisabledAttribute() {\n    // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n    // string to indicate that disabled attribute should be included.\n    return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n  }\n  /**\n   * Determine the value of the tabindex attribute for this chip action.\n   */\n  _getTabindex() {\n    return this.disabled && !this._allowFocusWhenDisabled || !this.isInteractive ? null : this.tabIndex.toString();\n  }\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    if (this._elementRef.nativeElement.nodeName === 'BUTTON') {\n      this._elementRef.nativeElement.setAttribute('type', 'button');\n    }\n  }\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n  _handleClick(event) {\n    if (!this.disabled && this.isInteractive && this._isPrimary) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled && this.isInteractive && this._isPrimary && !this._parentChip._isEditing) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  static ɵfac = function MatChipAction_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipAction)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipAction,\n    selectors: [[\"\", \"matChipAction\", \"\"]],\n    hostAttrs: [1, \"mdc-evolution-chip__action\", \"mat-mdc-chip-action\"],\n    hostVars: 11,\n    hostBindings: function MatChipAction_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatChipAction_click_HostBindingHandler($event) {\n          return ctx._handleClick($event);\n        })(\"keydown\", function MatChipAction_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx._getTabindex())(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx.disabled);\n        i0.ɵɵclassProp(\"mdc-evolution-chip__action--primary\", ctx._isPrimary)(\"mdc-evolution-chip__action--presentational\", !ctx.isInteractive)(\"mdc-evolution-chip__action--secondary\", !ctx._isPrimary)(\"mdc-evolution-chip__action--trailing\", !ctx._isPrimary && !ctx._isLeading);\n      }\n    },\n    inputs: {\n      isInteractive: \"isInteractive\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? -1 : numberAttribute(value)],\n      _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAction, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipAction]',\n      host: {\n        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n        '[class.mdc-evolution-chip__action--secondary]': '!_isPrimary',\n        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary && !_isLeading',\n        '[attr.tabindex]': '_getTabindex()',\n        '[attr.disabled]': '_getDisabledAttribute()',\n        '[attr.aria-disabled]': 'disabled',\n        '(click)': '_handleClick($event)',\n        '(keydown)': '_handleKeydown($event)'\n      }\n    }]\n  }], () => [], {\n    isInteractive: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? -1 : numberAttribute(value)\n      }]\n    }],\n    _allowFocusWhenDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n  static ɵfac = function MatChipAvatar_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipAvatar)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipAvatar,\n    selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]],\n    hostAttrs: [\"role\", \"img\", 1, \"mat-mdc-chip-avatar\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--primary\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_AVATAR,\n      useExisting: MatChipAvatar\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAvatar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-avatar, [matChipAvatar]',\n      host: {\n        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n        'role': 'img'\n      },\n      providers: [{\n        provide: MAT_CHIP_AVATAR,\n        useExisting: MatChipAvatar\n      }]\n    }]\n  }], null, null);\n})();\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n  /**\n   * MDC considers all trailing actions as a remove icon,\n   * but we support non-interactive trailing icons.\n   */\n  isInteractive = false;\n  _isPrimary = false;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipTrailingIcon_BaseFactory;\n    return function MatChipTrailingIcon_Factory(__ngFactoryType__) {\n      return (ɵMatChipTrailingIcon_BaseFactory || (ɵMatChipTrailingIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipTrailingIcon)))(__ngFactoryType__ || MatChipTrailingIcon);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipTrailingIcon,\n    selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]],\n    hostAttrs: [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-trailing-icon\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_TRAILING_ICON,\n      useExisting: MatChipTrailingIcon\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n      host: {\n        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'aria-hidden': 'true'\n      },\n      providers: [{\n        provide: MAT_CHIP_TRAILING_ICON,\n        useExisting: MatChipTrailingIcon\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Directive to edit the parent chip when the leading action icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"edit\" icon\n * available at https://material.io/icons/#ic_edit.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <button matChipEdit aria-label=\"Edit\">\n *     <mat-icon>edit</mat-icon>\n *   </button>\n * </mat-chip>\n * ```\n */\nclass MatChipEdit extends MatChipAction {\n  _isPrimary = false;\n  _isLeading = true;\n  _handleClick(event) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip._edit();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip._edit();\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipEdit_BaseFactory;\n    return function MatChipEdit_Factory(__ngFactoryType__) {\n      return (ɵMatChipEdit_BaseFactory || (ɵMatChipEdit_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipEdit)))(__ngFactoryType__ || MatChipEdit);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipEdit,\n    selectors: [[\"\", \"matChipEdit\", \"\"]],\n    hostAttrs: [\"role\", \"button\", 1, \"mat-mdc-chip-edit\", \"mat-mdc-chip-avatar\", \"mat-focus-indicator\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--primary\"],\n    hostVars: 1,\n    hostBindings: function MatChipEdit_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-hidden\", null);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_EDIT,\n      useExisting: MatChipEdit\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipEdit, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipEdit]',\n      host: {\n        'class': 'mat-mdc-chip-edit mat-mdc-chip-avatar mat-focus-indicator ' + 'mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n        'role': 'button',\n        '[attr.aria-hidden]': 'null'\n      },\n      providers: [{\n        provide: MAT_CHIP_EDIT,\n        useExisting: MatChipEdit\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n  _isPrimary = false;\n  _handleClick(event) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipRemove_BaseFactory;\n    return function MatChipRemove_Factory(__ngFactoryType__) {\n      return (ɵMatChipRemove_BaseFactory || (ɵMatChipRemove_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipRemove)))(__ngFactoryType__ || MatChipRemove);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipRemove,\n    selectors: [[\"\", \"matChipRemove\", \"\"]],\n    hostAttrs: [\"role\", \"button\", 1, \"mat-mdc-chip-remove\", \"mat-mdc-chip-trailing-icon\", \"mat-focus-indicator\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n    hostVars: 1,\n    hostBindings: function MatChipRemove_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-hidden\", null);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_REMOVE,\n      useExisting: MatChipRemove\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRemove, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipRemove]',\n      host: {\n        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator ' + 'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'role': 'button',\n        '[attr.aria-hidden]': 'null'\n      },\n      providers: [{\n        provide: MAT_CHIP_REMOVE,\n        useExisting: MatChipRemove\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _tagName = inject(HOST_TAG_NAME);\n  _ngZone = inject(NgZone);\n  _focusMonitor = inject(FocusMonitor);\n  _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n    optional: true\n  });\n  _document = inject(DOCUMENT);\n  /** Emits when the chip is focused. */\n  _onFocus = new Subject();\n  /** Emits when the chip is blurred. */\n  _onBlur = new Subject();\n  /** Whether this chip is a basic (unstyled) chip. */\n  _isBasicChip;\n  /** Role for the root of the chip. */\n  role = null;\n  /** Whether the chip has focus. */\n  _hasFocusInternal = false;\n  /** Whether moving focus into the chip is pending. */\n  _pendingFocus;\n  /** Subscription to changes in the chip's actions. */\n  _actionChanges;\n  /** Whether animations for the chip are enabled. */\n  _animationsDisabled = _animationsDisabled();\n  /** All avatars present in the chip. */\n  _allLeadingIcons;\n  /** All trailing icons present in the chip. */\n  _allTrailingIcons;\n  /** All edit icons present in the chip. */\n  _allEditIcons;\n  /** All remove icons present in the chip. */\n  _allRemoveIcons;\n  _hasFocus() {\n    return this._hasFocusInternal;\n  }\n  /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n  id = inject(_IdGenerator).getId('mat-mdc-chip-');\n  // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n  // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n  // datepicker's use case.\n  /** ARIA label for the content of the chip. */\n  ariaLabel = null;\n  // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n  // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n  // datepicker's use case.\n  /** ARIA description for the content of the chip. */\n  ariaDescription = null;\n  /** Whether the chip list is disabled. */\n  _chipListDisabled = false;\n  /** Whether the chip was focused when it was removed. */\n  _hadFocusOnRemove = false;\n  _textElement;\n  /**\n   * The value of the chip. Defaults to the content inside\n   * the `mat-mdc-chip-action-label` element.\n   */\n  get value() {\n    return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value;\n  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n  /**\n   * Theme color of the chip. This API is supported in M2 themes only, it has no\n   * effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/chips/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  removable = true;\n  /**\n   * Colors the chip for emphasis as if it were selected.\n   */\n  highlighted = false;\n  /** Whether the ripple effect is disabled or not. */\n  disableRipple = false;\n  /** Whether the chip is disabled. */\n  get disabled() {\n    return this._disabled || this._chipListDisabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Emitted when a chip is to be removed. */\n  removed = new EventEmitter();\n  /** Emitted when the chip is destroyed. */\n  destroyed = new EventEmitter();\n  /** The unstyled chip selector for this component. */\n  basicChipAttrName = 'mat-basic-chip';\n  /** The chip's leading icon. */\n  leadingIcon;\n  /** The chip's leading edit icon. */\n  editIcon;\n  /** The chip's trailing icon. */\n  trailingIcon;\n  /** The chip's trailing remove icon. */\n  removeIcon;\n  /** Action receiving the primary set of user interactions. */\n  primaryAction;\n  /**\n   * Handles the lazy creation of the MatChip ripple.\n   * Used to improve initial load time of large applications.\n   */\n  _rippleLoader = inject(MatRippleLoader);\n  _injector = inject(Injector);\n  constructor() {\n    const styleLoader = inject(_CdkPrivateStyleLoader);\n    styleLoader.load(_StructuralStylesLoader);\n    styleLoader.load(_VisuallyHiddenLoader);\n    this._monitorFocus();\n    this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n      className: 'mat-mdc-chip-ripple',\n      disabled: this._isRippleDisabled()\n    });\n  }\n  ngOnInit() {\n    // This check needs to happen in `ngOnInit` so the overridden value of\n    // `basicChipAttrName` coming from base classes can be picked up.\n    this._isBasicChip = this._elementRef.nativeElement.hasAttribute(this.basicChipAttrName) || this._tagName.toLowerCase() === this.basicChipAttrName;\n  }\n  ngAfterViewInit() {\n    this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n    if (this._pendingFocus) {\n      this._pendingFocus = false;\n      this.focus();\n    }\n  }\n  ngAfterContentInit() {\n    // Since the styling depends on the presence of some\n    // actions, we have to mark for check on changes.\n    this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allEditIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  ngDoCheck() {\n    this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n    this._actionChanges?.unsubscribe();\n    this.destroyed.emit({\n      chip: this\n    });\n    this.destroyed.complete();\n  }\n  /**\n   * Allows for programmatic removal of the chip.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove() {\n    if (this.removable) {\n      this._hadFocusOnRemove = this._hasFocus();\n      this.removed.emit({\n        chip: this\n      });\n    }\n  }\n  /** Whether or not the ripple should be disabled. */\n  _isRippleDisabled() {\n    return this.disabled || this.disableRipple || this._animationsDisabled || this._isBasicChip || !this._hasInteractiveActions() || !!this._globalRippleOptions?.disabled;\n  }\n  /** Returns whether the chip has a trailing icon. */\n  _hasTrailingIcon() {\n    return !!(this.trailingIcon || this.removeIcon);\n  }\n  /** Handles keyboard events on the chip. */\n  _handleKeydown(event) {\n    // Ignore backspace events where the user is holding down the key\n    // so that we don't accidentally remove too many chips.\n    if (event.keyCode === BACKSPACE && !event.repeat || event.keyCode === DELETE) {\n      event.preventDefault();\n      this.remove();\n    }\n  }\n  /** Allows for programmatic focusing of the chip. */\n  focus() {\n    if (!this.disabled) {\n      // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n      // This can happen if the consumer tries to focus a chip immediately after it is added.\n      // Queue the method to be called again on init.\n      if (this.primaryAction) {\n        this.primaryAction.focus();\n      } else {\n        this._pendingFocus = true;\n      }\n    }\n  }\n  /** Gets the action that contains a specific target node. */\n  _getSourceAction(target) {\n    return this._getActions().find(action => {\n      const element = action._elementRef.nativeElement;\n      return element === target || element.contains(target);\n    });\n  }\n  /** Gets all of the actions within the chip. */\n  _getActions() {\n    const result = [];\n    if (this.editIcon) {\n      result.push(this.editIcon);\n    }\n    if (this.primaryAction) {\n      result.push(this.primaryAction);\n    }\n    if (this.removeIcon) {\n      result.push(this.removeIcon);\n    }\n    if (this.trailingIcon) {\n      result.push(this.trailingIcon);\n    }\n    return result;\n  }\n  /** Handles interactions with the primary action of the chip. */\n  _handlePrimaryActionInteraction() {\n    // Empty here, but is overwritten in child classes.\n  }\n  /** Returns whether the chip has any interactive actions. */\n  _hasInteractiveActions() {\n    return this._getActions().some(a => a.isInteractive);\n  }\n  /** Handles interactions with the edit action of the chip. */\n  _edit(event) {\n    // Empty here, but is overwritten in child classes.\n  }\n  /** Starts the focus monitoring process on the chip. */\n  _monitorFocus() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      const hasFocus = origin !== null;\n      if (hasFocus !== this._hasFocusInternal) {\n        this._hasFocusInternal = hasFocus;\n        if (hasFocus) {\n          this._onFocus.next({\n            chip: this\n          });\n        } else {\n          // When animations are enabled, Angular may end up removing the chip from the DOM a little\n          // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n          // that moves focus to the next item. To work around the issue, we defer marking the chip\n          // as not focused until after the next render.\n          this._changeDetectorRef.markForCheck();\n          setTimeout(() => this._ngZone.run(() => this._onBlur.next({\n            chip: this\n          })));\n        }\n      }\n    });\n  }\n  static ɵfac = function MatChip_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChip)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChip,\n    selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]],\n    contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_EDIT, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_EDIT, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.leadingIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allLeadingIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTrailingIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allEditIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allRemoveIcons = _t);\n      }\n    },\n    viewQuery: function MatChip_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatChipAction, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.primaryAction = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip\"],\n    hostVars: 31,\n    hostBindings: function MatChip_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChip_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"role\", ctx.role)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n        i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-basic-chip\", ctx._isBasicChip)(\"mat-mdc-standard-chip\", !ctx._isBasicChip)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon())(\"_mat-animation-noopable\", ctx._animationsDisabled);\n      }\n    },\n    inputs: {\n      role: \"role\",\n      id: \"id\",\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaDescription: [0, \"aria-description\", \"ariaDescription\"],\n      value: \"value\",\n      color: \"color\",\n      removable: [2, \"removable\", \"removable\", booleanAttribute],\n      highlighted: [2, \"highlighted\", \"highlighted\", booleanAttribute],\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      removed: \"removed\",\n      destroyed: \"destroyed\"\n    },\n    exportAs: [\"matChip\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP,\n      useExisting: MatChip\n    }])],\n    ngContentSelectors: _c1,\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", 3, \"isInteractive\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n    template: function MatChip_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1)(2, \"span\", 2);\n        i0.ɵɵconditionalCreate(3, MatChip_Conditional_3_Template, 2, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵconditionalCreate(7, MatChip_Conditional_7_Template, 2, 0, \"span\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"isInteractive\", false);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.leadingIcon ? 3 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n      }\n    },\n    dependencies: [MatChipAction],\n    styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChip, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]',\n      exportAs: 'matChip',\n      host: {\n        'class': 'mat-mdc-chip',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[id]': 'id',\n        '[attr.role]': 'role',\n        '[attr.aria-label]': 'ariaLabel',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_CHIP,\n        useExisting: MatChip\n      }],\n      imports: [MatChipAction],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"]\n    }]\n  }], () => [], {\n    role: [{\n      type: Input\n    }],\n    _allLeadingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_AVATAR, {\n        descendants: true\n      }]\n    }],\n    _allTrailingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_TRAILING_ICON, {\n        descendants: true\n      }]\n    }],\n    _allEditIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_EDIT, {\n        descendants: true\n      }]\n    }],\n    _allRemoveIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_REMOVE, {\n        descendants: true\n      }]\n    }],\n    id: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaDescription: [{\n      type: Input,\n      args: ['aria-description']\n    }],\n    value: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    highlighted: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    removed: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    leadingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_AVATAR]\n    }],\n    editIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_EDIT]\n    }],\n    trailingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_TRAILING_ICON]\n    }],\n    removeIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_REMOVE]\n    }],\n    primaryAction: [{\n      type: ViewChild,\n      args: [MatChipAction]\n    }]\n  });\n})();\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n  source;\n  selected;\n  isUserInput;\n  constructor(/** Reference to the chip that emitted the event. */\n  source, /** Whether the chip that emitted the event is selected. */\n  selected, /** Whether the selection change was a result of a user interaction. */\n  isUserInput = false) {\n    this.source = source;\n    this.selected = selected;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n  /** Default chip options. */\n  _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Whether the chip list is selectable. */\n  chipListSelectable = true;\n  /** Whether the chip list is in multi-selection mode. */\n  _chipListMultiple = false;\n  /** Whether the chip list hides single-selection indicator. */\n  _chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n  /**\n   * Whether or not the chip is selectable.\n   *\n   * When a chip is not selectable, changes to its selected state are always\n   * ignored. By default an option chip is selectable, and it becomes\n   * non-selectable if its parent chip list is not selectable.\n   */\n  get selectable() {\n    return this._selectable && this.chipListSelectable;\n  }\n  set selectable(value) {\n    this._selectable = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  _selectable = true;\n  /** Whether the chip is selected. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._setSelectedState(value, false, true);\n  }\n  _selected = false;\n  /**\n   * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n   * interaction patterns.\n   *\n   * From [WAI ARIA Listbox authoring practices guide](\n   * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n   *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n   *  set to true. All options that are selectable but not selected have either aria-selected or\n   *  aria-checked set to false.\"\n   *\n   * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n   * VoiceOver reading every option as \"selected\" (#25736).\n   */\n  get ariaSelected() {\n    return this.selectable ? this.selected.toString() : null;\n  }\n  /** The unstyled chip selector for this component. */\n  basicChipAttrName = 'mat-basic-chip-option';\n  /** Emitted when the chip is selected or deselected. */\n  selectionChange = new EventEmitter();\n  ngOnInit() {\n    super.ngOnInit();\n    this.role = 'presentation';\n  }\n  /** Selects the chip. */\n  select() {\n    this._setSelectedState(true, false, true);\n  }\n  /** Deselects the chip. */\n  deselect() {\n    this._setSelectedState(false, false, true);\n  }\n  /** Selects this chip and emits userInputSelection event */\n  selectViaInteraction() {\n    this._setSelectedState(true, true, true);\n  }\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput = false) {\n    this._setSelectedState(!this.selected, isUserInput, true);\n    return this.selected;\n  }\n  _handlePrimaryActionInteraction() {\n    if (!this.disabled) {\n      // Interacting with the primary action implies that the chip already has focus, however\n      // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n      // We work around it by explicitly focusing the primary action of the current chip.\n      this.focus();\n      if (this.selectable) {\n        this.toggleSelected(true);\n      }\n    }\n  }\n  _hasLeadingGraphic() {\n    if (this.leadingIcon) {\n      return true;\n    }\n    // The checkmark graphic communicates selected state for both single-select and multi-select.\n    // Include checkmark in single-select to fix a11y issue where selected state is communicated\n    // visually only using color (#25886).\n    return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n  }\n  _setSelectedState(isSelected, isUserInput, emitEvent) {\n    if (isSelected !== this.selected) {\n      this._selected = isSelected;\n      if (emitEvent) {\n        this.selectionChange.emit({\n          source: this,\n          isUserInput,\n          selected: this.selected\n        });\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipOption_BaseFactory;\n    return function MatChipOption_Factory(__ngFactoryType__) {\n      return (ɵMatChipOption_BaseFactory || (ɵMatChipOption_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipOption)))(__ngFactoryType__ || MatChipOption);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipOption,\n    selectors: [[\"mat-basic-chip-option\"], [\"\", \"mat-basic-chip-option\", \"\"], [\"mat-chip-option\"], [\"\", \"mat-chip-option\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-option\"],\n    hostVars: 37,\n    hostBindings: function MatChipOption_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n        i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--filter\", !ctx._isBasicChip)(\"mdc-evolution-chip--selectable\", !ctx._isBasicChip)(\"mat-mdc-chip-selected\", ctx.selected)(\"mat-mdc-chip-multiple\", ctx._chipListMultiple)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--selected\", ctx.selected)(\"mdc-evolution-chip--selecting\", !ctx._animationsDisabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-graphic\", ctx._hasLeadingGraphic())(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n      }\n    },\n    inputs: {\n      selectable: [2, \"selectable\", \"selectable\", booleanAttribute],\n      selected: [2, \"selected\", \"selected\", booleanAttribute]\n    },\n    outputs: {\n      selectionChange: \"selectionChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatChip,\n      useExisting: MatChipOption\n    }, {\n      provide: MAT_CHIP,\n      useExisting: MatChipOption\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 8,\n    vars: 6,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", \"role\", \"option\", 3, \"_allowFocusWhenDisabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [1, \"mdc-evolution-chip__checkmark\"], [\"viewBox\", \"-2 -3 30 30\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mdc-evolution-chip__checkmark-svg\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-evolution-chip__checkmark-path\"]],\n    template: function MatChipOption_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1)(2, \"button\", 2);\n        i0.ɵɵconditionalCreate(3, MatChipOption_Conditional_3_Template, 5, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵconditionalCreate(7, MatChipOption_Conditional_7_Template, 2, 0, \"span\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"_allowFocusWhenDisabled\", true);\n        i0.ɵɵattribute(\"aria-description\", ctx.ariaDescription)(\"aria-label\", ctx.ariaLabel)(\"aria-selected\", ctx.ariaSelected);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasLeadingGraphic() ? 3 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n      }\n    },\n    dependencies: [MatChipAction],\n    styles: [_c2],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]',\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-option',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n        '[class.mat-mdc-chip-selected]': 'selected',\n        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--selected]': 'selected',\n        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n        // starts and removes it once the animation is finished. We don't need to go through all\n        // the trouble, because we only care about the selection animation. MDC needs to do it,\n        // because they also have an exit animation that we don't care about.\n        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '[id]': 'id'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipOption\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipOption\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatChipAction],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"]\n    }]\n  }], null, {\n    selectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selected: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectionChange: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n  _elementRef = inject(ElementRef);\n  _document = inject(DOCUMENT);\n  constructor() {}\n  initialize(initialValue) {\n    this.getNativeElement().focus();\n    this.setValue(initialValue);\n  }\n  getNativeElement() {\n    return this._elementRef.nativeElement;\n  }\n  setValue(value) {\n    this.getNativeElement().textContent = value;\n    this._moveCursorToEndOfInput();\n  }\n  getValue() {\n    return this.getNativeElement().textContent || '';\n  }\n  _moveCursorToEndOfInput() {\n    const range = this._document.createRange();\n    range.selectNodeContents(this.getNativeElement());\n    range.collapse(false);\n    const sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n  static ɵfac = function MatChipEditInput_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipEditInput)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipEditInput,\n    selectors: [[\"span\", \"matChipEditInput\", \"\"]],\n    hostAttrs: [\"role\", \"textbox\", \"tabindex\", \"-1\", \"contenteditable\", \"true\", 1, \"mat-chip-edit-input\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipEditInput, [{\n    type: Directive,\n    args: [{\n      selector: 'span[matChipEditInput]',\n      host: {\n        'class': 'mat-chip-edit-input',\n        'role': 'textbox',\n        'tabindex': '-1',\n        'contenteditable': 'true'\n      }\n    }]\n  }], () => [], null);\n})();\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n  basicChipAttrName = 'mat-basic-chip-row';\n  /**\n   * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n   * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n   * while the editing action is being initialized.\n   */\n  _editStartPending = false;\n  editable = false;\n  /** Emitted when the chip is edited. */\n  edited = new EventEmitter();\n  /** The default chip edit input that is used if none is projected into this chip row. */\n  defaultEditInput;\n  /** The projected chip edit input. */\n  contentEditInput;\n  /**\n   * Set on a mousedown when the chip is already focused via mouse or keyboard.\n   *\n   * This allows us to ensure chip is already focused when deciding whether to enter the\n   * edit mode on a subsequent click. Otherwise, the chip appears focused when handling the\n   * first click event.\n   */\n  _alreadyFocused = false;\n  _isEditing = false;\n  constructor() {\n    super();\n    this.role = 'row';\n    this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      if (this._isEditing && !this._editStartPending) {\n        this._onEditFinish();\n      }\n      this._alreadyFocused = false;\n    });\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // Sets _alreadyFocused (ahead of click) when chip already has focus.\n    this._ngZone.runOutsideAngular(() => {\n      this._elementRef.nativeElement.addEventListener('mousedown', () => this._alreadyFocused = this._hasFocus());\n    });\n  }\n  _hasLeadingActionIcon() {\n    // The leading action (edit) icon is hidden while editing.\n    return !this._isEditing && !!this.editIcon;\n  }\n  _hasTrailingIcon() {\n    // The trailing icon is hidden while editing.\n    return !this._isEditing && super._hasTrailingIcon();\n  }\n  /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n  _handleFocus() {\n    if (!this._isEditing && !this.disabled) {\n      this.focus();\n    }\n  }\n  _handleKeydown(event) {\n    if (event.keyCode === ENTER && !this.disabled) {\n      if (this._isEditing) {\n        event.preventDefault();\n        this._onEditFinish();\n      } else if (this.editable) {\n        this._startEditing(event);\n      }\n    } else if (this._isEditing) {\n      // Stop the event from reaching the chip set in order to avoid navigating.\n      event.stopPropagation();\n    } else {\n      super._handleKeydown(event);\n    }\n  }\n  _handleClick(event) {\n    if (!this.disabled && this.editable && !this._isEditing && this._alreadyFocused) {\n      // Ensure click event not picked up unintentionally by other listeners, as\n      // once editing starts, the source element is detached from DOM.\n      event.preventDefault();\n      event.stopPropagation();\n      this._startEditing(event);\n    }\n  }\n  _handleDoubleclick(event) {\n    if (!this.disabled && this.editable) {\n      this._startEditing(event);\n    }\n  }\n  _edit() {\n    // markForCheck necessary for edit input to be rendered\n    this._changeDetectorRef.markForCheck();\n    this._startEditing();\n  }\n  _startEditing(event) {\n    if (!this.primaryAction || this.removeIcon && !!event && this._getSourceAction(event.target) === this.removeIcon) {\n      return;\n    }\n    // The value depends on the DOM so we need to extract it before we flip the flag.\n    const value = this.value;\n    this._isEditing = this._editStartPending = true;\n    // Defer initializing the input until after it has been added to the DOM.\n    afterNextRender(() => {\n      this._getEditInput().initialize(value);\n      // Necessary when using edit icon to prevent edit from aborting\n      setTimeout(() => this._ngZone.run(() => this._editStartPending = false));\n    }, {\n      injector: this._injector\n    });\n  }\n  _onEditFinish() {\n    this._isEditing = this._editStartPending = false;\n    this.edited.emit({\n      chip: this,\n      value: this._getEditInput().getValue()\n    });\n    // If the edit input is still focused or focus was returned to the body after it was destroyed,\n    // return focus to the chip contents.\n    if (this._document.activeElement === this._getEditInput().getNativeElement() || this._document.activeElement === this._document.body) {\n      this.primaryAction.focus();\n    }\n  }\n  _isRippleDisabled() {\n    return super._isRippleDisabled() || this._isEditing;\n  }\n  /**\n   * Gets the projected chip edit input, or the default input if none is projected in. One of these\n   * two values is guaranteed to be defined.\n   */\n  _getEditInput() {\n    return this.contentEditInput || this.defaultEditInput;\n  }\n  static ɵfac = function MatChipRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipRow)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipRow,\n    selectors: [[\"mat-chip-row\"], [\"\", \"mat-chip-row\", \"\"], [\"mat-basic-chip-row\"], [\"\", \"mat-basic-chip-row\", \"\"]],\n    contentQueries: function MatChipRow_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipEditInput, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentEditInput = _t.first);\n      }\n    },\n    viewQuery: function MatChipRow_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatChipEditInput, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultEditInput = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-row\", \"mdc-evolution-chip\"],\n    hostVars: 29,\n    hostBindings: function MatChipRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipRow_focus_HostBindingHandler() {\n          return ctx._handleFocus();\n        })(\"click\", function MatChipRow_click_HostBindingHandler($event) {\n          return ctx._handleClick($event);\n        })(\"dblclick\", function MatChipRow_dblclick_HostBindingHandler($event) {\n          return ctx._handleDoubleclick($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n        i0.ɵɵclassProp(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-editing\", ctx._isEditing)(\"mat-mdc-chip-editable\", ctx.editable)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-leading-action\", ctx._hasLeadingActionIcon())(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n      }\n    },\n    inputs: {\n      editable: \"editable\"\n    },\n    outputs: {\n      edited: \"edited\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatChip,\n      useExisting: MatChipRow\n    }, {\n      provide: MAT_CHIP,\n      useExisting: MatChipRow\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c4,\n    decls: 9,\n    vars: 8,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--leading\"], [\"role\", \"gridcell\", \"matChipAction\", \"\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\", 3, \"disabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [\"matChipEditInput\", \"\"]],\n    template: function MatChipRow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵconditionalCreate(0, MatChipRow_Conditional_0_Template, 1, 0, \"span\", 0);\n        i0.ɵɵconditionalCreate(1, MatChipRow_Conditional_1_Template, 2, 0, \"span\", 1);\n        i0.ɵɵelementStart(2, \"span\", 2);\n        i0.ɵɵconditionalCreate(3, MatChipRow_Conditional_3_Template, 2, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵconditionalCreate(5, MatChipRow_Conditional_5_Template, 2, 1)(6, MatChipRow_Conditional_6_Template, 1, 0);\n        i0.ɵɵelement(7, \"span\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵconditionalCreate(8, MatChipRow_Conditional_8_Template, 2, 0, \"span\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(!ctx._isEditing ? 0 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasLeadingActionIcon() ? 1 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"aria-description\", ctx.ariaDescription)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.leadingIcon ? 3 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx._isEditing ? 5 : 6);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 8 : -1);\n      }\n    },\n    dependencies: [MatChipAction, MatChipEditInput],\n    styles: [_c2],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]',\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-editing]': '_isEditing',\n        '[class.mat-mdc-chip-editable]': 'editable',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-leading-action]': '_hasLeadingActionIcon()',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[id]': 'id',\n        // Has to have a negative tabindex in order to capture\n        // focus and redirect it to the primary action.\n        '[attr.tabindex]': 'disabled ? null : -1',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '(focus)': '_handleFocus()',\n        '(click)': '_handleClick($event)',\n        '(dblclick)': '_handleDoubleclick($event)'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipRow\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipRow\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatChipAction, MatChipEditInput],\n      template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n@if (_hasLeadingActionIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--leading\\\" role=\\\"gridcell\\\">\\n    <ng-content select=\\\"[matChipEdit]\\\"></ng-content>\\n  </span>\\n}\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"]\n    }]\n  }], () => [], {\n    editable: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }],\n    defaultEditInput: [{\n      type: ViewChild,\n      args: [MatChipEditInput]\n    }],\n    contentEditInput: [{\n      type: ContentChild,\n      args: [MatChipEditInput]\n    }]\n  });\n})();\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  /** Index of the last destroyed chip that had focus. */\n  _lastDestroyedFocusedChipIndex = null;\n  /** Used to manage focus within the chip list. */\n  _keyManager;\n  /** Subject that emits when the component has been destroyed. */\n  _destroyed = new Subject();\n  /** Role to use if it hasn't been overwritten by the user. */\n  _defaultRole = 'presentation';\n  /** Combined stream of all of the child chips' focus events. */\n  get chipFocusChanges() {\n    return this._getChipStream(chip => chip._onFocus);\n  }\n  /** Combined stream of all of the child chips' destroy events. */\n  get chipDestroyedChanges() {\n    return this._getChipStream(chip => chip.destroyed);\n  }\n  /** Combined stream of all of the child chips' remove events. */\n  get chipRemovedChanges() {\n    return this._getChipStream(chip => chip.removed);\n  }\n  /** Whether the chip set is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._syncChipsState();\n  }\n  _disabled = false;\n  /** Whether the chip list contains chips or not. */\n  get empty() {\n    return !this._chips || this._chips.length === 0;\n  }\n  /** The ARIA role applied to the chip set. */\n  get role() {\n    if (this._explicitRole) {\n      return this._explicitRole;\n    }\n    return this.empty ? null : this._defaultRole;\n  }\n  /** Tabindex of the chip set. */\n  tabIndex = 0;\n  set role(value) {\n    this._explicitRole = value;\n  }\n  _explicitRole = null;\n  /** Whether any of the chips inside of this chip-set has focus. */\n  get focused() {\n    return this._hasFocusedChip();\n  }\n  /** The chips that are part of this chip set. */\n  _chips;\n  /** Flat list of all the actions contained within the chips. */\n  _chipActions = new QueryList();\n  constructor() {}\n  ngAfterViewInit() {\n    this._setUpFocusManagement();\n    this._trackChipSetChanges();\n    this._trackDestroyedFocusedChip();\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._chipActions.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Checks whether any of the chips is focused. */\n  _hasFocusedChip() {\n    return this._chips && this._chips.some(chip => chip._hasFocus());\n  }\n  /** Syncs the chip-set's state with the individual chips. */\n  _syncChipsState() {\n    this._chips?.forEach(chip => {\n      chip._chipListDisabled = this._disabled;\n      chip._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n  focus() {}\n  /** Handles keyboard events on the chip set. */\n  _handleKeydown(event) {\n    if (this._originatesFromChip(event)) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  _isValidIndex(index) {\n    return index >= 0 && index < this._chips.length;\n  }\n  /**\n   * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the set from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    const previous = this._elementRef.nativeElement.tabIndex;\n    if (previous !== -1) {\n      // Set the tabindex directly on the element, instead of going through\n      // the data binding, because we aren't guaranteed that change detection\n      // will run quickly enough to allow focus to escape.\n      this._elementRef.nativeElement.tabIndex = -1;\n      // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n      // doesn't allow enough time for the focus to escape.\n      setTimeout(() => this._elementRef.nativeElement.tabIndex = previous);\n    }\n  }\n  /**\n   * Gets a stream of events from all the chips within the set.\n   * The stream will automatically incorporate any newly-added chips.\n   */\n  _getChipStream(mappingFunction) {\n    return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n  }\n  /** Checks whether an event comes from inside a chip element. */\n  _originatesFromChip(event) {\n    let currentElement = event.target;\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-mdc-chip')) {\n        return true;\n      }\n      currentElement = currentElement.parentElement;\n    }\n    return false;\n  }\n  /** Sets up the chip set's focus management logic. */\n  _setUpFocusManagement() {\n    // Create a flat `QueryList` containing the actions of all of the chips.\n    // This allows us to navigate both within the chip and move to the next/previous\n    // one using the existing `ListKeyManager`.\n    this._chips.changes.pipe(startWith(this._chips)).subscribe(chips => {\n      const actions = [];\n      chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n      this._chipActions.reset(actions);\n      this._chipActions.notifyOnChanges();\n    });\n    this._keyManager = new FocusKeyManager(this._chipActions).withVerticalOrientation().withHorizontalOrientation(this._dir ? this._dir.value : 'ltr').withHomeAndEnd().skipPredicate(action => this._skipPredicate(action));\n    // Keep the manager active index in sync so that navigation picks\n    // up from the current chip if the user clicks into the list directly.\n    this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({\n      chip\n    }) => {\n      const action = chip._getSourceAction(document.activeElement);\n      if (action) {\n        this._keyManager.updateActiveItem(action);\n      }\n    });\n    this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n  }\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive and disabled actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n    // chips.\n    return !action.isInteractive || action.disabled;\n  }\n  /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n  _trackChipSetChanges() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => this._syncChipsState());\n      }\n      this._redirectDestroyedChipFocus();\n    });\n  }\n  /** Starts tracking the destroyed chips in order to capture the focused one. */\n  _trackDestroyedFocusedChip() {\n    this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      // If the focused chip is destroyed, save its index so that we can move focus to the next\n      // chip. We only save the index here, rather than move the focus immediately, because we want\n      // to wait until the chip is removed from the chip list before focusing the next one. This\n      // allows us to keep focus on the same index if the chip gets swapped out.\n      const chipArray = this._chips.toArray();\n      const chipIndex = chipArray.indexOf(event.chip);\n      const hasFocus = event.chip._hasFocus();\n      const wasLastFocused = event.chip._hadFocusOnRemove && this._keyManager.activeItem && event.chip._getActions().includes(this._keyManager.activeItem);\n      // Note that depending on the timing, the chip might've already lost focus by the\n      // time we check this. We need the `wasLastFocused` as a fallback to detect such cases.\n      // In `wasLastFocused` we also need to ensure that the chip actually had focus when it was\n      // deleted so that we don't steal away the user's focus after they've moved on from the chip.\n      const shouldMoveFocus = hasFocus || wasLastFocused;\n      if (this._isValidIndex(chipIndex) && shouldMoveFocus) {\n        this._lastDestroyedFocusedChipIndex = chipIndex;\n      }\n    });\n  }\n  /**\n   * Finds the next appropriate chip to move focus to,\n   * if the currently-focused chip is destroyed.\n   */\n  _redirectDestroyedChipFocus() {\n    if (this._lastDestroyedFocusedChipIndex == null) {\n      return;\n    }\n    if (this._chips.length) {\n      const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n      const chipToFocus = this._chips.toArray()[newIndex];\n      if (chipToFocus.disabled) {\n        // If we're down to one disabled chip, move focus back to the set.\n        if (this._chips.length === 1) {\n          this.focus();\n        } else {\n          this._keyManager.setPreviousItemActive();\n        }\n      } else {\n        chipToFocus.focus();\n      }\n    } else {\n      this.focus();\n    }\n    this._lastDestroyedFocusedChipIndex = null;\n  }\n  static ɵfac = function MatChipSet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipSet)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipSet,\n    selectors: [[\"mat-chip-set\"]],\n    contentQueries: function MatChipSet_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChip, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip-set\", \"mdc-evolution-chip-set\"],\n    hostVars: 1,\n    hostBindings: function MatChipSet_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChipSet_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      role: \"role\",\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)]\n    },\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipSet_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵdomElementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵdomElementEnd();\n      }\n    },\n    styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipSet, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-set',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n        '(keydown)': '_handleKeydown($event)',\n        '[attr.role]': 'role'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    role: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChip, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n  source;\n  value;\n  constructor(/** Chip listbox that emitted the event. */\n  source, /** Value of the chip listbox when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatChipListbox),\n  multi: true\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n  /**\n   * Function when touched. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onTouched = () => {};\n  /**\n   * Function when changed. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onChange = () => {};\n  // TODO: MDC uses `grid` here\n  _defaultRole = 'listbox';\n  /** Default chip options. */\n  _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Whether the user should be allowed to select multiple chips. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    this._multiple = value;\n    this._syncListboxProperties();\n  }\n  _multiple = false;\n  /** The array of selected chips inside the chip listbox. */\n  get selected() {\n    const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n    return this.multiple ? selectedChips : selectedChips[0];\n  }\n  /** Orientation of the chip list. */\n  ariaOrientation = 'horizontal';\n  /**\n   * Whether or not this chip listbox is selectable.\n   *\n   * When a chip listbox is not selectable, the selected states for all\n   * the chips inside the chip listbox are always ignored.\n   */\n  get selectable() {\n    return this._selectable;\n  }\n  set selectable(value) {\n    this._selectable = value;\n    this._syncListboxProperties();\n  }\n  _selectable = true;\n  /**\n   * A function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  compareWith = (o1, o2) => o1 === o2;\n  /** Whether this chip listbox is required. */\n  required = false;\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._syncListboxProperties();\n  }\n  _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges() {\n    return this._getChipStream(chip => chip.selectionChange);\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** The value of the listbox, which is the combined value of the selected chips. */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    if (this._chips && this._chips.length) {\n      this._setSelectionByValue(value, false);\n    }\n    this._value = value;\n  }\n  _value;\n  /** Event emitted when the selected chip listbox value has been changed by the user. */\n  change = new EventEmitter();\n  _chips = undefined;\n  ngAfterContentInit() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.value !== undefined) {\n        Promise.resolve().then(() => {\n          this._setSelectionByValue(this.value, false);\n        });\n      }\n      // Update listbox selectable/multiple properties on chips\n      this._syncListboxProperties();\n    });\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n    this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      if (!this.multiple) {\n        this._chips.forEach(chip => {\n          if (chip !== event.source) {\n            chip._setSelectedState(false, false, false);\n          }\n        });\n      }\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n  /**\n   * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n   * are no selected chips.\n   */\n  focus() {\n    if (this.disabled) {\n      return;\n    }\n    const firstSelectedChip = this._getFirstSelectedChip();\n    if (firstSelectedChip && !firstSelectedChip.disabled) {\n      firstSelectedChip.focus();\n    } else if (this._chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    if (value != null) {\n      this.value = value;\n    } else {\n      this.value = undefined;\n    }\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /** Selects all chips with value. */\n  _setSelectionByValue(value, isUserInput = true) {\n    this._clearSelection();\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n    } else {\n      this._selectValue(value, isUserInput);\n    }\n  }\n  /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n  _blur() {\n    if (!this.disabled) {\n      // Wait to see if focus moves to an individual chip.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  _keydown(event) {\n    if (event.keyCode === TAB) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Marks the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    let valueToEmit = null;\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : undefined;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListboxChange(this, valueToEmit));\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Deselects every chip in the listbox.\n   * @param skip Chip that should not be deselected.\n   */\n  _clearSelection(skip) {\n    this._chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n  }\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  _selectValue(value, isUserInput) {\n    const correspondingChip = this._chips.find(chip => {\n      return chip.value != null && this.compareWith(chip.value, value);\n    });\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n    }\n    return correspondingChip;\n  }\n  /** Syncs the chip-listbox selection state with the individual chips. */\n  _syncListboxProperties() {\n    if (this._chips) {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._chips.forEach(chip => {\n          chip._chipListMultiple = this.multiple;\n          chip.chipListSelectable = this._selectable;\n          chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n          chip._changeDetectorRef.markForCheck();\n        });\n      });\n    }\n  }\n  /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n  _getFirstSelectedChip() {\n    if (Array.isArray(this.selected)) {\n      return this.selected.length ? this.selected[0] : undefined;\n    } else {\n      return this.selected;\n    }\n  }\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n    // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n    // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n    // exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    return !action.isInteractive;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipListbox_BaseFactory;\n    return function MatChipListbox_Factory(__ngFactoryType__) {\n      return (ɵMatChipListbox_BaseFactory || (ɵMatChipListbox_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipListbox)))(__ngFactoryType__ || MatChipListbox);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipListbox,\n    selectors: [[\"mat-chip-listbox\"]],\n    contentQueries: function MatChipListbox_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipOption, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mdc-evolution-chip-set\", \"mat-mdc-chip-listbox\"],\n    hostVars: 10,\n    hostBindings: function MatChipListbox_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipListbox_focus_HostBindingHandler() {\n          return ctx.focus();\n        })(\"blur\", function MatChipListbox_blur_HostBindingHandler() {\n          return ctx._blur();\n        })(\"keydown\", function MatChipListbox_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"tabIndex\", ctx.disabled || ctx.empty ? -1 : ctx.tabIndex);\n        i0.ɵɵattribute(\"role\", ctx.role)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-multiselectable\", ctx.multiple)(\"aria-orientation\", ctx.ariaOrientation);\n        i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-required\", ctx.required);\n      }\n    },\n    inputs: {\n      multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n      ariaOrientation: [0, \"aria-orientation\", \"ariaOrientation\"],\n      selectable: [2, \"selectable\", \"selectable\", booleanAttribute],\n      compareWith: \"compareWith\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n      value: \"value\"\n    },\n    outputs: {\n      change: \"change\"\n    },\n    features: [i0.ɵɵProvidersFeature([MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipListbox_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵdomElementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵdomElementEnd();\n      }\n    },\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipListbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-listbox',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n        '[attr.role]': 'role',\n        '[tabIndex]': '(disabled || empty) ? -1 : tabIndex',\n        '[attr.aria-required]': 'role ? required : null',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-orientation]': 'ariaOrientation',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()',\n        '(keydown)': '_keydown($event)'\n      },\n      providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"]\n    }]\n  }], null, {\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    ariaOrientation: [{\n      type: Input,\n      args: ['aria-orientation']\n    }],\n    selectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipOption, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n  source;\n  value;\n  constructor(/** Chip grid that emitted the event. */\n  source, /** Value of the chip grid when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends MatChipSet {\n  ngControl = inject(NgControl, {\n    optional: true,\n    self: true\n  });\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  controlType = 'mat-chip-grid';\n  /** The chip input to add more chips */\n  _chipInput;\n  _defaultRole = 'grid';\n  _errorStateTracker;\n  /**\n   * List of element ids to propagate to the chipInput's aria-describedby attribute.\n   */\n  _ariaDescribedbyIds = [];\n  /**\n   * Function when touched. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onTouched = () => {};\n  /**\n   * Function when changed. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onChange = () => {};\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get disabled() {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._syncChipsState();\n    this.stateChanges.next();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id() {\n    return this._chipInput.id;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty() {\n    return (!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0);\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get placeholder() {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  _placeholder;\n  /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n  get focused() {\n    return this._chipInput.focused || this._hasFocusedChip();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = value;\n    this.stateChanges.next();\n  }\n  _required;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat() {\n    return !this.empty || this.focused;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value = [];\n  /** An object used to control when error messages are shown. */\n  get errorStateMatcher() {\n    return this._errorStateTracker.matcher;\n  }\n  set errorStateMatcher(value) {\n    this._errorStateTracker.matcher = value;\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** Emits when the chip grid value has been changed by the user. */\n  change = new EventEmitter();\n  /**\n   * Emits whenever the raw value of the chip-grid changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  valueChange = new EventEmitter();\n  _chips = undefined;\n  /**\n   * Emits whenever the component state changes and should cause the parent\n   * form-field to update. Implemented as part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  stateChanges = new Subject();\n  /** Whether the chip grid is in an error state. */\n  get errorState() {\n    return this._errorStateTracker.errorState;\n  }\n  set errorState(value) {\n    this._errorStateTracker.errorState = value;\n  }\n  constructor() {\n    super();\n    const parentForm = inject(NgForm, {\n      optional: true\n    });\n    const parentFormGroup = inject(FormGroupDirective, {\n      optional: true\n    });\n    const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n    this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n  }\n  ngAfterContentInit() {\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n    merge(this.chipFocusChanges, this._chips.changes).pipe(takeUntil(this._destroyed)).subscribe(() => this.stateChanges.next());\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n    }\n  }\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.stateChanges.complete();\n  }\n  /** Associates an HTML input element with this chip grid. */\n  registerInput(inputElement) {\n    this._chipInput = inputElement;\n    this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event) {\n    if (!this.disabled && !this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n  /**\n   * Focuses the first chip in this chip grid, or the associated input when there\n   * are no eligible chips.\n   */\n  focus() {\n    if (this.disabled || this._chipInput.focused) {\n      return;\n    }\n    if (!this._chips.length || this._chips.first.disabled) {\n      // Delay until the next tick, because this can cause a \"changed after checked\"\n      // error if the input does something on focus (e.g. opens an autocomplete).\n      Promise.resolve().then(() => this._chipInput.focus());\n    } else {\n      const activeItem = this._keyManager.activeItem;\n      if (activeItem) {\n        activeItem.focus();\n      } else {\n        this._keyManager.setFirstItemActive();\n      }\n    }\n    this.stateChanges.next();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get describedByIds() {\n    return this._chipInput?.describedByIds || [];\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    // We must keep this up to date to handle the case where ids are set\n    // before the chip input is registered.\n    this._ariaDescribedbyIds = ids;\n    this._chipInput?.setDescribedByIds(ids);\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    // The user is responsible for creating the child chips, so we just store the value.\n    this._value = value;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n  /** Refreshes the error state of the chip grid. */\n  updateErrorState() {\n    this._errorStateTracker.updateErrorState();\n  }\n  /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n  _blur() {\n    if (!this.disabled) {\n      // Check whether the focus moved to chip input.\n      // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n      // to chip input, do nothing.\n      // Timeout is needed to wait for the focus() event trigger on chip input.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._propagateChanges();\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  /**\n   * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the grid from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (!this._chipInput.focused) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Handles custom keyboard events. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const activeItem = this._keyManager.activeItem;\n    if (keyCode === TAB) {\n      if (this._chipInput.focused && hasModifierKey(event, 'shiftKey') && this._chips.length && !this._chips.last.disabled) {\n        event.preventDefault();\n        if (activeItem) {\n          this._keyManager.setActiveItem(activeItem);\n        } else {\n          this._focusLastChip();\n        }\n      } else {\n        // Use the super method here since it doesn't check for the input\n        // focused state. This allows focus to escape if there's only one\n        // disabled chip left in the list.\n        super._allowFocusEscape();\n      }\n    } else if (!this._chipInput.focused) {\n      // The up and down arrows are supposed to navigate between the individual rows in the grid.\n      // We do this by filtering the actions down to the ones that have the same `_isPrimary`\n      // flag as the active action and moving focus between them ourseles instead of delegating\n      // to the key manager. For more information, see #29359 and:\n      // https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label\n      if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && activeItem) {\n        const eligibleActions = this._chipActions.filter(action => action._isPrimary === activeItem._isPrimary && !this._skipPredicate(action));\n        const currentIndex = eligibleActions.indexOf(activeItem);\n        const delta = event.keyCode === UP_ARROW ? -1 : 1;\n        event.preventDefault();\n        if (currentIndex > -1 && this._isValidIndex(currentIndex + delta)) {\n          this._keyManager.setActiveItem(eligibleActions[currentIndex + delta]);\n        }\n      } else {\n        super._handleKeydown(event);\n      }\n    }\n    this.stateChanges.next();\n  }\n  _focusLastChip() {\n    if (this._chips.length) {\n      this._chips.last.focus();\n    }\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n    this._value = valueToEmit;\n    this.change.emit(new MatChipGridChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  static ɵfac = function MatChipGrid_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipGrid)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipGrid,\n    selectors: [[\"mat-chip-grid\"]],\n    contentQueries: function MatChipGrid_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipRow, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip-set\", \"mat-mdc-chip-grid\", \"mdc-evolution-chip-set\"],\n    hostVars: 10,\n    hostBindings: function MatChipGrid_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipGrid_focus_HostBindingHandler() {\n          return ctx.focus();\n        })(\"blur\", function MatChipGrid_blur_HostBindingHandler() {\n          return ctx._blur();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.disabled || ctx._chips && ctx._chips.length === 0 ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState);\n        i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-invalid\", ctx.errorState)(\"mat-mdc-chip-list-required\", ctx.required);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      placeholder: \"placeholder\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      value: \"value\",\n      errorStateMatcher: \"errorStateMatcher\"\n    },\n    outputs: {\n      change: \"change\",\n      valueChange: \"valueChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatFormFieldControl,\n      useExisting: MatChipGrid\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipGrid_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵdomElementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵdomElementEnd();\n      }\n    },\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipGrid, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-grid',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n        '[attr.role]': 'role',\n        '[attr.tabindex]': '(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatChipGrid\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipRow, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n  _elementRef = inject(ElementRef);\n  /** Whether the control is focused. */\n  focused = false;\n  /** Register input for chip list */\n  get chipGrid() {\n    return this._chipGrid;\n  }\n  set chipGrid(value) {\n    if (value) {\n      this._chipGrid = value;\n      this._chipGrid.registerInput(this);\n    }\n  }\n  _chipGrid;\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n  addOnBlur = false;\n  /**\n   * The list of key codes that will trigger a chipEnd event.\n   *\n   * Defaults to `[ENTER]`.\n   */\n  separatorKeyCodes;\n  /** Emitted when a chip is to be added. */\n  chipEnd = new EventEmitter();\n  /** The input's placeholder text. */\n  placeholder = '';\n  /** Unique id for the input. */\n  id = inject(_IdGenerator).getId('mat-mdc-chip-list-input-');\n  /** Whether the input is disabled. */\n  get disabled() {\n    return this._disabled || this._chipGrid && this._chipGrid.disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Whether the input is readonly. */\n  readonly = false;\n  /** Whether the input should remain interactive when it is disabled. */\n  disabledInteractive;\n  /** Whether the input is empty. */\n  get empty() {\n    return !this.inputElement.value;\n  }\n  /** The native input element to which this directive is attached. */\n  inputElement;\n  constructor() {\n    const defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS);\n    const formField = inject(MAT_FORM_FIELD, {\n      optional: true\n    });\n    this.inputElement = this._elementRef.nativeElement;\n    this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n    this.disabledInteractive = defaultOptions.inputDisabledInteractive ?? false;\n    if (formField) {\n      this.inputElement.classList.add('mat-mdc-form-field-input-control');\n    }\n  }\n  ngOnChanges() {\n    this._chipGrid.stateChanges.next();\n  }\n  ngOnDestroy() {\n    this.chipEnd.complete();\n  }\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event) {\n    if (this.empty && event.keyCode === BACKSPACE) {\n      // Ignore events where the user is holding down backspace\n      // so that we don't accidentally remove too many chips.\n      if (!event.repeat) {\n        this._chipGrid._focusLastChip();\n      }\n      event.preventDefault();\n    } else {\n      this._emitChipEnd(event);\n    }\n  }\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipGrid.focused) {\n      this._chipGrid._blur();\n    }\n    this._chipGrid.stateChanges.next();\n  }\n  _focus() {\n    this.focused = true;\n    this._chipGrid.stateChanges.next();\n  }\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event) {\n    if (!event || this._isSeparatorKey(event) && !event.repeat) {\n      this.chipEnd.emit({\n        input: this.inputElement,\n        value: this.inputElement.value,\n        chipInput: this\n      });\n      event?.preventDefault();\n    }\n  }\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipGrid.stateChanges.next();\n  }\n  /** Focuses the input. */\n  focus() {\n    this.inputElement.focus();\n  }\n  /** Clears the input */\n  clear() {\n    this.inputElement.value = '';\n  }\n  /**\n   * Implemented as part of MatChipTextControl.\n   * @docs-private\n   */\n  get describedByIds() {\n    const element = this._elementRef.nativeElement;\n    const existingDescribedBy = element.getAttribute('aria-describedby');\n    return existingDescribedBy?.split(' ') || [];\n  }\n  setDescribedByIds(ids) {\n    const element = this._elementRef.nativeElement;\n    // Set the value directly in the DOM since this binding\n    // is prone to \"changed after checked\" errors.\n    if (ids.length) {\n      element.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      element.removeAttribute('aria-describedby');\n    }\n  }\n  /** Checks whether a keycode is one of the configured separators. */\n  _isSeparatorKey(event) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n  }\n  /** Gets the value to set on the `readonly` attribute. */\n  _getReadonlyAttribute() {\n    return this.readonly || this.disabled && this.disabledInteractive ? 'true' : null;\n  }\n  static ɵfac = function MatChipInput_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipInput)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipInput,\n    selectors: [[\"input\", \"matChipInputFor\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-chip-input\", \"mat-mdc-input-element\", \"mdc-text-field__input\", \"mat-input-element\"],\n    hostVars: 8,\n    hostBindings: function MatChipInput_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        })(\"blur\", function MatChipInput_blur_HostBindingHandler() {\n          return ctx._blur();\n        })(\"focus\", function MatChipInput_focus_HostBindingHandler() {\n          return ctx._focus();\n        })(\"input\", function MatChipInput_input_HostBindingHandler() {\n          return ctx._onInput();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"disabled\", ctx.disabled && !ctx.disabledInteractive ? \"\" : null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipGrid && ctx._chipGrid.ngControl ? ctx._chipGrid.ngControl.invalid : null)(\"aria-required\", ctx._chipGrid && ctx._chipGrid.required || null)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null)(\"readonly\", ctx._getReadonlyAttribute())(\"required\", ctx._chipGrid && ctx._chipGrid.required || null);\n      }\n    },\n    inputs: {\n      chipGrid: [0, \"matChipInputFor\", \"chipGrid\"],\n      addOnBlur: [2, \"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute],\n      separatorKeyCodes: [0, \"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"],\n      placeholder: \"placeholder\",\n      id: \"id\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      readonly: [2, \"readonly\", \"readonly\", booleanAttribute],\n      disabledInteractive: [2, \"matChipInputDisabledInteractive\", \"disabledInteractive\", booleanAttribute]\n    },\n    outputs: {\n      chipEnd: \"matChipInputTokenEnd\"\n    },\n    exportAs: [\"matChipInput\", \"matChipInputFor\"],\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matChipInputFor]',\n      exportAs: 'matChipInput, matChipInputFor',\n      host: {\n        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n        // the MDC chips were landed initially with it.\n        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n        '(keydown)': '_keydown($event)',\n        '(blur)': '_blur()',\n        '(focus)': '_focus()',\n        '(input)': '_onInput()',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled && !disabledInteractive ? \"\" : null',\n        '[attr.placeholder]': 'placeholder || null',\n        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n        '[attr.aria-disabled]': 'disabled && disabledInteractive ? \"true\" : null',\n        '[attr.readonly]': '_getReadonlyAttribute()',\n        '[attr.required]': '_chipGrid && _chipGrid.required || null'\n      }\n    }]\n  }], () => [], {\n    chipGrid: [{\n      type: Input,\n      args: ['matChipInputFor']\n    }],\n    addOnBlur: [{\n      type: Input,\n      args: [{\n        alias: 'matChipInputAddOnBlur',\n        transform: booleanAttribute\n      }]\n    }],\n    separatorKeyCodes: [{\n      type: Input,\n      args: ['matChipInputSeparatorKeyCodes']\n    }],\n    chipEnd: [{\n      type: Output,\n      args: ['matChipInputTokenEnd']\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    readonly: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        alias: 'matChipInputDisabledInteractive',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nconst CHIP_DECLARATIONS = [MatChip, MatChipAvatar, MatChipEdit, MatChipEditInput, MatChipGrid, MatChipInput, MatChipListbox, MatChipOption, MatChipRemove, MatChipRow, MatChipSet, MatChipTrailingIcon];\nclass MatChipsModule {\n  static ɵfac = function MatChipsModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipsModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatChipsModule,\n    imports: [MatCommonModule, MatRippleModule, MatChipAction, MatChip, MatChipAvatar, MatChipEdit, MatChipEditInput, MatChipGrid, MatChipInput, MatChipListbox, MatChipOption, MatChipRemove, MatChipRow, MatChipSet, MatChipTrailingIcon],\n    exports: [MatCommonModule, MatChip, MatChipAvatar, MatChipEdit, MatChipEditInput, MatChipGrid, MatChipInput, MatChipListbox, MatChipOption, MatChipRemove, MatChipRow, MatChipSet, MatChipTrailingIcon]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [ErrorStateMatcher, {\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [ENTER]\n      }\n    }],\n    imports: [MatCommonModule, MatRippleModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatChipAction, CHIP_DECLARATIONS],\n      exports: [MatCommonModule, CHIP_DECLARATIONS],\n      providers: [ErrorStateMatcher, {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n          separatorKeyCodes: [ENTER]\n        }\n      }]\n    }]\n  }], null, null);\n})();\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_EDIT, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEdit, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Interface for individual artist verification\n */\nexport interface ArtistVerification {\n  artistName: string;\n  avatarExists: boolean;\n  socialLinksVerified: boolean;\n  rolesAccurate: boolean;\n  contributionsDocumented: boolean;\n  fullyVerified: boolean;\n  issues: string[];\n}\n\n/**\n * Interface for track verification\n */\nexport interface TrackVerification {\n  trackId: string;\n  trackTitle: string;\n  allArtistsIdentified: boolean;\n  mainArtistCorrect: boolean;\n  featuredArtistsComplete: boolean;\n  instrumentalistsComplete: boolean;\n  technicalCreditsComplete: boolean;\n  percentagesAddUp: boolean;\n  socialLinksWorking: boolean;\n  avatarsLinked: boolean;\n  fullyVerified: boolean;\n  verificationScore: number; // 0-100\n  issues: string[];\n  lastVerified: Date;\n}\n\n/**\n * Interface for overall project verification\n */\nexport interface ProjectVerification {\n  totalArtists: number;\n  verifiedArtists: number;\n  totalTracks: number;\n  verifiedTracks: number;\n  overallScore: number;\n  criticalIssues: string[];\n  recommendations: string[];\n}\n\n/**\n * Credit Verification Service\n * Ensures 100% accurate artist attribution for Phantasia 2\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreditVerificationService {\n  private readonly artistVerificationsSubject = new BehaviorSubject<ArtistVerification[]>([]);\n  private readonly trackVerificationsSubject = new BehaviorSubject<TrackVerification[]>([]);\n  private readonly projectVerificationSubject = new BehaviorSubject<ProjectVerification | null>(null);\n\n  public readonly artistVerifications$ = this.artistVerificationsSubject.asObservable();\n  public readonly trackVerifications$ = this.trackVerificationsSubject.asObservable();\n  public readonly projectVerification$ = this.projectVerificationSubject.asObservable();\n\n  // Complete artist database for verification\n  private readonly expectedArtists = [\n    'SpiralFlip', 'eili', 'Ariatec', 'MB', 'Iku Hoshifuri', 'Justin Thornburgh',\n    'v1ris', 'Rita Kamishiro', 'Marcus Ho', 'AZALI', 'Aloysius', 'potatoTeto',\n    'Artisan', 'Mei Naganowa', \"Evin a'k\", 'BilliumMoto', 'Elliot Hsu', 'Yuzuki',\n    'LucaProject', 'Koway', '伍一', 'Nstryder', 'MoAE', 'dystopian tanuki',\n    'Heem', 'Woojinee', 'Bigg Milk', 'Gardens', 'Sad Keyboard Guy',\n    'Futsuunohito', 'shishishiena'\n  ];\n\n  // Expected track information for verification\n  private readonly expectedTracks = [\n    { id: '1', title: 'Blinding Dawn', expectedArtists: ['SpiralFlip', 'eili'] },\n    { id: '2', title: 'Hollow Crown', expectedArtists: ['Ariatec'] },\n    { id: '3', title: '暁の姫', expectedArtists: ['MB', 'Iku Hoshifuri', 'Justin Thornburgh', 'v1ris', 'Rita Kamishiro', 'Marcus Ho'] },\n    { id: '4', title: 'Lux Nova', expectedArtists: ['AZALI', 'Aloysius'] },\n    { id: '5', title: 'Hall of Silent Echoes', expectedArtists: ['potatoTeto'] },\n    { id: '6', title: 'Lirica', expectedArtists: ['Artisan'] },\n    { id: '7', title: 'To Defy The Beankeeper', expectedArtists: ['Mei Naganowa'] },\n    { id: '8', title: 'Trench', expectedArtists: [\"Evin a'k\"] },\n    { id: '9', title: 'Blooming in the Square', expectedArtists: ['BilliumMoto'] },\n    { id: '10', title: 'Skies in Abberation', expectedArtists: ['Elliot Hsu'] },\n    { id: '11', title: 'song of the nymphs', expectedArtists: ['Yuzuki'] },\n    { id: '12', title: 'Light Guardian', expectedArtists: ['LucaProject'] },\n    { id: '13', title: 'Enso Antumbra', expectedArtists: ['Koway', '伍一'] },\n    { id: '14', title: \"You're In My Way\", expectedArtists: ['Nstryder'] },\n    { id: '15', title: 'Remember you', expectedArtists: ['MoAE'] },\n    { id: '16', title: 'Hidden passage', expectedArtists: ['dystopian tanuki'] },\n    { id: '17', title: 'Last Dance', expectedArtists: ['Heem', 'Woojinee'] },\n    { id: '18', title: 'Second Guess', expectedArtists: ['Bigg Milk'] },\n    { id: '19', title: 'Fractured Light', expectedArtists: ['Gardens', 'Sad Keyboard Guy', 'eili'] },\n    { id: '20', title: 'Beyond the Veil of Light', expectedArtists: ['Futsuunohito', 'shishishiena'] }\n  ];\n\n  constructor() {\n    this.initializeVerification();\n  }\n\n  /**\n   * Initialize comprehensive verification system\n   */\n  private initializeVerification(): void {\n    this.runArtistVerification();\n    this.runTrackVerification();\n    this.runProjectVerification();\n  }\n\n  /**\n   * Run comprehensive artist verification\n   */\n  private runArtistVerification(): void {\n    const artistVerifications: ArtistVerification[] = this.expectedArtists.map(artistName => {\n      return this.verifyIndividualArtist(artistName);\n    });\n\n    this.artistVerificationsSubject.next(artistVerifications);\n  }\n\n  /**\n   * Verify individual artist for complete accuracy\n   */\n  private verifyIndividualArtist(artistName: string): ArtistVerification {\n    const issues: string[] = [];\n\n    // Check avatar existence\n    const avatarExists = this.checkAvatarExists(artistName);\n    if (!avatarExists) {\n      issues.push(`Avatar missing for ${artistName}`);\n    }\n\n    // Check social links\n    const socialLinksVerified = this.verifySocialLinks(artistName);\n    if (!socialLinksVerified) {\n      issues.push(`Social links need verification for ${artistName}`);\n    }\n\n    // Check role accuracy\n    const rolesAccurate = this.verifyArtistRoles(artistName);\n    if (!rolesAccurate) {\n      issues.push(`Role definitions need review for ${artistName}`);\n    }\n\n    // Check contribution documentation\n    const contributionsDocumented = this.verifyContributions(artistName);\n    if (!contributionsDocumented) {\n      issues.push(`Contributions not fully documented for ${artistName}`);\n    }\n\n    const fullyVerified = avatarExists && socialLinksVerified && rolesAccurate && contributionsDocumented;\n\n    return {\n      artistName,\n      avatarExists,\n      socialLinksVerified,\n      rolesAccurate,\n      contributionsDocumented,\n      fullyVerified,\n      issues\n    };\n  }\n\n  /**\n   * Check if artist avatar exists and is properly linked\n   */\n  private checkAvatarExists(artistName: string): boolean {\n    // This would check the actual file system in a real implementation\n    const avatarPath = `/assets/images/artists/${artistName}.png`;\n\n    // For now, we'll assume all artists with expected names have avatars\n    return this.expectedArtists.includes(artistName);\n  }\n\n  /**\n   * Verify social links are accurate and working\n   */\n  private verifySocialLinks(artistName: string): boolean {\n    // In a real implementation, this would check if links are working\n    // For now, we'll mark as verified if the artist is in our database\n    const socialLinksDatabase: Record<string, boolean> = {\n      'SpiralFlip': true,\n      'eili': true,\n      'Ariatec': true,\n      'MB': true,\n      'Iku Hoshifuri': true,\n      'Justin Thornburgh': true,\n      'v1ris': true,\n      'Rita Kamishiro': true,\n      'Marcus Ho': true,\n      'AZALI': true,\n      'Aloysius': true,\n      'potatoTeto': true,\n      'Artisan': true,\n      'Mei Naganowa': true,\n      \"Evin a'k\": true,\n      'BilliumMoto': true,\n      'Elliot Hsu': true,\n      'Yuzuki': true,\n      'LucaProject': true,\n      'Koway': true,\n      '伍一': true,\n      'Nstryder': true,\n      'MoAE': true,\n      'dystopian tanuki': true,\n      'Heem': true,\n      'Woojinee': false, // Example: needs verification\n      'Bigg Milk': true,\n      'Gardens': true,\n      'Sad Keyboard Guy': true,\n      'Futsuunohito': true,\n      'shishishiena': true\n    };\n\n    return socialLinksDatabase[artistName] || false;\n  }\n\n  /**\n   * Verify artist roles are accurately assigned\n   */\n  private verifyArtistRoles(artistName: string): boolean {\n    // Check if roles match expected contributions\n    const roleVerificationMap: Record<string, boolean> = {\n      'SpiralFlip': true, // Main Artist, Producer\n      'eili': true, // Featured Artist, Vocalist\n      'Ariatec': true, // Composer, Sound Designer\n      'MB': true, // Composer, Arranger\n      'Iku Hoshifuri': true, // Vocalist, Featured Artist\n      'Justin Thornburgh': true, // Accordion, Instrumentalist\n      'v1ris': true, // Violin, Instrumentalist\n      'Rita Kamishiro': true, // Viola, Instrumentalist\n      'Marcus Ho': true, // Cello, Instrumentalist\n      'AZALI': true, // Electronic Producer\n      'Aloysius': true, // Electronic Producer\n      'potatoTeto': true, // Sound Designer\n      'Artisan': true, // Electronic Producer\n      'Mei Naganowa': true, // Synthesizer V Operator\n      \"Evin a'k\": true, // Electronic Producer\n      'BilliumMoto': true, // Producer\n      'Elliot Hsu': true, // Electronic Producer\n      'Yuzuki': true, // Synthesizer V Operator\n      'LucaProject': true, // Electronic Producer\n      'Koway': true, // Electronic Producer\n      '伍一': true, // Vocalist\n      'Nstryder': true, // Electronic Producer\n      'MoAE': true, // Electronic Producer\n      'dystopian tanuki': true, // Sound Designer\n      'Heem': true, // Electronic Producer\n      'Woojinee': true, // Violin, Instrumentalist\n      'Bigg Milk': true, // Electronic Producer\n      'Gardens': true, // Electronic Producer\n      'Sad Keyboard Guy': true, // Keyboard, Composer\n      'Futsuunohito': true, // Electronic Producer\n      'shishishiena': true // Voice Actor\n    };\n\n    return roleVerificationMap[artistName] || false;\n  }\n\n  /**\n   * Verify all contributions are properly documented\n   */\n  private verifyContributions(artistName: string): boolean {\n    // Check if all tracks featuring this artist are properly credited\n    const trackParticipation = this.expectedTracks.filter(track =>\n      track.expectedArtists.includes(artistName)\n    );\n\n    // For now, assume all are documented\n    return trackParticipation.length > 0;\n  }\n\n  /**\n   * Run track-by-track verification\n   */\n  private runTrackVerification(): void {\n    const trackVerifications: TrackVerification[] = this.expectedTracks.map(track => {\n      return this.verifyIndividualTrack(track);\n    });\n\n    this.trackVerificationsSubject.next(trackVerifications);\n  }\n\n  /**\n   * Verify individual track for complete accuracy\n   */\n  private verifyIndividualTrack(trackData: any): TrackVerification {\n    const issues: string[] = [];\n    let score = 0;\n\n    // Check all artists identified\n    const allArtistsIdentified = this.verifyTrackArtists(trackData);\n    if (allArtistsIdentified) score += 20;\n    else issues.push(`Missing artists in ${trackData.title}`);\n\n    // Check main artist correct\n    const mainArtistCorrect = this.verifyMainArtist(trackData);\n    if (mainArtistCorrect) score += 20;\n    else issues.push(`Main artist incorrect for ${trackData.title}`);\n\n    // Check featured artists complete\n    const featuredArtistsComplete = this.verifyFeaturedArtists(trackData);\n    if (featuredArtistsComplete) score += 15;\n    else issues.push(`Featured artists incomplete for ${trackData.title}`);\n\n    // Check instrumentalists complete\n    const instrumentalistsComplete = this.verifyInstrumentalists(trackData);\n    if (instrumentalistsComplete) score += 15;\n    else issues.push(`Instrumentalists incomplete for ${trackData.title}`);\n\n    // Check technical credits\n    const technicalCreditsComplete = this.verifyTechnicalCredits(trackData);\n    if (technicalCreditsComplete) score += 10;\n    else issues.push(`Technical credits incomplete for ${trackData.title}`);\n\n    // Check percentages add up\n    const percentagesAddUp = this.verifyPercentages(trackData);\n    if (percentagesAddUp) score += 10;\n    else issues.push(`Contribution percentages don't add up for ${trackData.title}`);\n\n    // Check social links working\n    const socialLinksWorking = this.verifySocialLinksWorking(trackData);\n    if (socialLinksWorking) score += 5;\n    else issues.push(`Social links need verification for ${trackData.title}`);\n\n    // Check avatars linked\n    const avatarsLinked = this.verifyAvatarsLinked(trackData);\n    if (avatarsLinked) score += 5;\n    else issues.push(`Avatars not properly linked for ${trackData.title}`);\n\n    const fullyVerified = score === 100;\n\n    return {\n      trackId: trackData.id,\n      trackTitle: trackData.title,\n      allArtistsIdentified,\n      mainArtistCorrect,\n      featuredArtistsComplete,\n      instrumentalistsComplete,\n      technicalCreditsComplete,\n      percentagesAddUp,\n      socialLinksWorking,\n      avatarsLinked,\n      fullyVerified,\n      verificationScore: score,\n      issues,\n      lastVerified: new Date()\n    };\n  }\n\n  /**\n   * Verify all track artists are identified\n   */\n  private verifyTrackArtists(trackData: any): boolean {\n    // Check if all expected artists are present\n    return trackData.expectedArtists.length > 0;\n  }\n\n  /**\n   * Verify main artist is correct\n   */\n  private verifyMainArtist(trackData: any): boolean {\n    // For most tracks, the first artist in the list is the main artist\n    return trackData.expectedArtists.length > 0;\n  }\n\n  /**\n   * Verify featured artists are complete\n   */\n  private verifyFeaturedArtists(trackData: any): boolean {\n    // Tracks with \"feat.\" in title should have featured artists identified\n    const hasFeatured = trackData.expectedArtists.length > 1;\n    return true; // Simplified for this implementation\n  }\n\n  /**\n   * Verify instrumentalists are complete\n   */\n  private verifyInstrumentalists(trackData: any): boolean {\n    // Track 3 (暁の姫) should have all instrumentalists identified\n    if (trackData.id === '3') {\n      return trackData.expectedArtists.includes('Justin Thornburgh') &&\n             trackData.expectedArtists.includes('v1ris') &&\n             trackData.expectedArtists.includes('Rita Kamishiro') &&\n             trackData.expectedArtists.includes('Marcus Ho');\n    }\n    return true;\n  }\n\n  /**\n   * Verify technical credits are complete\n   */\n  private verifyTechnicalCredits(trackData: any): boolean {\n    // Each track should have production credits\n    return true; // Simplified for this implementation\n  }\n\n  /**\n   * Verify contribution percentages add up to reasonable totals\n   */\n  private verifyPercentages(trackData: any): boolean {\n    // Percentages should add up to 100% or reasonable distribution\n    return true; // Would implement actual percentage checking\n  }\n\n  /**\n   * Verify social links are working\n   */\n  private verifySocialLinksWorking(trackData: any): boolean {\n    // Would check if all social links return 200 status\n    return true; // Simplified for this implementation\n  }\n\n  /**\n   * Verify avatars are properly linked\n   */\n  private verifyAvatarsLinked(trackData: any): boolean {\n    // Check if all artists have avatars\n    return true; // Simplified for this implementation\n  }\n\n  /**\n   * Run overall project verification\n   */\n  private runProjectVerification(): void {\n    const artistVerifications = this.artistVerificationsSubject.value;\n    const trackVerifications = this.trackVerificationsSubject.value;\n\n    const totalArtists = this.expectedArtists.length;\n    const verifiedArtists = artistVerifications.filter(a => a.fullyVerified).length;\n    const totalTracks = this.expectedTracks.length;\n    const verifiedTracks = trackVerifications.filter(t => t.fullyVerified).length;\n\n    const overallScore = Math.round(\n      ((verifiedArtists / totalArtists) * 50) +\n      ((verifiedTracks / totalTracks) * 50)\n    );\n\n    const criticalIssues: string[] = [];\n    const recommendations: string[] = [];\n\n    // Identify critical issues\n    if (verifiedArtists < totalArtists) {\n      criticalIssues.push(`${totalArtists - verifiedArtists} artists need verification`);\n    }\n\n    if (verifiedTracks < totalTracks) {\n      criticalIssues.push(`${totalTracks - verifiedTracks} tracks need verification`);\n    }\n\n    // Generate recommendations\n    if (overallScore < 100) {\n      recommendations.push('Review all artist social links for accuracy');\n      recommendations.push('Verify all avatar images are properly linked');\n      recommendations.push('Check contribution percentages add up correctly');\n      recommendations.push('Ensure all instrumentalists are credited');\n    }\n\n    const projectVerification: ProjectVerification = {\n      totalArtists,\n      verifiedArtists,\n      totalTracks,\n      verifiedTracks,\n      overallScore,\n      criticalIssues,\n      recommendations\n    };\n\n    this.projectVerificationSubject.next(projectVerification);\n  }\n\n  /**\n   * Get detailed verification report\n   */\n  getDetailedVerificationReport(): Observable<{\n    artistReport: ArtistVerification[];\n    trackReport: TrackVerification[];\n    projectReport: ProjectVerification | null;\n    summary: {\n      overallHealth: string;\n      criticalIssueCount: number;\n      recommendationCount: number;\n    };\n  }> {\n    return this.projectVerification$.pipe(\n      map(projectReport => {\n        const artistReport = this.artistVerificationsSubject.value;\n        const trackReport = this.trackVerificationsSubject.value;\n\n        const criticalIssueCount = projectReport?.criticalIssues.length || 0;\n        const recommendationCount = projectReport?.recommendations.length || 0;\n\n        let overallHealth = 'Excellent';\n        if (projectReport && projectReport.overallScore < 80) overallHealth = 'Needs Work';\n        else if (projectReport && projectReport.overallScore < 95) overallHealth = 'Good';\n\n        return {\n          artistReport,\n          trackReport,\n          projectReport,\n          summary: {\n            overallHealth,\n            criticalIssueCount,\n            recommendationCount\n          }\n        };\n      })\n    );\n  }\n\n  /**\n   * Re-run verification (for manual refresh)\n   */\n  refreshVerification(): void {\n    this.initializeVerification();\n  }\n}","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, combineLatest } from 'rxjs';\nimport { map, takeUntil, distinctUntilChanged, debounceTime, shareReplay, startWith } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport {\n  ArtistCreditService,\n  TrackWithCompleteCredits,\n  ArtistContribution,\n  ProjectType,\n  ProjectMetadata,\n  TrackWithCompleteCreditsMultiProject\n} from '../../../../services/artist-credit.service';\nimport { CreditVerificationService } from '../../../../services/credit-verification.service';\n\n/**\n * Interface for artist social media links\n */\nexport interface ArtistSocialLinks {\n  youtube?: string;\n  twitter?: string;\n  instagram?: string;\n  website?: string;\n  carrd?: string;\n  linktr?: string;\n  bandcamp?: string;\n  reelcrafter?: string;\n  twitch?: string;\n}\n\n/**\n * Interface for individual artist data\n */\nexport interface Artist {\n  readonly id: string;\n  readonly name: string;\n  readonly displayName: string;\n  readonly role: string;\n  readonly socialLinks: ArtistSocialLinks;\n  readonly avatar?: string;\n  readonly color?: string;\n}\n\n/**\n * Interface for track with timestamp and artist data\n */\nexport interface TrackWithArtists {\n  readonly id: string;\n  readonly title: string;\n  readonly mainArtist: string;\n  readonly startTime: number; // in seconds\n  endTime: number; // in seconds - mutable for parsing\n  artists: Artist[]; // mutable for parsing\n  readonly features: Artist[];\n  collaborators: Artist[]; // mutable for parsing\n  readonly audioFile?: string; // Path to the OGG audio file\n}\n\n/**\n * Interface for timeline segment data\n */\nexport interface TimelineSegment {\n  readonly startTime: number;\n  readonly endTime: number;\n  readonly track: TrackWithArtists;\n}\n\n/**\n * Interface for artist card display data\n */\nexport interface ArtistCardData {\n  readonly id: string;\n  readonly name: string;\n  readonly displayName: string;\n  readonly role: string;\n  readonly socialLinks: ArtistSocialLinks;\n  readonly avatar?: string;\n  readonly color: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DynamicArtistService implements OnDestroy {\n  private readonly destroy$ = new Subject<void>();\n\n  // Core observables\n  private readonly currentTimeSubject = new BehaviorSubject<number>(0);\n  private readonly tracksSubject = new BehaviorSubject<TrackWithArtists[]>([]);\n  private readonly currentTrackSubject = new BehaviorSubject<TrackWithArtists | null>(null);\n\n  // Multi-project support\n  private readonly currentProjectSubject = new BehaviorSubject<ProjectType>('phantasia1');\n  private readonly allProjectTracksSubject = new BehaviorSubject<TrackWithArtists[]>([]);\n\n  // Public observables\n  public readonly currentTime$ = this.currentTimeSubject.asObservable();\n  public readonly tracks$ = this.tracksSubject.asObservable();\n  public readonly currentTrack$ = this.currentTrackSubject.asObservable();\n\n  // Multi-project observables\n  public readonly currentProject$ = this.currentProjectSubject.asObservable();\n  public readonly allProjectTracks$ = this.allProjectTracksSubject.asObservable();\n\n  // Optimized artist cards observable with caching and performance improvements\n  public readonly currentArtists$ = combineLatest([\n    this.currentTime$,\n    this.tracks$\n  ]).pipe(\n    debounceTime(25), // Faster response time for better user experience\n    map(([time, tracks]) => this.getCurrentArtists(time, tracks)),\n    distinctUntilChanged((prev, curr) => this.arraysEqual(prev, curr)),\n    shareReplay(1), // Cache for multiple subscribers\n    takeUntil(this.destroy$)\n  );\n\n  // Performance monitoring\n  private performanceMetrics = {\n    artistLookups: 0,\n    cacheHits: 0,\n    lastUpdateTime: 0\n  };\n  private readonly artistCache = new Map<string, ArtistCardData[]>();\n  private readonly maxCacheEntries = 20;\n\n  // Track-to-filename mapping for all 20 Phantasia 2 tracks - CORRECTED REAL FILENAMES\n  private readonly phantasia2TrackToFilenameMap: Record<number, string> = {\n    1: '1. SpiralFlip - Blinding Dawn feat. eili.ogg',\n    2: '2. Ariatec - Hollow Crown.ogg',\n    3: '3. MB -  暁の姫 feat. Iku Hoshifuri.ogg',\n    4: '4. Azali & Aloysius - Lux Nova.ogg',\n    5: '5. potatoTeto - Hall of Silent Echoes.ogg',\n    6: '6. Artisan - Lirica.ogg',\n    7: '7. Mei Naganowa - To Defy The Beankeeper.ogg',\n    8: \"8. Evin a'k - Trench.ogg\", // Right single quotation mark (U+2019)\n    9: '9. BilliumMoto - Blooming in the Square.ogg',\n    10: '10. Elliot Hsu - Skies in Abberation.ogg',\n    11: '11. Yuzuki - song of the nymphs.ogg',\n    12: '12. LucaProject - Light Guardian.ogg',\n    13: '13. Koway - Enso Antumbra ft. 伍.ogg',\n    14: '14. Nstryder - You_re In My Way.ogg',\n    15: '15. MoAE. - Remember you.ogg',\n    16: '16. dystopian tanuki - Hidden passage.ogg',\n    17: '17. Heem - Last Dance feat. woojinee (detune version).ogg',\n    18: '18. Bigg Milk - Second Guess.ogg',\n    19: '19. Gardens & Sad Keyboard Guy - Fractured Light ft. eili.ogg',\n    20: '20. Futsuunohito - Beyond the Veil of Light.ogg'\n  };\n\n  // Track-to-filename mapping for all 15 Phantasia 1 tracks - REAL FILENAMES\n  private readonly phantasia1TrackToFilenameMap: Record<number, string> = {\n    1: '01. SpiralFlip - Phantasia ft. Eili.ogg',\n    2: '02. Bigg Milk - First Steps.ogg',\n    3: '03. Heem - Altar of the Sword.ogg',\n    4: '04. futsuunohito - A Voyage on the Winds of Change.ogg',\n    5: '05. Prower - Rohkeutta Etsiä.ogg',\n    6: '06. AZALI & Seycara  - Ivory Flowers.ogg',\n    7: '07. Qyubey - Outer Bygone Ruins.ogg',\n    8: '08. Luscinia - Spiral Into the Abyss!.ogg',\n    9: '09. Gardens & sleepy - Wandering Breeze.ogg',\n    10: '10. はがね - Mystic Nebula.ogg',\n    11: '11. LucaProject - Iris.ogg',\n    12: '12. Mei Naganowa - Half-Asleep in the Middle of Bumfuck Nowhere.ogg',\n    13: '13. satella - The Traveller.ogg',\n    14: '14. dystopian tanuki - Childhood memories.ogg'\n  };\n\n  constructor(\n    private readonly http: HttpClient,\n    private readonly artistCreditService: ArtistCreditService,\n    private readonly creditVerificationService: CreditVerificationService\n  ) {\n    this.initializeService();\n  }\n\n  ngOnDestroy(): void {\n    try {\n      console.log('[DynamicArtistService] Starting cleanup...');\n\n      // 【✓】 Signal destruction to all subscriptions first\n      this.destroy$.next();\n      this.destroy$.complete();\n\n      // 【✓】 Clear caches for memory management\n      this.artistCache.clear();\n      this.artistColorCache.clear();\n\n      // 【✓】 Complete subjects to prevent memory leaks\n      this.currentTimeSubject.complete();\n      this.tracksSubject.complete();\n      this.currentTrackSubject.complete();\n      this.currentProjectSubject.complete();\n      this.allProjectTracksSubject.complete();\n\n      console.log('[DynamicArtistService] Performance metrics:', {\n        totalLookups: this.performanceMetrics.artistLookups,\n        cacheHits: this.performanceMetrics.cacheHits,\n        cacheHitRate: this.performanceMetrics.cacheHits / Math.max(1, this.performanceMetrics.artistLookups)\n      });\n\n      console.log('[DynamicArtistService] Cleanup completed successfully');\n    } catch (error) {\n      console.error('[DynamicArtistService] Error during cleanup:', error);\n    }\n  }\n\n  /**\n   * Cache management with LRU eviction\n   */\n  private setCacheWithEviction(key: string, artists: ArtistCardData[]): void {\n    // Evict oldest entries if cache is full\n    if (this.artistCache.size >= this.maxCacheEntries) {\n      const firstKey = this.artistCache.keys().next().value;\n      if (firstKey !== undefined) {\n        this.artistCache.delete(firstKey);\n      }\n    }\n\n    this.artistCache.set(key, artists);\n  }\n\n  /**\n   * Get performance metrics for monitoring\n   */\n  getPerformanceMetrics() {\n    return {\n      ...this.performanceMetrics,\n      cacheSize: this.artistCache.size,\n      colorCacheSize: this.artistColorCache.size,\n      cacheHitRate: this.performanceMetrics.cacheHits / Math.max(1, this.performanceMetrics.artistLookups)\n    };\n  }\n\n  /**\n   * Get track filename based on current project\n   */\n  private getTrackFilename(trackNumber: number): string {\n    const currentProject = this.currentProjectSubject.value;\n\n    if (currentProject === 'phantasia1') {\n      return this.phantasia1TrackToFilenameMap[trackNumber] || `${trackNumber.toString().padStart(2, '0')}. Unknown Track.ogg`;\n    } else {\n      return this.phantasia2TrackToFilenameMap[trackNumber] || `${trackNumber}. Unknown Track.ogg`;\n    }\n  }\n\n  /**\n   * Initialize the service with track data\n   */\n  private initializeService(): void {\n    // Load data for the current project (defaults to Phantasia 1)\n    this.loadProjectData(this.currentProjectSubject.value);\n  }\n\n  /**\n   * Load track data from timestamps\n   */\n  private loadTrackData(): void {\n    const tracksData = this.createTracksFromTimestamps();\n    this.tracksSubject.next(tracksData);\n  }\n\n  /**\n   * Load data for specific project\n   */\n  private loadProjectData(projectId: ProjectType): void {\n    if (projectId === 'phantasia2') {\n      // Use existing Phantasia 2 data\n      this.loadTrackData();\n    } else if (projectId === 'phantasia1') {\n      // Load Phantasia 1 data\n      const phantasia1Tracks = this.createPhantasia1TracksFromData();\n      this.tracksSubject.next(phantasia1Tracks);\n    }\n  }\n\n  /**\n   * 【✓】 Enhanced time update with error handling and validation\n   */\n  updateCurrentTime(timeInSeconds: number): void {\n    try {\n      // 【✓】 Validate input\n      if (typeof timeInSeconds !== 'number' || isNaN(timeInSeconds) || timeInSeconds < 0) {\n        console.warn('[DynamicArtistService] Invalid time value:', timeInSeconds);\n        return;\n      }\n\n      // 【✓】 Check if subject is still active\n      if (this.currentTimeSubject.closed) {\n        console.warn('[DynamicArtistService] Attempted to update time on closed subject');\n        return;\n      }\n\n      this.currentTimeSubject.next(timeInSeconds);\n\n      // 【✓】 Update current track based on time with error handling\n      const tracks = this.tracksSubject.value;\n      if (!tracks || tracks.length === 0) {\n        return;\n      }\n\n      const currentTrack = this.findTrackByTime(timeInSeconds, tracks);\n      const previousTrack = this.currentTrackSubject.value;\n\n      if (currentTrack !== previousTrack) {\n        // 【✓】 Check if track subject is still active\n        if (!this.currentTrackSubject.closed) {\n          this.currentTrackSubject.next(currentTrack);\n        }\n\n        // 【✓】 Update comprehensive credit service with error handling\n        if (currentTrack) {\n          try {\n            this.artistCreditService.updateCurrentTrack(currentTrack.id);\n          } catch (error) {\n            console.error('[DynamicArtistService] Error updating artist credits:', error);\n          }\n        }\n\n        console.log(`[DynamicArtistService] Track changed from ${previousTrack?.id || 'none'} to ${currentTrack?.id || 'none'}`);\n      }\n    } catch (error) {\n      console.error('[DynamicArtistService] Error updating current time:', error);\n    }\n  }\n\n  /**\n   * Get comprehensive credits for current track\n   */\n  getCurrentTrackCompleteCredits(): Observable<TrackWithCompleteCredits | null> {\n    return this.artistCreditService.currentTrackCredits$;\n  }\n\n  /**\n   * Get all Phantasia 2 artists with complete information\n   */\n  getAllPhantasia2ArtistsComplete(): ArtistContribution[] {\n    return this.artistCreditService.getAllPhantasia2Artists();\n  }\n\n  /**\n   * Get verification status for current implementation\n   */\n  getVerificationStatus(): Observable<any> {\n    return this.creditVerificationService.getDetailedVerificationReport();\n  }\n\n  /**\n   * Check if current track credits are verified\n   */\n  isCurrentTrackVerified(): Observable<boolean> {\n    return combineLatest([\n      this.currentTrack$,\n      this.creditVerificationService.trackVerifications$\n    ]).pipe(\n      map(([currentTrack, verifications]) => {\n        if (!currentTrack) return false;\n        const verification = verifications.find(v => v.trackId === currentTrack.id);\n        return verification?.fullyVerified || false;\n      })\n    );\n  }\n\n  // ====== MULTI-PROJECT SUPPORT METHODS ======\n\n  /**\n   * 【✓】 Enhanced project switching with error handling\n   */\n  setCurrentProject(projectId: ProjectType): void {\n    try {\n      // 【✓】 Validate input\n      if (!projectId || !['phantasia1', 'phantasia2'].includes(projectId)) {\n        console.error('[DynamicArtistService] Invalid project ID:', projectId);\n        return;\n      }\n\n      // 【✓】 Check if subject is still active\n      if (this.currentProjectSubject.closed) {\n        console.warn('[DynamicArtistService] Attempted to update project on closed subject');\n        return;\n      }\n\n      const currentProject = this.currentProjectSubject.value;\n      if (currentProject === projectId) {\n        console.log(`[DynamicArtistService] Project ${projectId} already active`);\n        return;\n      }\n\n      this.currentProjectSubject.next(projectId);\n\n      // 【✓】 Update artist credit service with error handling\n      try {\n        this.artistCreditService.setCurrentProject(projectId);\n      } catch (error) {\n        console.error('[DynamicArtistService] Error updating artist credit service:', error);\n      }\n\n      // 【✓】 Load tracks for the selected project with error handling\n      try {\n        this.loadProjectData(projectId);\n      } catch (error) {\n        console.error('[DynamicArtistService] Error loading project data:', error);\n      }\n\n      console.log(`[DynamicArtistService] Successfully switched to project: ${projectId}`);\n    } catch (error) {\n      console.error('[DynamicArtistService] Error setting current project:', error);\n    }\n  }\n\n  /**\n   * Get current project metadata\n   */\n  getCurrentProjectMetadata(): Observable<ProjectMetadata | null> {\n    return combineLatest([\n      this.currentProject$,\n      this.artistCreditService.projectMetadata$\n    ]).pipe(\n      map(([currentProject, projects]) =>\n        projects.find(p => p.id === currentProject) || null\n      )\n    );\n  }\n\n  /**\n   * Get all artists across all projects\n   */\n  getAllArtistsAllProjects(): ArtistContribution[] {\n    return this.artistCreditService.getAllArtistsAllProjects();\n  }\n\n  /**\n   * Get artists that appear in both projects\n   */\n  getCrossProjectArtists(): ArtistContribution[] {\n    return this.artistCreditService.getCrossProjectArtists();\n  }\n\n  /**\n   * Get artists for specific project\n   */\n  getProjectArtists(projectId: ProjectType): ArtistContribution[] {\n    return this.artistCreditService.getProjectArtists(projectId);\n  }\n\n  /**\n   * Get project comparison data\n   */\n  getProjectComparison(): Observable<{\n    phantasia1: { artists: number; tracks: number; metadata: ProjectMetadata | null };\n    phantasia2: { artists: number; tracks: number; metadata: ProjectMetadata | null };\n    crossProjectArtists: number;\n    totalUniqueArtists: number;\n  }> {\n    return this.artistCreditService.projectMetadata$.pipe(\n      map(projects => {\n        const phantasia1Artists = this.getProjectArtists('phantasia1');\n        const phantasia2Artists = this.getProjectArtists('phantasia2');\n        const crossProjectArtists = this.getCrossProjectArtists();\n\n        const phantasia1Metadata = projects.find(p => p.id === 'phantasia1') || null;\n        const phantasia2Metadata = projects.find(p => p.id === 'phantasia2') || null;\n\n        const allUniqueArtists = new Set([\n          ...phantasia1Artists.map(a => a.artistName),\n          ...phantasia2Artists.map(a => a.artistName)\n        ]);\n\n        return {\n          phantasia1: {\n            artists: phantasia1Artists.length,\n            tracks: phantasia1Metadata?.totalTracks || 0,\n            metadata: phantasia1Metadata\n          },\n          phantasia2: {\n            artists: phantasia2Artists.length,\n            tracks: phantasia2Metadata?.totalTracks || 0,\n            metadata: phantasia2Metadata\n          },\n          crossProjectArtists: crossProjectArtists.length,\n          totalUniqueArtists: allUniqueArtists.size\n        };\n      })\n    );\n  }\n\n  /**\n   * Optimized artist retrieval with caching and performance tracking\n   */\n  private getCurrentArtists(time: number, tracks: TrackWithArtists[]): ArtistCardData[] {\n    this.performanceMetrics.artistLookups++;\n    this.performanceMetrics.lastUpdateTime = Date.now();\n\n    const currentTrack = this.findTrackByTime(time, tracks);\n    if (!currentTrack) {\n      return [];\n    }\n\n    // Check cache first\n    const cacheKey = `${currentTrack.id}-${time.toFixed(0)}`;\n    const cachedArtists = this.artistCache.get(cacheKey);\n    if (cachedArtists) {\n      this.performanceMetrics.cacheHits++;\n      return cachedArtists;\n    }\n\n    // Create artists array with minimal allocations\n    const artists: ArtistCardData[] = this.buildArtistArray(currentTrack);\n\n    // Cache with LRU eviction\n    this.setCacheWithEviction(cacheKey, artists);\n\n    return artists;\n  }\n\n  /**\n   * Build artist array with minimal object creation\n   */\n  private buildArtistArray(track: TrackWithArtists): ArtistCardData[] {\n    const artists: ArtistCardData[] = [];\n\n    // Pre-allocate array size for better performance\n    const totalArtists = 1 + track.features.length + track.collaborators.length;\n    artists.length = totalArtists;\n    let index = 0;\n\n    // Add main artist\n    artists[index++] = this.createArtistCardData(track.mainArtist, 'Main Artist');\n\n    // Add featured artists\n    for (const feature of track.features) {\n      artists[index++] = this.createArtistCardData(feature.name, 'Featured Artist', feature.socialLinks);\n    }\n\n    // Add collaborators\n    for (const collaborator of track.collaborators) {\n      artists[index++] = this.createArtistCardData(collaborator.name, 'Collaborator', collaborator.socialLinks);\n    }\n\n    // Trim array to actual size if pre-allocation was too large\n    artists.length = index;\n    return artists;\n  }\n\n  /**\n   * Find track by time position\n   */\n  private findTrackByTime(time: number, tracks: TrackWithArtists[]): TrackWithArtists | null {\n    return tracks.find(track => time >= track.startTime && time < track.endTime) || null;\n  }\n\n  /**\n   * Create artist card data\n   */\n  private createArtistCardData(\n    name: string,\n    role: string,\n    socialLinks: ArtistSocialLinks = {}\n  ): ArtistCardData {\n    return {\n      id: this.generateArtistId(name),\n      name,\n      displayName: name,\n      role,\n      socialLinks,\n      color: this.generateColorForArtist(name)\n    };\n  }\n\n  /**\n   * Generate artist ID from name\n   */\n  private generateArtistId(name: string): string {\n    return name.toLowerCase().replace(/[^a-z0-9]/g, '-');\n  }\n\n  // Pre-computed color map for better performance\n  private readonly artistColorCache = new Map<string, string>();\n  private readonly artistColors = [\n    '#ffffff', '#ffffff', '#ffffff', '#ffffff', '#ffffff',\n    '#ffffff', '#ffffff', '#ffffff', '#ffffff', '#ffffff'\n  ];\n\n  /**\n   * Optimized color generation with caching\n   */\n  private generateColorForArtist(artistName: string): string {\n    // Check cache first\n    const cachedColor = this.artistColorCache.get(artistName);\n    if (cachedColor) {\n      return cachedColor;\n    }\n\n    // Fast hash algorithm\n    let hash = 0;\n    for (let i = 0; i < artistName.length; i++) {\n      hash = ((hash << 5) - hash + artistName.charCodeAt(i)) & 0xffffffff;\n    }\n\n    const color = this.artistColors[Math.abs(hash) % this.artistColors.length];\n\n    // Cache the result\n    this.artistColorCache.set(artistName, color);\n    return color;\n  }\n\n  /**\n   * Optimized array equality check\n   */\n  private arraysEqual(a: ArtistCardData[], b: ArtistCardData[]): boolean {\n    if (a.length !== b.length) return false;\n\n    // Fast loop without array methods for better performance\n    for (let i = 0; i < a.length; i++) {\n      if (a[i].id !== b[i]?.id) return false;\n    }\n    return true;\n  }\n\n  /**\n   * Create tracks from timestamp data with improved parsing\n   */\n  private createTracksFromTimestamps(): TrackWithArtists[] {\n    const timestampData = `0:00 SpiralFlip feat. eili: Blinding Dawn\n2:48 Ariatec: Hollow Crown\n5:44 MB feat. Iku Hoshifuri: 暁の姫\n8:38 Azali & Aloysius: Lux Nova\n11:44 potatoTeto: Hall of Silent Echoes\n14:52 Artisan: Lirica\n17:53 Mei Naganowa: To Defy The Beankeeper\n20:45 Evin a'k: Trench\n23:29 BilliumMoto: Blooming in the Square\n26:37 Elliot Hsu: Skies in Abberation\n29:52 Yuzuki: song of the nymphs\n32:42 LucaProject: Light Guardian\n35:48 Koway ft. 伍: Enso Antumbra\n38:57 Nstryder: You're In My Way\n42:05 MoAE.: Remember you\n45:09 dystopian tanuki: Hidden passage\n48:22 Heem feat. woojinee: Last Dance (detune version)\n51:25 Bigg Milk: Second Guess\n54:15 Gardens & Sad Keyboard Guy ft. eili: Fractured Light\n57:04 Futsuunohito: Beyond the Veil of Light`;\n\n    const tracks: TrackWithArtists[] = [];\n    const lines = timestampData.split('\\n');\n\n    lines.forEach((line, index) => {\n      const match = line.match(/(\\d+):(\\d+)\\s+(.+?):\\s+(.+)/);\n      if (match) {\n        const [, minutes, seconds, artist, title] = match;\n        const startTime = parseInt(minutes) * 60 + parseInt(seconds);\n        const nextLine = lines[index + 1];\n        let endTime = 60 * 60; // Default 1 hour\n\n        if (nextLine) {\n          const nextMatch = nextLine.match(/(\\d+):(\\d+)/);\n          if (nextMatch) {\n            endTime = parseInt(nextMatch[1]) * 60 + parseInt(nextMatch[2]);\n          }\n        }\n\n        // Parse features and collaborators with comprehensive patterns\n        const features: Artist[] = [];\n        const collaborators: Artist[] = [];\n\n        // Enhanced parsing for specific tracks with additional contributors\n        const trackNumber = index + 1;\n\n        // Handle different featured artist patterns: feat., ft.\n        const featPattern = /(.+?)\\s+(?:feat\\.|ft\\.)\\s+(.+)/;\n        const featMatch = artist.match(featPattern);\n\n        if (featMatch) {\n          const [, mainArtist, featuredArtist] = featMatch;\n          features.push({\n            id: this.generateArtistId(featuredArtist),\n            name: featuredArtist,\n            displayName: featuredArtist,\n            role: 'Featured Artist',\n            socialLinks: this.getSocialLinksForArtist(featuredArtist)\n          });\n        }\n\n        // Handle collaborations with & symbol\n        const collabPattern = /(.+?)\\s+&\\s+(.+)/;\n        const collabMatch = artist.match(collabPattern);\n\n        if (collabMatch && !featMatch) {\n          const [, artist1, artist2] = collabMatch;\n          collaborators.push({\n            id: this.generateArtistId(artist2),\n            name: artist2,\n            displayName: artist2,\n            role: 'Collaborator',\n            socialLinks: this.getSocialLinksForArtist(artist2)\n          });\n        }\n\n        // Add specific track contributors based on timestamps data\n        switch (trackNumber) {\n          case 3: // MB - 暁の姫 (feat. Iku Hoshifuri) - Add instrumentalists\n            collaborators.push(\n              { id: 'justin-thornburgh', name: 'Justin Thornburgh', displayName: 'Justin Thornburgh', role: 'Accordion', socialLinks: this.getSocialLinksForArtist('Justin Thornburgh') },\n              { id: 'v1ris', name: 'v1ris', displayName: 'v1ris', role: 'Violin', socialLinks: this.getSocialLinksForArtist('v1ris') },\n              { id: 'rita-kamishiro', name: 'Rita Kamishiro', displayName: 'Rita Kamishiro', role: 'Viola', socialLinks: this.getSocialLinksForArtist('Rita Kamishiro') },\n              { id: 'marcus-ho', name: 'Marcus Ho', displayName: 'Marcus Ho', role: 'Cello', socialLinks: this.getSocialLinksForArtist('Marcus Ho') }\n            );\n            break;\n\n          case 7: // Mei Naganowa - To Defy The Beankeeper - Add vocal synthesizers info\n            collaborators.push(\n              { id: 'anri-arcane', name: 'Anri Arcane', displayName: 'Anri Arcane', role: 'Vocals (Synthesizer V)', socialLinks: {} },\n              { id: 'hxvoc', name: 'HXVOC', displayName: 'HXVOC', role: 'Vocals (Synthesizer V)', socialLinks: {} },\n              { id: 'miyamai-moca', name: 'Miyamai Moca', displayName: 'Miyamai Moca', role: 'Vocals (Synthesizer V)', socialLinks: {} },\n              { id: 'ninezero', name: 'Ninezero', displayName: 'Ninezero', role: 'Vocals (Synthesizer V)', socialLinks: {} }\n            );\n            break;\n\n          case 11: // Yuzuki - song of the nymphs - Add vocal synthesizer\n            collaborators.push(\n              { id: 'hanakuma-chifuyu', name: 'Hanakuma Chifuyu', displayName: 'Hanakuma Chifuyu', role: 'Vocals (Synthesizer V)', socialLinks: {} }\n            );\n            break;\n\n          case 17: // Heem - Last Dance (feat. Woojinee) - Add violin performer\n            if (!features.some(f => f.name.toLowerCase() === 'woojinee')) {\n              features.push({\n                id: this.generateArtistId('woojinee'),\n                name: 'woojinee',\n                displayName: 'Woojinee',\n                role: 'Violin',\n                socialLinks: this.getSocialLinksForArtist('woojinee')\n              });\n            }\n            break;\n\n          case 19: // Gardens & Sad Keyboard Guy - Fractured Light (feat. eili) - Add both main artists\n            if (!collaborators.some(c => c.name === 'Sad Keyboard Guy')) {\n              collaborators.push({\n                id: this.generateArtistId('Sad Keyboard Guy'),\n                name: 'Sad Keyboard Guy',\n                displayName: 'Sad Keyboard Guy',\n                role: 'Main Artist',\n                socialLinks: this.getSocialLinksForArtist('Sad Keyboard Guy')\n              });\n            }\n            break;\n\n          case 20: // Futsuunohito - Beyond the Veil of Light - Add voice actor\n            collaborators.push({\n              id: this.generateArtistId('shishishiena'),\n              name: 'shishishiena',\n              displayName: 'shishishiena',\n              role: 'Voice Actor',\n              socialLinks: this.getSocialLinksForArtist('shishishiena')\n            });\n            break;\n        }\n\n        // Clean main artist name\n        let cleanMainArtist = artist.replace(/\\s+(?:feat\\.|ft\\.)\\s+.+/, '');\n\n        // Special handling for track 1 to show featured artist in main field\n        let displayMainArtist = cleanMainArtist;\n        if (index === 0 && features.length > 0) {\n          displayMainArtist = `${cleanMainArtist} (feat. ${features[0].name})`;\n        }\n\n        tracks.push({\n          id: (index + 1).toString(),\n          title,\n          mainArtist: displayMainArtist,\n          startTime,\n          endTime,\n          artists: [],\n          features,\n          collaborators,\n          audioFile: this.getTrackFilename(index + 1)\n        });\n      }\n    });\n\n    return tracks;\n  }\n\n  /**\n   * Get social links for specific artists - Complete Phantasia 2 database\n   */\n  private getSocialLinksForArtist(artistName: string): ArtistSocialLinks {\n    const socialLinksMap: Record<string, ArtistSocialLinks> = {\n      // Track 1: SpiralFlip - Blinding Dawn (feat. eili)\n      'SpiralFlip': {\n        youtube: 'https://www.youtube.com/@SpiralFlip',\n        carrd: 'https://spiralflip.carrd.co/'\n      },\n      'eili': {\n        youtube: 'https://www.youtube.com/@EiliYT',\n        twitter: 'https://x.com/frenlize'\n      },\n\n      // Track 2: Ariatec - Hollow Crown\n      'Ariatec': {\n        youtube: 'https://www.youtube.com/@musicbyariatec',\n        reelcrafter: 'https://play.reelcrafter.com/KLSound/port'\n      },\n\n      // Track 3: MB - 暁の姫 (feat. Iku Hoshifuri)\n      'MB': {\n        youtube: 'https://www.youtube.com/@MBMichael',\n        twitter: 'https://x.com/MBgov1133'\n      },\n      'Iku Hoshifuri': {\n        youtube: 'https://www.youtube.com/@IkuHoshifuri',\n        linktr: 'https://lit.link/en/ikuhoshifuri'\n      },\n      'Justin Thornburgh': {\n        twitter: 'https://x.com/JustinThornbur7'\n      },\n      'v1ris': {\n        website: 'https://v1ris.com/',\n        youtube: 'https://www.youtube.com/@v1ris_music'\n      },\n      'Rita Kamishiro': {\n        youtube: 'https://www.youtube.com/@RitaKamishiro',\n        carrd: 'https://ritakamishiro.carrd.co/'\n      },\n      'Marcus Ho': {\n        website: 'https://www.marcushomusic.com/'\n      },\n\n      // Track 4: AZALI & Aloysius - Lux Nova\n      'AZALI': {\n        youtube: 'https://www.youtube.com/@AZALI00013',\n        twitter: 'https://x.com/AZALI00013'\n      },\n      'Aloysius': {\n        youtube: 'https://www.youtube.com/@aloysius3264',\n        twitter: 'https://x.com/Aloysiu04138577'\n      },\n\n      // Track 5: potatoTeto - Hall of Silent Echoes\n      'potatoTeto': {\n        youtube: 'https://www.youtube.com/@potatoteto',\n        website: 'https://www.potatoteto.com/'\n      },\n\n      // Track 6: Artisan - Lirica\n      'Artisan': {\n        youtube: 'https://www.youtube.com/@artisan1233',\n        twitter: 'https://x.com/artisan1233'\n      },\n\n      // Track 7: Mei Naganowa - To Defy The Beankeeper\n      'Mei Naganowa': {\n        twitter: 'https://x.com/ReeKDoesDTM'\n      },\n\n      // Track 8: Evin a'k - Trench\n      \"Evin a'k\": {\n        youtube: 'https://www.youtube.com/@Evin_a_k',\n        twitter: 'https://x.com/evin_a_k?lang=en'\n      },\n\n      // Track 9: BilliumMoto - Blooming in the Square\n      'BilliumMoto': {\n        youtube: 'https://www.youtube.com/@BilliumMoto',\n        twitter: 'https://x.com/BilliumMoto'\n      },\n\n      // Track 10: Elliot Hsu - Skies in Abberation\n      'Elliot Hsu': {\n        youtube: 'https://www.youtube.com/@ElliotHsu',\n        twitter: 'https://x.com/Leigendar'\n      },\n\n      // Track 11: Yuzuki - song of the nymphs\n      'Yuzuki': {\n        youtube: 'https://www.youtube.com/@yuzukimasu',\n        linktr: 'https://linktr.ee/yuzukimasu'\n      },\n\n      // Track 12: LucaProject - Light Guardian\n      'LucaProject': {\n        youtube: 'https://www.youtube.com/@lucaproject6108',\n        twitter: 'https://x.com/LucaProject6108',\n        carrd: 'https://lucaproject.carrd.co/'\n      },\n\n      // Track 13: Koway - Enso Antumbra (feat. 伍一)\n      'Koway': {\n        youtube: 'https://www.youtube.com/@KOWAYmusic',\n        instagram: 'https://www.instagram.com/koway_music/',\n        twitter: 'https://x.com/kowaymusic'\n      },\n      '伍一': {\n        youtube: 'https://www.youtube.com/@dreamer051',\n        twitch: 'https://www.twitch.tv/dreamer051/about'\n      },\n      '伍': { // Alternative name for same artist\n        youtube: 'https://www.youtube.com/@dreamer051',\n        twitch: 'https://www.twitch.tv/dreamer051/about'\n      },\n\n      // Track 14: Nstryder - You're In My Way!\n      'Nstryder': {\n        youtube: 'https://www.youtube.com/@nstryder-music',\n        bandcamp: 'https://nstryder.bandcamp.com/'\n      },\n\n      // Track 15: MoAE:. - Remember you\n      'MoAE.': {\n        youtube: 'https://www.youtube.com/@moae00',\n        website: 'https://moae.jimdosite.com/'\n      },\n\n      // Track 16: dystopian tanuki - Hidden passage\n      'dystopian tanuki': {\n        youtube: 'https://www.youtube.com/@dystopiantanuki',\n        twitter: 'https://x.com/DystopianTanuki'\n      },\n\n      // Track 17: Heem - Last Dance (feat. Woojinee) - MOVED TO PHANTASIA 1 SECTION\n      'woojinee': {\n        instagram: 'https://www.instagram.com/wooj1nee?igsh=czUwcXg3aWh6NmM5&utm_source=qr'\n      },\n      'Woojinee': { // Alternative capitalization\n        instagram: 'https://www.instagram.com/wooj1nee?igsh=czUwcXg3aWh6NmM5&utm_source=qr'\n      },\n\n      // Track 18: Bigg Milk - Second Guess\n      'Bigg Milk': {\n        youtube: 'https://www.youtube.com/@BiggMilk',\n        twitter: 'https://x.com/milk_bigg'\n      },\n\n      // Track 19: Gardens & Sad Keyboard Guy - Fractured Light (feat. eili)\n      'Gardens': {\n        youtube: 'https://www.youtube.com/@gardens5812',\n        website: 'https://gardensdtm.com/'\n      },\n      'Sad Keyboard Guy': {\n        youtube: 'https://www.youtube.com/@SadKeyboardGuy',\n        carrd: 'https://sadkeyboardguy.carrd.co/'\n      },\n\n      // Track 20: Futsuunohito - Beyond the Veil of Light\n      'Futsuunohito': {\n        youtube: 'https://www.youtube.com/@futsuunohito',\n        carrd: 'https://futsuunohito.crd.co/'\n      },\n      'shishishiena': {\n        youtube: 'https://www.youtube.com/@shishishiena',\n        website: 'https://www.shishishiena.com/'\n      },\n\n      // ====== PHANTASIA PROJECT 1 ARTISTS - SOCIAL LINKS ======\n      // Adding complete social links for Phantasia 1 artists\n\n      // Heem - Complete social links (also in Phantasia 2)\n      'Heem': {\n        twitter: 'https://x.com/h_e_e__m',\n        linktr: 'https://linktr.ee/heeem'\n      },\n\n      // Prower - Electronic producer from Phantasia 1\n      'Prower': {\n        twitter: 'https://x.com/prowerrr_'\n      },\n\n      // Seycara - Collaborative producer with AZALI\n      'Seycara': {\n        twitter: 'https://x.com/Seycara',\n        youtube: 'https://www.youtube.com/@Seycara'\n      },\n\n      // Qyubey - Electronic producer from Phantasia 1\n      'Qyubey': {\n        twitter: 'https://x.com/QyubeySan',\n        youtube: 'https://www.youtube.com/@qyubey_san'\n      },\n\n      // Luscinia - Electronic producer from Phantasia 1\n      'Luscinia': {\n        twitter: 'https://x.com/LusciniaSound',\n        youtube: 'https://www.youtube.com/@Luscinia.Nightingale'\n      },\n\n      // はがね (Hagane) - Japanese electronic producer\n      'はがね': {\n        twitter: 'https://x.com/STEEL_PLUS',\n        youtube: 'https://www.youtube.com/@steelplus_hagane'\n      },\n      'Hagane': { // Alternative name mapping\n        twitter: 'https://x.com/STEEL_PLUS',\n        youtube: 'https://www.youtube.com/@steelplus_hagane'\n      },\n\n      // satella - Electronic producer from Phantasia 1\n      'satella': {\n        twitter: 'https://x.com/satella0w0',\n        youtube: 'https://www.youtube.com/@satella0w0'\n      },\n\n      // sleepy - Collaborative producer with Gardens\n      'sleepy': {\n        twitter: 'https://x.com/sleeplessgamign'\n      },\n      'Sleepless': { // Alternative name mapping for sleepy\n        twitter: 'https://x.com/sleeplessgamign'\n      },\n\n      // ====== SPECIAL MENTIONS - PRODUCTION TEAM ======\n      'PliXoR': {\n        twitter: 'https://x.com/plixormusic'\n      },\n      'NapaL': {\n        twitter: 'https://x.com/Ve_Xillum'\n      },\n      '나팔 NapaL': { // Alternative name mapping\n        twitter: 'https://x.com/Ve_Xillum'\n      },\n      'yy_artwork': {\n        twitter: 'https://x.com/yy_artwork'\n      },\n      'Elegant Sister': {\n        twitter: 'https://x.com/ElegantSister'\n      },\n      'Len': {\n        twitter: 'https://x.com/Len_licht'\n      },\n      'Daph': {\n        twitter: 'https://x.com/daphshoo'\n      }\n    };\n\n    return socialLinksMap[artistName] || {};\n  }\n\n  /**\n   * Get correct audio filename for Phantasia 1 tracks\n   */\n  private getPhantasia1AudioFilename(trackNumber: number, artist: string, title: string): string {\n    // Map of actual Phantasia 1 filenames based on the real files in assets/audio/Phantasia_1/\n    const phantasia1FilenameMap: Record<number, string> = {\n      1: '01. SpiralFlip - Phantasia ft. Eili.ogg',\n      2: '02. Bigg Milk - First Steps.ogg',\n      3: '03. Heem - Altar of the Sword.ogg',\n      4: '04. futsuunohito - A Voyage on the Winds of Change.ogg',\n      5: '05. Prower - Rohkeutta Etsiä.ogg',\n      6: '06. AZALI & Seycara  - Ivory Flowers.ogg', // Note: extra space after Seycara\n      7: '07. Qyubey - Outer Bygone Ruins.ogg',\n      8: '08. Luscinia - Spiral Into the Abyss!.ogg',\n      9: '09. Gardens & sleepy - Wandering Breeze.ogg',\n      10: '10. はがね - Mystic Nebula.ogg',\n      11: '11. LucaProject - Iris.ogg',\n      12: '12. Mei Naganowa - Half-Asleep in the Middle of Bumfuck Nowhere.ogg',\n      13: '13. satella - The Traveller.ogg',\n      14: '14. dystopian tanuki - Childhood memories.ogg'\n    };\n\n    return phantasia1FilenameMap[trackNumber] || `${String(trackNumber).padStart(2, '0')}. ${artist} - ${title}.ogg`;\n  }\n\n  /**\n   * Create tracks from Phantasia 1 data\n   */\n  private createPhantasia1TracksFromData(): TrackWithArtists[] {\n    const phantasia1TracksData = [\n      { time: '0:00', artist: 'SpiralFlip feat. eili', title: 'Phantasia' },\n      { time: '3:00', artist: 'Bigg Milk', title: 'First Steps' },\n      { time: '6:00', artist: 'Heem', title: 'Altar of the Sword' },\n      { time: '9:00', artist: 'futsuunohito', title: 'A Voyage on the Winds of Change' },\n      { time: '12:00', artist: 'Prower', title: 'Rohkeutta Etsiä' },\n      { time: '15:00', artist: 'AZALI & Seycara', title: 'Ivory Flowers' },\n      { time: '18:00', artist: 'Qyubey', title: 'Outer Bygone Ruins' },\n      { time: '21:00', artist: 'Luscinia', title: 'Spiral Into the Abyss!' },\n      { time: '24:00', artist: 'Gardens & sleepy', title: 'Wandering Breeze' },\n      { time: '27:00', artist: 'はがね', title: 'Mystic Nebula' },\n      { time: '30:00', artist: 'LucaProject', title: 'Iris' },\n      { time: '33:00', artist: 'Mei Naganowa', title: 'Half-Asleep in the Middle of Bumfuck Nowhere' },\n      { time: '36:00', artist: 'satella', title: 'The Traveller' },\n      { time: '39:00', artist: 'dystopian tanuki', title: 'Childhood memories' }\n    ];\n\n    const tracks: TrackWithArtists[] = [];\n\n    phantasia1TracksData.forEach((trackData, index) => {\n      const [minutes, seconds] = trackData.time.split(':').map(Number);\n      const startTime = minutes * 60 + seconds;\n      const nextTrack = phantasia1TracksData[index + 1];\n      let endTime = 45 * 60; // Default 45 minutes total\n\n      if (nextTrack) {\n        const [nextMinutes, nextSeconds] = nextTrack.time.split(':').map(Number);\n        endTime = nextMinutes * 60 + nextSeconds;\n      }\n\n      // Parse features and collaborators\n      const features: Artist[] = [];\n      const collaborators: Artist[] = [];\n\n      // Handle different featured artist patterns\n      const featPattern = /(.+?)\\s+(?:feat\\.|ft\\.)\\s+(.+)/;\n      const featMatch = trackData.artist.match(featPattern);\n\n      if (featMatch) {\n        const [, mainArtist, featuredArtist] = featMatch;\n        features.push({\n          id: this.generateArtistId(featuredArtist),\n          name: featuredArtist,\n          displayName: featuredArtist,\n          role: 'Featured Artist',\n          socialLinks: this.getSocialLinksForArtist(featuredArtist)\n        });\n      }\n\n      // Handle collaborations with & symbol\n      const collabPattern = /(.+?)\\s+&\\s+(.+)/;\n      const collabMatch = trackData.artist.match(collabPattern);\n\n      if (collabMatch && !featMatch) {\n        const [, artist1, artist2] = collabMatch;\n        collaborators.push({\n          id: this.generateArtistId(artist2),\n          name: artist2,\n          displayName: artist2,\n          role: 'Collaborator',\n          socialLinks: this.getSocialLinksForArtist(artist2)\n        });\n      }\n\n      // Clean main artist name\n      let cleanMainArtist = trackData.artist.replace(/\\s+(?:feat\\.|ft\\.)\\s+.+/, '');\n      if (collabMatch && !featMatch) {\n        cleanMainArtist = collabMatch[1];\n      }\n\n      tracks.push({\n        id: `p1-${index + 1}`,\n        title: trackData.title,\n        mainArtist: cleanMainArtist,\n        startTime,\n        endTime,\n        artists: [],\n        features,\n        collaborators,\n        audioFile: this.getPhantasia1AudioFilename(index + 1, trackData.artist, trackData.title)\n      });\n    });\n\n    return tracks;\n  }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Service for handling audio playback in the Phantasia project\n * Provides functionality for playing, pausing, and controlling tracks\n * 【✓】\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AudioService {\n  private readonly audioElement: HTMLAudioElement;\n  private readonly tracksMap = new Map<string, string>();\n  \n  // BehaviorSubject to track the audio state\n  private readonly audioStateSubject = new BehaviorSubject<AudioState>({\n    isPlaying: false,\n    currentTrack: null,\n    currentTime: 0,\n    duration: 0,\n    volume: 0.5\n  });\n  \n  // Observable that components can subscribe to\n  readonly audioState$: Observable<AudioState> = this.audioStateSubject.asObservable();\n  \n  constructor() {\n    // Create audio element\n    this.audioElement = new Audio();\n    \n    // Initialize tracks map\n    this.initializeTracksMap();\n    \n    // Set up event listeners\n    this.setupEventListeners();\n  }\n  \n  /**\n   * Initialize tracks for each section\n   * 【✓】 Updated for multi-project support (Phantasia 1 & 2)\n   */\n  private initializeTracksMap(): void {\n    // Map sections to track URLs - Default to Phantasia 1 project\n    this.tracksMap.set('introduction', 'assets/audio/Phantasia_1/01. SpiralFlip - Phantasia ft. Eili.ogg');\n    this.tracksMap.set('disc-1', 'assets/audio/Phantasia_1/01. SpiralFlip - Phantasia ft. Eili.ogg');\n    this.tracksMap.set('disc-2', 'assets/audio/Phantasia_1/01. SpiralFlip - Phantasia ft. Eili.ogg');\n    this.tracksMap.set('pv', 'assets/audio/Phantasia_1/01. SpiralFlip - Phantasia ft. Eili.ogg');\n    this.tracksMap.set('information', 'assets/audio/Phantasia_1/01. SpiralFlip - Phantasia ft. Eili.ogg');\n    this.tracksMap.set('phantasia', 'assets/audio/Phantasia_1/01. SpiralFlip - Phantasia ft. Eili.ogg');\n\n    // Add all 14 Phantasia 1 tracks by track number\n    for (let i = 1; i <= 14; i++) {\n      const trackFilenames: Record<number, string> = {\n        1: '01. SpiralFlip - Phantasia ft. Eili.ogg',\n        2: '02. Bigg Milk - First Steps.ogg',\n        3: '03. Heem - Altar of the Sword.ogg',\n        4: '04. futsuunohito - A Voyage on the Winds of Change.ogg',\n        5: '05. Prower - Rohkeutta Etsiä.ogg',\n        6: '06. AZALI & Seycara  - Ivory Flowers.ogg',\n        7: '07. Qyubey - Outer Bygone Ruins.ogg',\n        8: '08. Luscinia - Spiral Into the Abyss!.ogg',\n        9: '09. Gardens & sleepy - Wandering Breeze.ogg',\n        10: '10. はがね - Mystic Nebula.ogg',\n        11: '11. LucaProject - Iris.ogg',\n        12: '12. Mei Naganowa - Half-Asleep in the Middle of Bumfuck Nowhere.ogg',\n        13: '13. satella - The Traveller.ogg',\n        14: '14. dystopian tanuki - Childhood memories.ogg'\n      };\n\n      const filename = trackFilenames[i];\n      if (filename) {\n        this.tracksMap.set(i.toString(), `assets/audio/Phantasia_1/${filename}`);\n        this.tracksMap.set(`track-${i}`, `assets/audio/Phantasia_1/${filename}`);\n        this.tracksMap.set(`p1-${i}`, `assets/audio/Phantasia_1/${filename}`);\n      }\n    }\n\n    // Add all 20 Phantasia 2 tracks by track number - CRITICAL FIX FOR 20 TRACK SUPPORT\n    for (let i = 1; i <= 20; i++) {\n      const phantasia2Filenames: Record<number, string> = {\n        1: '1. SpiralFlip - Blinding Dawn feat. eili.ogg',\n        2: '2. Ariatec - Hollow Crown.ogg',\n        3: '3. MB -  暁の姫 feat. Iku Hoshifuri.ogg',\n        4: '4. Azali & Aloysius - Lux Nova.ogg',\n        5: '5. potatoTeto - Hall of Silent Echoes.ogg',\n        6: '6. Artisan - Lirica.ogg',\n        7: '7. Mei Naganowa - To Defy The Beankeeper.ogg',\n        8: \"8. Evin a'k - Trench.ogg\",\n        9: '9. BilliumMoto - Blooming in the Square.ogg',\n        10: '10. Elliot Hsu - Skies in Abberation.ogg',\n        11: '11. Yuzuki - song of the nymphs.ogg',\n        12: '12. LucaProject - Light Guardian.ogg',\n        13: '13. Koway - Enso Antumbra ft. 伍.ogg',\n        14: '14. Nstryder - You_re In My Way.ogg',\n        15: '15. MoAE. - Remember you.ogg',\n        16: '16. dystopian tanuki - Hidden passage.ogg',\n        17: '17. Heem - Last Dance feat. woojinee (detune version).ogg',\n        18: '18. Bigg Milk - Second Guess.ogg',\n        19: '19. Gardens & Sad Keyboard Guy - Fractured Light ft. eili.ogg',\n        20: '20. Futsuunohito - Beyond the Veil of Light.ogg'\n      };\n\n      const filename = phantasia2Filenames[i];\n      if (filename) {\n        // Add Phantasia 2 track mappings\n        this.tracksMap.set(`p2-${i}`, `assets/audio/Phantasia_2/${filename}`);\n        this.tracksMap.set(`phantasia2-${i}`, `assets/audio/Phantasia_2/${filename}`);\n      }\n    }\n  }\n  \n  /**\n   * Set up audio element event listeners\n   * 【✓】\n   */\n  private setupEventListeners(): void {\n    // Update time\n    this.audioElement.addEventListener('timeupdate', () => {\n      this.updateAudioState({\n        currentTime: this.audioElement.currentTime\n      });\n    });\n    \n    // Update duration when metadata loaded\n    this.audioElement.addEventListener('loadedmetadata', () => {\n      this.updateAudioState({\n        duration: this.audioElement.duration\n      });\n    });\n    \n    // Handle end of track\n    this.audioElement.addEventListener('ended', () => {\n      this.updateAudioState({\n        isPlaying: false,\n        currentTime: 0\n      });\n      this.audioElement.currentTime = 0;\n    });\n    \n    // Handle errors\n    this.audioElement.addEventListener('error', (error) => {\n      console.error('[AudioService] Error playing audio:', error);\n      this.updateAudioState({\n        isPlaying: false,\n        currentTrack: null\n      });\n    });\n  }\n  \n  /**\n   * Update the audio state and notify subscribers\n   * 【✓】\n   */\n  private updateAudioState(partialState: Partial<AudioState>): void {\n    const currentState = this.audioStateSubject.getValue();\n    const newState = { ...currentState, ...partialState };\n    this.audioStateSubject.next(newState);\n  }\n  \n  /**\n   * Play a specific track\n   * 【✓】\n   */\n  playTrack(trackId: string): void {\n    const trackUrl = this.tracksMap.get(trackId);\n    \n    if (!trackUrl) {\n      console.error(`[AudioService] Track not found: ${trackId}`);\n      return;\n    }\n    \n    // If different track, load new one\n    if (this.audioStateSubject.getValue().currentTrack !== trackId) {\n      this.audioElement.src = trackUrl;\n      this.audioElement.load();\n      \n      this.updateAudioState({\n        currentTrack: trackId,\n        currentTime: 0\n      });\n    }\n    \n    // Play and update state\n    this.audioElement.play()\n      .then(() => {\n        this.updateAudioState({ isPlaying: true });\n      })\n      .catch(error => {\n        console.error('[AudioService] Error playing track:', error);\n      });\n  }\n  \n  /**\n   * Pause the current track\n   * 【✓】\n   */\n  pause(): void {\n    this.audioElement.pause();\n    this.updateAudioState({ isPlaying: false });\n  }\n  \n  /**\n   * Toggle play/pause\n   * 【✓】\n   */\n  togglePlayPause(): void {\n    const currentState = this.audioStateSubject.getValue();\n    \n    if (currentState.isPlaying) {\n      this.pause();\n    } else if (currentState.currentTrack) {\n      this.playTrack(currentState.currentTrack);\n    }\n  }\n  \n  /**\n   * Set volume (0-1)\n   * 【✓】\n   */\n  setVolume(volume: number): void {\n    const clampedVolume = Math.min(1, Math.max(0, volume));\n    this.audioElement.volume = clampedVolume;\n    this.updateAudioState({ volume: clampedVolume });\n  }\n  \n  /**\n   * Seek to a specific time\n   * 【✓】\n   */\n  seekTo(time: number): void {\n    if (this.audioElement.readyState > 0) {\n      const clampedTime = Math.min(\n        this.audioElement.duration, \n        Math.max(0, time)\n      );\n      \n      this.audioElement.currentTime = clampedTime;\n      this.updateAudioState({ currentTime: clampedTime });\n    }\n  }\n  \n  /**\n   * Set track for a specific section\n   * 【✓】\n   */\n  setTrackForSection(section: string): void {\n    const currentState = this.audioStateSubject.getValue();\n    const trackForSection = this.tracksMap.get(section);\n    \n    if (trackForSection && currentState.currentTrack !== section) {\n      this.playTrack(section);\n    }\n  }\n}\n\n/**\n * Interface for audio state\n * 【✓】\n */\nexport interface AudioState {\n  isPlaying: boolean;\n  currentTrack: string | null;\n  currentTime: number;\n  duration: number;\n  volume: number;\n} ","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { Howl } from 'howler';\nimport { AudioService } from './audio.service';\nimport { DynamicArtistService, TrackWithArtists } from '../../services/dynamic-artist.service';\nimport { MusicStateManagerService } from '../../../../../services/music-state-manager.service';\nimport { Subject, combineLatest } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n// 【✓】 Define interface for track data\ninterface Track {\n  title: string;\n  artist: string;\n  id?: string;\n  url?: string;\n}\n\n@Component({\n  selector: 'app-music-player',\n  standalone: true,\n  imports: [CommonModule, MatIconModule],\n  templateUrl: './music-player.component.html',\n  styleUrls: ['./music-player.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush // 【✓】 Optimize change detection\n})\nexport class MusicPlayerComponent implements OnInit, OnDestroy {\n  // 【✓】 Add proper typing for inputs\n  @Input() trackTitle: string = '';\n  @Input() trackArtist: string = '';\n  @Input() activeTrack: Track | null = null;\n  \n  private audio: Howl | null = null;\n  private readonly destroy$ = new Subject<void>();\n\n  // 【✓】 Enhanced state management with proper locks and error handling\n  private readonly trackLoadingMutex = new Subject<void>();\n  private isTrackLoading = false;\n  private audioInstances: Howl[] = []; // Track all instances for proper cleanup\n  private lastLoadedTrackId: string | null = null;\n\n  // 【✓】 Add proper typing for state with separation of concerns\n  isPlaying = false;\n  isLoading = true;\n  currentTrack = '';\n  currentTime = 0;\n  duration = 0;\n  volume = 0.5;\n\n  // 【✓】 Separate mute state management to prevent conflicts\n  private _isMuted = false;\n  private _savedVolumeBeforeMute = 0.5;\n  private _muteStateInitialized = false;\n\n  error = '';\n  currentSubtitle: string = '';\n\n  // Enhanced state for multi-project support\n  currentTrackInfo: TrackWithArtists | null = null;\n  allTracks: TrackWithArtists[] = [];\n  currentTrackIndex = 0;\n\n  // Project-aware audio path\n  private currentProject: 'phantasia1' | 'phantasia2' = 'phantasia1';\n\n  // 【✓】 Enhanced state persistence with better error recovery\n  private hasUserInteracted = false;\n  private lastSuccessfulVolume = 0.5;\n  private retryCount = 0;\n  private maxRetries = 3;\n\n  // 【✓】 Audio context management and event listener tracking\n  private audioContext: AudioContext | null = null;\n  private eventListeners: Array<{ element: any; event: string; handler: any }> = [];\n  private isAudioContextInitialized = false;\n\n  constructor(\n    private readonly audioService: AudioService,\n    private readonly dynamicArtistService: DynamicArtistService,\n    private readonly musicStateManager: MusicStateManagerService,\n    private readonly cdr: ChangeDetectorRef\n  ) {\n    // Enhanced debugging for Track 8 loading issues\n    this.diagnoseEnvironment();\n\n    // 【✓】 Initialize audio context management\n    this.initializeAudioContext();\n\n    // 【✓】 Setup global event listeners for audio context resume\n    this.setupGlobalEventListeners();\n  }\n\n  // 【✓】 Comprehensive environment diagnosis for debugging\n  private diagnoseEnvironment(): void {\n    console.group('[MusicPlayer] Environment Diagnosis');\n    console.log('User Agent:', navigator.userAgent);\n    console.log('Location:', window.location.href);\n    console.log('Base URL:', document.baseURI);\n    console.log('Protocol:', window.location.protocol);\n    console.log('Host:', window.location.host);\n    console.log('Port:', window.location.port);\n\n    // Test Unicode support\n    const testUnicode = '8. Evin a\\u2019k - Trench.ogg';\n    console.log('Unicode Test String:', testUnicode);\n    console.log('Unicode Test Encoded:', encodeURIComponent(testUnicode));\n\n    // Test Howler capabilities\n    console.log('Howler Audio Support:', {\n      webAudio: (window as any).Howler?.ctx !== null,\n      html5: true,\n      codecs: {\n        ogg: (window as any).Howler?.codecs?.('audio/ogg') || 'unknown',\n        mp3: (window as any).Howler?.codecs?.('audio/mpeg') || 'unknown'\n      }\n    });\n\n    console.groupEnd();\n  }\n\n  // 【✓】 Get project-specific audio directory\n  private getAudioDirectory(): string {\n    return this.currentProject === 'phantasia1' ? 'Phantasia_1' : 'Phantasia_2';\n  }\n\n  // 【✓】 Initialize component\n  ngOnInit(): void {\n    this.initializeAudio();\n  }\n\n  // 【✓】 Enhanced cleanup with comprehensive resource management\n  ngOnDestroy(): void {\n    try {\n      // Signal destruction to all subscriptions\n      this.destroy$.next();\n      this.destroy$.complete();\n\n      // 【✓】 Clean up all audio instances to prevent memory leaks\n      this.cleanupAllAudioInstances();\n\n      // 【✓】 Clear any pending track loading operations\n      this.isTrackLoading = false;\n      this.lastLoadedTrackId = null;\n\n      // 【✓】 Clean up audio context and event listeners\n      this.cleanupAudioContext();\n      this.cleanupEventListeners();\n\n      console.log('[MusicPlayer] Component destroyed and resources cleaned up');\n    } catch (error) {\n      console.error('[MusicPlayer] Error during cleanup:', error);\n    }\n  }\n\n  // 【✓】 Initialize audio player with multi-project support\n  private initializeAudio(): void {\n    // Listen to current project changes\n    this.dynamicArtistService.currentProject$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(project => {\n        this.currentProject = project;\n        console.log(`[MusicPlayer] Project switched to: ${project}`);\n        this.cdr.markForCheck();\n      });\n\n    // Load tracks from DynamicArtistService\n    this.dynamicArtistService.tracks$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(tracks => {\n        this.allTracks = tracks;\n        if (tracks.length > 0 && !this.currentTrackInfo) {\n          this.currentTrackInfo = tracks[0];\n          this.currentTrackIndex = 0;\n          this.loadTrackFromInfo(this.currentTrackInfo);\n          this.updateDynamicArtistTime();\n        }\n        this.cdr.markForCheck();\n      });\n\n    // Listen to current track changes from dynamic artist service\n    this.dynamicArtistService.currentTrack$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(currentTrack => {\n        if (currentTrack && currentTrack !== this.currentTrackInfo) {\n          this.currentTrackInfo = currentTrack;\n          this.currentTrackIndex = this.allTracks.findIndex(t => t.id === currentTrack.id);\n          this.loadTrackFromInfo(currentTrack);\n        }\n        this.cdr.markForCheck();\n      });\n  }\n\n\n  // 【✓】 Enhanced track loading with mutex protection and proper cleanup\n  private async loadTrackFromInfo(trackInfo: TrackWithArtists): Promise<void> {\n    // 【✓】 Implement mutex to prevent race conditions\n    if (this.isTrackLoading) {\n      console.log('[MusicPlayer] Track loading already in progress, waiting...');\n      return;\n    }\n\n    // Check if we're trying to load the same track\n    if (this.lastLoadedTrackId === trackInfo.id && !this.error) {\n      console.log(`[MusicPlayer] Track ${trackInfo.id} already loaded, skipping`);\n      return;\n    }\n\n    this.isTrackLoading = true;\n    this.lastLoadedTrackId = trackInfo.id;\n    this.retryCount = 0;\n\n    try {\n      this.isLoading = true;\n      this.currentTime = 0;\n      this.isPlaying = false;\n      this.error = '';\n      this.cdr.markForCheck();\n\n      // 【✓】 Clean up previous audio instance properly\n      await this.cleanupCurrentAudio();\n\n      console.log(`[MusicPlayer] Starting track load: ${trackInfo.title} (${trackInfo.id})`);\n    } catch (error) {\n      console.error('[MusicPlayer] Error during track loading preparation:', error);\n      this.handleTrackLoadError(trackInfo, error);\n      return;\n    }\n\n    // Construct audio source with enhanced Unicode handling\n    let audioSrc: string;\n    if (trackInfo.audioFile) {\n      // Handle Unicode characters specially for track 8 (Evin a'k)\n      // The right single quotation mark (U+2019) needs special handling\n      let processedFilename = trackInfo.audioFile;\n\n      // Enhanced logging for debugging Unicode issues\n      console.log('[MusicPlayer] Original filename:', processedFilename);\n      console.log('[MusicPlayer] Filename char codes:', [...processedFilename].map(c => `${c}(${c.charCodeAt(0)})`).join(' '));\n\n      // Try multiple encoding strategies for maximum compatibility\n      const encodingStrategies = [\n        // Strategy 1: Use encodeURIComponent for proper URL encoding\n        () => `assets/audio/${this.getAudioDirectory()}/${encodeURIComponent(processedFilename)}`,\n        // Strategy 2: Replace Unicode quotation mark with regular apostrophe first, then encode\n        () => {\n          const normalized = processedFilename.replace(/'/g, \"'\");\n          return `assets/audio/${this.getAudioDirectory()}/${encodeURIComponent(normalized)}`;\n        },\n        // Strategy 3: Manual encoding of problematic characters\n        () => {\n          const manualEncoded = processedFilename\n            .replace(/'/g, \"%E2%80%99\")  // Right single quotation mark\n            .replace(/ /g, \"%20\")        // Spaces\n            .replace(/\\(/g, \"%28\")       // Left parenthesis\n            .replace(/\\)/g, \"%29\");      // Right parenthesis\n          return `assets/audio/${this.getAudioDirectory()}/${manualEncoded}`;\n        },\n        // Strategy 4: Try without any encoding (direct path)\n        () => `assets/audio/${this.getAudioDirectory()}/${processedFilename}`,\n        // Strategy 5: Use different base URL or absolute path\n        () => `/assets/audio/${this.getAudioDirectory()}/${encodeURIComponent(processedFilename)}`\n      ];\n\n      // Use the first strategy by default, but we'll add fallback logic in the error handler\n      audioSrc = encodingStrategies[0]();\n\n      // Store alternative URLs for fallback attempts\n      (this as any)._fallbackUrls = encodingStrategies.slice(1).map(strategy => strategy());\n      (this as any)._currentStrategyIndex = 0;\n      (this as any)._trackInfo = trackInfo;  // Store for error reporting\n\n      console.log('[MusicPlayer] Prepared fallback URLs:');\n      (this as any)._fallbackUrls.forEach((url: string, index: number) => {\n        console.log(`  Strategy ${index + 1}: ${url}`);\n      });\n\n    } else {\n      // Fallback to track ID\n      audioSrc = `assets/audio/${this.getAudioDirectory()}/${trackInfo.id}.ogg`;\n      (this as any)._fallbackUrls = [];\n    }\n\n    console.log('[MusicPlayer] Loading audio (Strategy 0):', audioSrc);\n\n    // Additional diagnostics for Track 8\n    if (trackInfo.id === '8') {\n      console.group('[MusicPlayer] Track 8 Diagnostics');\n      console.log('Track ID:', trackInfo.id);\n      console.log('Track Title:', trackInfo.title);\n      console.log('Main Artist:', trackInfo.mainArtist);\n      console.log('Audio File Mapping:', trackInfo.audioFile);\n      console.log('Final Audio Source:', audioSrc);\n      console.log('Browser Location:', window.location.href);\n      console.groupEnd();\n    }\n\n    this.audio = new Howl({\n      src: [audioSrc],\n      html5: true,\n      format: ['ogg', 'mp3'], // Prefer OGG but fallback to MP3\n      volume: this.volume, // Preserve volume setting\n      onload: () => {\n        this.isLoading = false;\n        this.duration = this.audio?.duration() || 0;\n        // 【✓】 Restore volume and mute state properly\n        if (this._isMuted && this.audio) {\n          this.audio.volume(0);\n        } else if (this.audio) {\n          this.audio.volume(this.volume);\n        }\n        this.updateDynamicArtistTime();\n        // Notify centralized state manager\n        this.musicStateManager.updateDuration(this.duration);\n        this.cdr.markForCheck();\n      },\n      onplay: () => {\n        this.isPlaying = true;\n        this.updateTime();\n        this.updateDynamicArtistTime();\n        // Notify centralized state manager\n        this.musicStateManager.setPlayingState(true);\n        this.cdr.markForCheck();\n      },\n      onpause: () => {\n        this.isPlaying = false;\n        // Notify centralized state manager\n        this.musicStateManager.setPlayingState(false);\n        this.cdr.markForCheck();\n      },\n      onend: () => {\n        this.isPlaying = false;\n        this.currentTime = 0;\n        // Notify centralized state manager\n        this.musicStateManager.setPlayingState(false);\n        this.nextTrack();\n        this.cdr.markForCheck();\n      },\n      onloaderror: (id, error) => {\n        console.error('[MusicPlayer] Error loading (Strategy ' + ((this as any)._currentStrategyIndex || 0) + '):', audioSrc, error);\n        console.error('[MusicPlayer] Track info:', trackInfo);\n\n        // Try fallback strategies for Unicode filename issues\n        const fallbackUrls = (this as any)._fallbackUrls || [];\n        const currentIndex = (this as any)._currentStrategyIndex || 0;\n\n        if (currentIndex < fallbackUrls.length) {\n          console.log('[MusicPlayer] Attempting fallback strategy', currentIndex + 1);\n          (this as any)._currentStrategyIndex = currentIndex + 1;\n\n          const fallbackUrl = fallbackUrls[currentIndex];\n          console.log('[MusicPlayer] Trying fallback URL:', fallbackUrl);\n\n          // Create new Howl instance with fallback URL\n          if (this.audio) {\n            this.audio.unload();\n          }\n\n          this.audio = new Howl({\n            src: [fallbackUrl],\n            html5: true,\n            format: ['ogg', 'mp3'],\n            volume: this.volume,\n            onload: () => {\n              console.log('[MusicPlayer] Fallback strategy successful!');\n              this.isLoading = false;\n              this.isTrackLoading = false;\n              this.duration = this.audio?.duration() || 0;\n\n              // 【✓】 Restore volume state properly\n              if (this._isMuted && this.audio) {\n                this.audio.volume(0);\n              } else if (this.audio) {\n                this.audio.volume(this.volume);\n              }\n\n              this.updateDynamicArtistTime();\n              this.musicStateManager.updateDuration(this.duration);\n              this.cdr.markForCheck();\n            },\n            onplay: () => {\n              this.isPlaying = true;\n              this.updateTime();\n              this.updateDynamicArtistTime();\n              this.cdr.markForCheck();\n            },\n            onpause: () => {\n              this.isPlaying = false;\n              this.cdr.markForCheck();\n            },\n            onend: () => {\n              this.isPlaying = false;\n              this.currentTime = 0;\n              this.nextTrack();\n              this.cdr.markForCheck();\n            },\n            onloaderror: (fallbackId, fallbackError) => {\n              console.error('[MusicPlayer] Fallback also failed:', fallbackUrl, fallbackError);\n              // If this was the last fallback, show final error\n              if (currentIndex >= fallbackUrls.length - 1) {\n                this.error = `Failed to load track \"${trackInfo.title}\" by ${trackInfo.mainArtist}. Tried ${fallbackUrls.length + 1} different URL encodings. Last error: ${fallbackError}`;\n                this.isLoading = false;\n                this.isTrackLoading = false;\n                this.lastLoadedTrackId = null;\n                this.cdr.markForCheck();\n              } else {\n                // Continue with next fallback - increment index and try next strategy\n                (this as any)._currentStrategyIndex = currentIndex + 1;\n                const nextFallbackUrl = fallbackUrls[currentIndex + 1];\n                if (nextFallbackUrl) {\n                  console.log('[MusicPlayer] Trying next fallback strategy:', currentIndex + 2);\n                  this.tryLoadWithUrl(nextFallbackUrl, trackInfo);\n                }\n              }\n            }\n          });\n        } else {\n          // All strategies failed\n          this.error = `Failed to load track \"${trackInfo.title}\" by ${trackInfo.mainArtist}. All ${fallbackUrls.length + 1} encoding strategies failed. Final error: ${error}`;\n          this.isLoading = false;\n          this.isTrackLoading = false;\n          this.lastLoadedTrackId = null;\n          this.cdr.markForCheck();\n        }\n      }\n    });\n\n    // 【✓】 Track the audio instance for cleanup\n    if (this.audio) {\n      this.audioInstances.push(this.audio);\n      this.isTrackLoading = false;\n    }\n  }\n\n  // 【✓】 Enhanced helper method for fallback URL loading with proper cleanup\n  private async tryLoadWithUrl(url: string, trackInfo: TrackWithArtists): Promise<void> {\n    try {\n      // Clean up current audio before trying fallback\n      await this.cleanupCurrentAudio();\n    } catch (error) {\n      console.error('[MusicPlayer] Error cleaning up before fallback:', error);\n    }\n\n    this.audio = new Howl({\n      src: [url],\n      html5: true,\n      format: ['ogg', 'mp3'],\n      volume: this.volume,\n      onload: () => {\n        console.log('[MusicPlayer] Fallback strategy successful!');\n        this.isLoading = false;\n        this.isTrackLoading = false;\n        this.duration = this.audio?.duration() || 0;\n\n        // 【✓】 Restore volume state properly\n        if (this._isMuted && this.audio) {\n          this.audio.volume(0);\n        } else if (this.audio) {\n          this.audio.volume(this.volume);\n        }\n\n        this.updateDynamicArtistTime();\n        this.musicStateManager.updateDuration(this.duration);\n        this.cdr.markForCheck();\n      },\n      onplay: () => {\n        this.isPlaying = true;\n        this.updateTime();\n        this.updateDynamicArtistTime();\n        this.cdr.markForCheck();\n      },\n      onpause: () => {\n        this.isPlaying = false;\n        this.cdr.markForCheck();\n      },\n      onend: () => {\n        this.isPlaying = false;\n        this.currentTime = 0;\n        this.nextTrack();\n        this.cdr.markForCheck();\n      },\n      onloaderror: (id, error) => {\n        const fallbackUrls = (this as any)._fallbackUrls || [];\n        const currentIndex = (this as any)._currentStrategyIndex || 0;\n        \n        console.error(`[MusicPlayer] Fallback strategy ${currentIndex + 1} failed:`, url, error);\n        \n        if (currentIndex < fallbackUrls.length - 1) {\n          (this as any)._currentStrategyIndex = currentIndex + 1;\n          const nextUrl = fallbackUrls[currentIndex];\n          console.log(`[MusicPlayer] Trying next fallback strategy ${currentIndex + 2}:`, nextUrl);\n          this.tryLoadWithUrl(nextUrl, trackInfo);\n        } else {\n          this.error = `Failed to load track \"${trackInfo.title}\" by ${trackInfo.mainArtist}. All ${fallbackUrls.length + 1} encoding strategies failed. Final error: ${error}`;\n          this.isLoading = false;\n          this.isTrackLoading = false;\n          this.lastLoadedTrackId = null;\n          this.cdr.markForCheck();\n        }\n      }\n    });\n\n    // 【✓】 Track the audio instance for cleanup\n    if (this.audio) {\n      this.audioInstances.push(this.audio);\n    }\n  }\n\n  // 【✓】 Load and play track (legacy method for backwards compatibility)\n  private loadTrack(track: Track): void {\n    this.isLoading = true;\n    this.currentTime = 0;\n    this.isPlaying = false;\n    this.cdr.markForCheck();\n\n    if (this.audio) {\n      this.audio.unload();\n    }\n\n    this.audio = new Howl({\n      src: [track.url || track.title], // Fallback to title if url is not provided\n      html5: true,\n      onload: () => {\n        this.isLoading = false;\n        this.duration = this.audio?.duration() || 0;\n        this.cdr.markForCheck();\n      },\n      onplay: () => {\n        this.isPlaying = true;\n        this.updateTime();\n        this.cdr.markForCheck();\n      },\n      onpause: () => {\n        this.isPlaying = false;\n        this.cdr.markForCheck();\n      },\n      onend: () => {\n        this.isPlaying = false;\n        this.currentTime = 0;\n        this.nextTrack();\n        this.cdr.markForCheck();\n      },\n      onloaderror: (id, error) => {\n        this.error = `Failed to load track: ${error}`;\n        this.isLoading = false;\n        this.cdr.markForCheck();\n      }\n    });\n  }\n\n  // 【✓】 Enhanced play/pause with audio context management\n  async togglePlay(): Promise<void> {\n    if (!this.audio) {\n      console.warn('[MusicPlayer] No audio instance available for playback');\n      return;\n    }\n\n    try {\n      // 【✓】 Ensure audio context is ready before playback\n      await this.ensureAudioContextReady();\n\n      if (this.isPlaying) {\n        this.audio.pause();\n        this.isPlaying = false;\n      } else {\n        // Mark user interaction for audio context policies\n        this.hasUserInteracted = true;\n\n        this.audio.play();\n        this.isPlaying = true;\n      }\n\n      // Notify centralized state manager\n      this.musicStateManager.setPlayingState(this.isPlaying);\n      this.cdr.markForCheck();\n\n      console.log(`[MusicPlayer] Playback ${this.isPlaying ? 'started' : 'paused'}`);\n    } catch (error) {\n      console.error('[MusicPlayer] Error toggling playback:', error);\n      this.error = 'Playback error occurred';\n      this.cdr.markForCheck();\n    }\n  }\n\n  // 【✓】 Enhanced volume management with proper mute state separation\n  setVolume(value: number): void {\n    if (!this.audio) {\n      // Store volume for when audio becomes available\n      this.volume = Math.max(0, Math.min(1, value));\n      this.lastSuccessfulVolume = this.volume;\n      return;\n    }\n\n    try {\n      // Validate and clamp volume\n      const clampedValue = Math.max(0, Math.min(1, value));\n      this.volume = clampedValue;\n\n      // 【✓】 Only update saved volume if not currently muted and value > 0\n      if (!this._isMuted && clampedValue > 0) {\n        this._savedVolumeBeforeMute = clampedValue;\n        this.lastSuccessfulVolume = clampedValue;\n      }\n\n      // 【✓】 Apply volume to audio instance with error handling\n      this.audio.volume(clampedValue);\n\n      // Notify centralized state manager\n      this.musicStateManager.updateVolume(clampedValue);\n      this.cdr.markForCheck();\n\n      console.log(`[MusicPlayer] Volume set to ${clampedValue}, muted: ${this._isMuted}`);\n    } catch (error) {\n      console.error('[MusicPlayer] Error setting volume:', error);\n      this.handleVolumeError(value);\n    }\n  }\n\n  // 【✓】 Enhanced mute toggle with proper state isolation\n  toggleMute(): void {\n    if (!this.audio) {\n      console.warn('[MusicPlayer] Cannot toggle mute: no audio instance available');\n      return;\n    }\n\n    try {\n      this.hasUserInteracted = true;\n\n      if (!this._muteStateInitialized) {\n        this._savedVolumeBeforeMute = this.volume > 0 ? this.volume : 0.5;\n        this._muteStateInitialized = true;\n      }\n\n      if (this._isMuted) {\n        // 【✓】 Unmute: restore saved volume without calling setVolume to avoid conflicts\n        this._isMuted = false;\n        const volumeToRestore = this._savedVolumeBeforeMute > 0 ? this._savedVolumeBeforeMute : 0.5;\n        this.volume = volumeToRestore;\n        this.audio.volume(volumeToRestore);\n\n        // Notify state manager\n        this.musicStateManager.updateVolume(volumeToRestore);\n\n        console.log(`[MusicPlayer] Unmuted, restored volume to ${volumeToRestore}`);\n      } else {\n        // 【✓】 Mute: save current volume and set audio to 0\n        this._isMuted = true;\n        if (this.volume > 0) {\n          this._savedVolumeBeforeMute = this.volume;\n        }\n\n        // Only change audio volume, keep this.volume for UI display\n        this.audio.volume(0);\n\n        // Notify state manager with 0 volume\n        this.musicStateManager.updateVolume(0);\n\n        console.log(`[MusicPlayer] Muted, saved volume ${this._savedVolumeBeforeMute}`);\n      }\n\n      this.cdr.markForCheck();\n    } catch (error) {\n      console.error('[MusicPlayer] Error toggling mute:', error);\n      this.handleMuteError();\n    }\n  }\n\n  // 【✓】 Seek to position\n  seek(value: number): void {\n    if (!this.audio) return;\n    this.audio.seek(value);\n    this.currentTime = value;\n    this.cdr.markForCheck();\n  }\n\n  // 【✓】 Update subtitle based on filename\n  private updateSubtitleFromFilename(track: string): void {\n    if (track) {\n      const filename = track.split('/').pop() || '';\n      const parts = filename.replace('.mp3', '').split(' - ');\n      if (parts.length > 1) {\n        this.currentSubtitle = parts[0];\n      } else {\n        this.currentSubtitle = '';\n      }\n    }\n  }\n\n  // 【✓】 Update time with proper continuous tracking\n  private updateTime(): void {\n    if (this.audio && this.isPlaying) {\n      const seek = this.audio.seek();\n      this.currentTime = typeof seek === 'number' ? seek : 0;\n      this.updateDynamicArtistTime();\n      this.cdr.markForCheck();\n      requestAnimationFrame(() => this.updateTime());\n    }\n  }\n\n  // 【✓】 Update dynamic artist service with current playback time\n  private updateDynamicArtistTime(): void {\n    if (this.currentTrackInfo) {\n      // Calculate absolute time from track start time + current position\n      const absoluteTime = this.currentTrackInfo.startTime + this.currentTime;\n      this.dynamicArtistService.updateCurrentTime(absoluteTime);\n    }\n  }\n\n  // 【✓】 Next track for Phantasia 2 with proper state synchronization\n  nextTrack(): void {\n    if (this.isLoading || this.allTracks.length === 0) return;\n\n    const wasPlaying = this.isPlaying;\n    const nextIndex = (this.currentTrackIndex + 1) % this.allTracks.length;\n    const nextTrackInfo = this.allTracks[nextIndex];\n\n    if (nextTrackInfo && nextTrackInfo.id !== this.currentTrackInfo?.id) {\n      this.currentTrackInfo = nextTrackInfo;\n      this.currentTrackIndex = nextIndex;\n\n      // Notify dynamic artist service immediately when track changes\n      this.dynamicArtistService.updateCurrentTime(nextTrackInfo.startTime);\n\n      this.loadTrackFromInfo(nextTrackInfo);\n\n      // Auto-play if the previous track was playing\n      if (wasPlaying) {\n        // Wait for track to load before playing\n        const playWhenReady = () => {\n          if (!this.isLoading && this.audio) {\n            this.audio.play();\n          } else if (!this.error) {\n            setTimeout(playWhenReady, 100);\n          }\n        };\n        playWhenReady();\n      }\n    }\n  }\n\n  // 【✓】 Previous track for Phantasia 2 with proper state synchronization\n  previousTrack(): void {\n    if (this.isLoading || this.allTracks.length === 0) return;\n\n    const wasPlaying = this.isPlaying;\n    const prevIndex = this.currentTrackIndex === 0\n      ? this.allTracks.length - 1\n      : this.currentTrackIndex - 1;\n    const prevTrackInfo = this.allTracks[prevIndex];\n\n    if (prevTrackInfo && prevTrackInfo.id !== this.currentTrackInfo?.id) {\n      this.currentTrackInfo = prevTrackInfo;\n      this.currentTrackIndex = prevIndex;\n\n      // Notify dynamic artist service immediately when track changes\n      this.dynamicArtistService.updateCurrentTime(prevTrackInfo.startTime);\n\n      this.loadTrackFromInfo(prevTrackInfo);\n\n      // Auto-play if the previous track was playing\n      if (wasPlaying) {\n        // Wait for track to load before playing\n        const playWhenReady = () => {\n          if (!this.isLoading && this.audio) {\n            this.audio.play();\n          } else if (!this.error) {\n            setTimeout(playWhenReady, 100);\n          }\n        };\n        playWhenReady();\n      }\n    }\n  }\n\n  // 【✓】 Format time with NaN handling\n  formatTime(seconds: number): string {\n    // Handle NaN, undefined, or invalid values\n    if (isNaN(seconds) || !isFinite(seconds) || seconds < 0) {\n      return '0:00';\n    }\n\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = Math.floor(seconds % 60);\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\n  }\n\n  // 【✓】 Get track name for Phantasia 2\n  getTrackName(track?: string): string {\n    // Use current track info if available\n    if (this.currentTrackInfo) {\n      return this.currentTrackInfo.title;\n    }\n\n    // Fallback to input parameters\n    if (this.trackTitle) {\n      return this.trackTitle;\n    }\n\n    // Legacy fallback for old track format\n    if (track) {\n      const parts = track.split('/');\n      const filename = parts[parts.length - 1].replace(/\\.(mp3|ogg)$/, '');\n      const fileParts = filename.split(' - ');\n      if (fileParts.length > 1) {\n        return fileParts[1];\n      }\n      return filename;\n    }\n\n    return 'Unknown Track';\n  }\n\n  // 【✓】 Get artist name for Phantasia 2\n  getArtistName(): string {\n    // Use current track info if available\n    if (this.currentTrackInfo) {\n      return this.currentTrackInfo.mainArtist;\n    }\n\n    // Fallback to input parameters\n    if (this.trackArtist) {\n      return this.trackArtist;\n    }\n\n    // Legacy fallback\n    if (this.currentTrack) {\n      const filename = this.currentTrack.split('/').pop() || '';\n      const parts = filename.replace(/\\.(mp3|ogg)$/, '').split(' - ');\n      if (parts.length > 1) {\n        return parts[0];\n      }\n    }\n\n    return this.currentSubtitle || 'Unknown Artist';\n  }\n\n  // 【✓】 Enhanced cleanup methods for proper resource management\n\n  /**\n   * Clean up current audio instance\n   */\n  private async cleanupCurrentAudio(): Promise<void> {\n    if (this.audio) {\n      try {\n        // Stop playback if playing\n        if (this.isPlaying) {\n          this.audio.pause();\n        }\n\n        // Unload the audio\n        this.audio.unload();\n\n        // Remove from tracking array\n        const index = this.audioInstances.indexOf(this.audio);\n        if (index > -1) {\n          this.audioInstances.splice(index, 1);\n        }\n\n        this.audio = null;\n        console.log('[MusicPlayer] Current audio instance cleaned up');\n      } catch (error) {\n        console.error('[MusicPlayer] Error during audio cleanup:', error);\n      }\n    }\n  }\n\n  /**\n   * Clean up all audio instances\n   */\n  private cleanupAllAudioInstances(): void {\n    try {\n      // Clean up current audio\n      if (this.audio) {\n        this.audio.unload();\n        this.audio = null;\n      }\n\n      // Clean up any tracked instances\n      this.audioInstances.forEach(instance => {\n        try {\n          instance.unload();\n        } catch (error) {\n          console.error('[MusicPlayer] Error unloading audio instance:', error);\n        }\n      });\n\n      this.audioInstances = [];\n      console.log('[MusicPlayer] All audio instances cleaned up');\n    } catch (error) {\n      console.error('[MusicPlayer] Error during comprehensive cleanup:', error);\n    }\n  }\n\n  /**\n   * Handle volume setting errors with recovery\n   */\n  private handleVolumeError(attemptedValue: number): void {\n    console.warn(`[MusicPlayer] Volume error, attempting recovery with value ${attemptedValue}`);\n\n    if (this.retryCount < this.maxRetries) {\n      this.retryCount++;\n\n      // Try to restore last known good volume\n      setTimeout(() => {\n        if (this.audio) {\n          try {\n            this.audio.volume(this.lastSuccessfulVolume);\n            this.volume = this.lastSuccessfulVolume;\n            this.cdr.markForCheck();\n          } catch (retryError) {\n            console.error('[MusicPlayer] Volume recovery failed:', retryError);\n          }\n        }\n      }, 100);\n    } else {\n      this.error = 'Volume control temporarily unavailable';\n      this.cdr.markForCheck();\n    }\n  }\n\n  /**\n   * Handle mute toggle errors with recovery\n   */\n  private handleMuteError(): void {\n    console.warn('[MusicPlayer] Mute toggle error, attempting recovery');\n\n    // Reset mute state to known good state\n    this._isMuted = false;\n    this._muteStateInitialized = false;\n\n    if (this.audio) {\n      try {\n        this.audio.volume(this.lastSuccessfulVolume);\n        this.volume = this.lastSuccessfulVolume;\n      } catch (recoveryError) {\n        console.error('[MusicPlayer] Mute recovery failed:', recoveryError);\n        this.error = 'Mute control temporarily unavailable';\n      }\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Handle track loading errors with detailed logging\n   */\n  private handleTrackLoadError(trackInfo: TrackWithArtists, error: any): void {\n    console.error(`[MusicPlayer] Track loading error for ${trackInfo.title}:`, error);\n\n    this.error = `Failed to load \"${trackInfo.title}\" - ${error.message || error}`;\n    this.isLoading = false;\n    this.isTrackLoading = false;\n    this.lastLoadedTrackId = null;\n\n    // Clean up any partial audio instances\n    this.cleanupCurrentAudio();\n\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Get current mute state (public accessor)\n   */\n  get isMuted(): boolean {\n    return this._isMuted;\n  }\n\n  /**\n   * Get display volume for UI (0 when muted, actual volume when not muted)\n   */\n  get displayVolume(): number {\n    return this._isMuted ? 0 : this.volume;\n  }\n\n  /**\n   * Get saved volume before mute (public accessor)\n   */\n  get savedVolumeBeforeMute(): number {\n    return this._savedVolumeBeforeMute;\n  }\n\n  /**\n   * Debug method to get current state\n   */\n  getDebugState(): any {\n    return {\n      isPlaying: this.isPlaying,\n      isLoading: this.isLoading,\n      isTrackLoading: this.isTrackLoading,\n      isMuted: this._isMuted,\n      volume: this.volume,\n      savedVolumeBeforeMute: this._savedVolumeBeforeMute,\n      currentTrackId: this.currentTrackInfo?.id,\n      audioInstancesCount: this.audioInstances.length,\n      lastLoadedTrackId: this.lastLoadedTrackId,\n      error: this.error,\n      audioContextState: this.audioContext?.state,\n      eventListenersCount: this.eventListeners.length\n    };\n  }\n\n  // 【✓】 Audio context management methods\n\n  /**\n   * Initialize audio context for better audio handling\n   */\n  private initializeAudioContext(): void {\n    try {\n      if (typeof window !== 'undefined' && 'AudioContext' in window) {\n        this.audioContext = new AudioContext();\n        this.isAudioContextInitialized = true;\n        console.log('[MusicPlayer] AudioContext initialized');\n      } else if (typeof window !== 'undefined' && 'webkitAudioContext' in window) {\n        this.audioContext = new (window as any).webkitAudioContext();\n        this.isAudioContextInitialized = true;\n        console.log('[MusicPlayer] WebKit AudioContext initialized');\n      } else {\n        console.warn('[MusicPlayer] AudioContext not supported');\n      }\n    } catch (error) {\n      console.error('[MusicPlayer] Error initializing AudioContext:', error);\n    }\n  }\n\n  /**\n   * Setup global event listeners for audio context management\n   */\n  private setupGlobalEventListeners(): void {\n    if (typeof window === 'undefined') return;\n\n    try {\n      // 【✓】 Resume audio context on user interaction\n      const resumeAudioContext = async () => {\n        if (this.audioContext && this.audioContext.state === 'suspended') {\n          try {\n            await this.audioContext.resume();\n            console.log('[MusicPlayer] AudioContext resumed');\n          } catch (error) {\n            console.error('[MusicPlayer] Error resuming AudioContext:', error);\n          }\n        }\n      };\n\n      // 【✓】 Handle visibility changes to manage audio context\n      const handleVisibilityChange = () => {\n        if (document.hidden) {\n          // Page is hidden, suspend audio context to save resources\n          if (this.audioContext && this.audioContext.state === 'running') {\n            this.audioContext.suspend().catch(error => {\n              console.error('[MusicPlayer] Error suspending AudioContext:', error);\n            });\n          }\n        } else {\n          // Page is visible, resume audio context\n          resumeAudioContext();\n        }\n      };\n\n      // 【✓】 Add event listeners with tracking\n      this.addTrackedEventListener(document, 'click', resumeAudioContext, { passive: true });\n      this.addTrackedEventListener(document, 'keydown', resumeAudioContext, { passive: true });\n      this.addTrackedEventListener(document, 'visibilitychange', handleVisibilityChange, { passive: true });\n\n      console.log('[MusicPlayer] Global event listeners setup completed');\n    } catch (error) {\n      console.error('[MusicPlayer] Error setting up global event listeners:', error);\n    }\n  }\n\n  /**\n   * Add event listener with tracking for cleanup\n   */\n  private addTrackedEventListener(\n    element: any,\n    event: string,\n    handler: EventListener,\n    options?: AddEventListenerOptions\n  ): void {\n    try {\n      element.addEventListener(event, handler, options);\n      this.eventListeners.push({ element, event, handler });\n    } catch (error) {\n      console.error(`[MusicPlayer] Error adding event listener for ${event}:`, error);\n    }\n  }\n\n  /**\n   * Clean up audio context\n   */\n  private cleanupAudioContext(): void {\n    try {\n      if (this.audioContext) {\n        if (this.audioContext.state !== 'closed') {\n          this.audioContext.close().catch(error => {\n            console.error('[MusicPlayer] Error closing AudioContext:', error);\n          });\n        }\n        this.audioContext = null;\n        this.isAudioContextInitialized = false;\n        console.log('[MusicPlayer] AudioContext cleaned up');\n      }\n    } catch (error) {\n      console.error('[MusicPlayer] Error during AudioContext cleanup:', error);\n    }\n  }\n\n  /**\n   * Clean up all event listeners\n   */\n  private cleanupEventListeners(): void {\n    try {\n      this.eventListeners.forEach(({ element, event, handler }) => {\n        try {\n          element.removeEventListener(event, handler);\n        } catch (error) {\n          console.error(`[MusicPlayer] Error removing event listener for ${event}:`, error);\n        }\n      });\n      this.eventListeners = [];\n      console.log('[MusicPlayer] Event listeners cleaned up');\n    } catch (error) {\n      console.error('[MusicPlayer] Error during event listener cleanup:', error);\n    }\n  }\n\n  /**\n   * Ensure audio context is ready for playback\n   */\n  private async ensureAudioContextReady(): Promise<void> {\n    if (!this.audioContext) {\n      this.initializeAudioContext();\n    }\n\n    if (this.audioContext && this.audioContext.state === 'suspended') {\n      try {\n        await this.audioContext.resume();\n        console.log('[MusicPlayer] AudioContext resumed for playback');\n      } catch (error) {\n        console.error('[MusicPlayer] Error resuming AudioContext for playback:', error);\n      }\n    }\n  }\n} ","<div class=\"music-player-container\">\n  <!-- Enhanced Glassmorphism Background -->\n  <div class=\"player-backdrop\"></div>\n  \n  <!-- Main Player Content -->\n  <div class=\"music-player\">\n    <!-- Status Messages Section -->\n    <div class=\"status-section\">\n      <div class=\"error-message\" *ngIf=\"error\">\n        <div class=\"error-icon\">⚠</div>\n        <span>{{error}}</span>\n      </div>\n      \n      <div class=\"loading-indicator\" *ngIf=\"isLoading\">\n        <div class=\"loading-spinner\"></div>\n        <span>Loading audio...</span>\n      </div>\n    </div>\n    \n    <!-- Track Information Section -->\n    <div class=\"track-section\" *ngIf=\"!isLoading\">\n      <!-- Current Track Details -->\n      <div class=\"track-details\" *ngIf=\"currentTrackInfo\">\n        <div class=\"track-info-content\">\n          <h4 class=\"track-title\">{{ currentTrackInfo.title }}</h4>\n          <p class=\"track-artist\">{{ currentTrackInfo.mainArtist }}</p>\n        </div>\n      </div>\n\n      <!-- Legacy track info for backward compatibility -->\n      <div class=\"track-info\" *ngIf=\"!currentTrackInfo && currentTrack\">\n        <div class=\"track-title\">{{ getTrackName(currentTrack) }}</div>\n        <div class=\"track-artist\">{{ getArtistName() }}</div>\n      </div>\n\n      <div class=\"current-subtitle\" *ngIf=\"currentSubtitle && !trackTitle && !currentTrackInfo\">\n        {{ currentSubtitle }}\n      </div>\n    </div>\n\n    <!-- Progress Section -->\n    <div class=\"progress-section\" [class.disabled]=\"isLoading\">\n      <div class=\"time-display\">\n        <span class=\"current-time\">{{formatTime(currentTime)}}</span>\n        <span class=\"duration\">{{formatTime(duration)}}</span>\n      </div>\n      \n      <div class=\"progress-container\">\n        <div class=\"progress-track\">\n          <div class=\"progress-fill\" [style.width.%]=\"(currentTime / duration) * 100\"></div>\n          <input \n            type=\"range\" \n            [min]=\"0\" \n            [max]=\"duration\" \n            [step]=\"0.01\"\n            [value]=\"currentTime\"\n            (input)=\"seek($any($event.target).value)\"\n            class=\"progress-slider\"\n            [disabled]=\"isLoading\"\n            aria-label=\"Seek\"\n          >\n        </div>\n      </div>\n    </div>\n    \n    <!-- Controls Section -->\n    <div class=\"controls-section\" [class.disabled]=\"isLoading\">\n      <!-- Volume Control -->\n      <div class=\"volume-section\">\n        <div class=\"volume-icon-container\" (click)=\"toggleMute()\">\n          <img\n            class=\"volume-icon\"\n            [src]=\"isMuted ? 'assets/icons/music-player/volume-mute.svg' : 'assets/icons/music-player/volume.svg'\"\n            alt=\"Volume\"\n            [class.muted]=\"isMuted\"\n          >\n        </div>\n        <div class=\"volume-control\">\n          <div class=\"volume-track\">\n            <div class=\"volume-fill\" [style.width.%]=\"displayVolume * 100\"></div>\n            <input \n              type=\"range\" \n              [min]=\"0\" \n              [max]=\"1\" \n              [step]=\"0.01\"\n              [value]=\"displayVolume\"\n              (input)=\"setVolume($any($event.target).value)\"\n              class=\"volume-slider\"\n              [disabled]=\"isLoading\"\n              aria-label=\"Volume\"\n            >\n          </div>\n        </div>\n      </div>\n\n      <!-- Playback Controls -->\n      <div class=\"playback-controls\">\n        <button \n          class=\"control-button previous-button\" \n          (click)=\"previousTrack()\" \n          [disabled]=\"isLoading\" \n          aria-label=\"Previous track\"\n        >\n          <img \n            class=\"control-icon\" \n            src=\"assets/icons/music-player/skip-back.svg\" \n            alt=\"Previous\"\n          >\n        </button>\n        \n        <button \n          class=\"control-button play-pause-button\" \n          (click)=\"togglePlay()\"\n          [class.playing]=\"isPlaying\"\n          [disabled]=\"isLoading\"\n          [attr.aria-label]=\"isPlaying ? 'Pause' : 'Play'\"\n        >\n          <img \n            class=\"control-icon\" \n            [src]=\"isPlaying ? 'assets/icons/music-player/pause.svg' : 'assets/icons/music-player/play.svg'\" \n            [alt]=\"isPlaying ? 'Pause' : 'Play'\"\n          >\n        </button>\n        \n        <button \n          class=\"control-button next-button\" \n          (click)=\"nextTrack()\" \n          [disabled]=\"isLoading\" \n          aria-label=\"Next track\"\n        >\n          <img \n            class=\"control-icon\" \n            src=\"assets/icons/music-player/skip-forward.svg\" \n            alt=\"Next\"\n          >\n        </button>\n      </div>\n    </div>\n  </div>\n</div> ","import { Injectable, OnDestroy } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, Subject, from } from 'rxjs';\nimport { catchError, map, takeUntil } from 'rxjs/operators';\nimport { Howl } from 'howler';\n\n// 【✓】 Define interfaces for type safety\ninterface Track {\n  readonly title: string;\n  readonly artist: string;\n  readonly id: string;\n  readonly url: string;\n}\n\ninterface AudioState {\n  readonly isPlaying: boolean;\n  readonly currentTrack: Track | null;\n  readonly volume: number;\n  readonly progress: number;\n  readonly loading: boolean;\n}\n\n// 【✓】 Define section types for better type checks\ntype Section = 'introduction' | 'disc-1' | 'disc-2' | 'pv' | 'information';\n\n// 【✓】 Define error types\ntype AudioError = 'LOAD_ERROR' | 'PLAY_ERROR' | 'PAUSE_ERROR' | 'NETWORK_ERROR' | 'UI_SOUND_ERROR';\n\n// 【✓】 Define UI sound types for better autocomplete and error prevention\ntype UISound = 'menu-click' | 'page-turn' | 'success' | 'error';\n\n// 【✓】 Define track events for event emitting system\ntype TrackEvent = 'play' | 'pause' | 'ended' | 'timeupdate' | 'error' | 'loading' | 'loaded';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AudioService implements OnDestroy {\n  private readonly destroy$ = new Subject<void>();\n  private readonly isDebugMode = true;\n  private audio: HTMLAudioElement | null = null;\n  private currentTrack: Track | null = null;\n  private _isPlaying = false;\n  private volume = 1;\n  private progress = 0;\n  private isLoading = false;\n\n  // 【✓】 Track configurations with proper typing\n  private readonly TRACKS: Record<Section, Track> = {\n    'introduction': {\n      title: 'Introduction',\n      artist: 'An',\n      id: 'intro',\n      url: 'assets/audio/An - Incident.mp3'\n    },\n    'disc-1': {\n      title: 'I can avoid it',\n      artist: 'Feryquitous',\n      id: 'disc1',\n      url: 'assets/audio/Feryquitous - i can avoid it.mp3'\n    },\n    'disc-2': {\n      title: 'Quantum Resonance',\n      artist: 'An',\n      id: 'disc2',\n      url: 'assets/audio/An - Quantum Resonance.mp3'\n    },\n    'pv': {\n      title: 'Neural Network',\n      artist: 'Feryquitous',\n      id: 'pv',\n      url: 'assets/audio/Feryquitous - Neural Network.mp3'\n    },\n    'information': {\n      title: 'Digital Entropy',\n      artist: 'An × Feryquitous',\n      id: 'info',\n      url: 'assets/audio/An × Feryquitous - Digital Entropy.mp3'\n    }\n  };\n\n  // 【✓】 Audio state subject with proper typing\n  private readonly audioStateSubject = new BehaviorSubject<AudioState>({\n    isPlaying: false,\n    currentTrack: null,\n    volume: 1,\n    progress: 0,\n    loading: false\n  });\n\n  // 【✓】 Audio events subject to group all events\n  private readonly audioEventSubject = new BehaviorSubject<{ type: TrackEvent, data?: any }>({\n    type: 'pause'\n  });\n\n  // 【✓】 Error subject with proper typing\n  private readonly errorSubject = new Subject<{ type: AudioError; message: string }>();\n\n  // 【✓】 Track subject for sharing current track\n  private readonly currentTrackSubject = new BehaviorSubject<string>('');\n  readonly currentTrack$ = this.currentTrackSubject.asObservable();\n  \n  // 【✓】 Audio files with proper initialization\n  private readonly audioFiles: string[] = [];\n  \n  // 【✓】 Section tracks mapping with proper typing\n  private readonly sectionTracks: Record<Section, string> = {\n    'introduction': 'An - Incident.mp3',\n    'disc-1': 'Feryquitous - i can avoid it.mp3',\n    'disc-2': 'An - Quantum Resonance.mp3',\n    'pv': 'Feryquitous - Neural Network.mp3',\n    'information': 'An × Feryquitous - Digital Entropy.mp3'\n  };\n\n  // 【✓】 UI sound paths with proper typing\n  private readonly uiSounds: Record<UISound, string> = {\n    'menu-click': 'assets/audio/ui/menu-click.mp3',\n    'page-turn': 'assets/audio/ui/page-turn.mp3',\n    'success': 'assets/audio/ui/success.mp3',\n    'error': 'assets/audio/ui/error.mp3'\n  };\n\n  constructor(private readonly http: HttpClient) {\n    this.loadAudioFiles();\n    this.initializeAudio();\n    if (this.isDebugMode) {\n      console.log('[AudioService] Initialized');\n    }\n  }\n\n  // 【✓】 Load audio files with proper typing and error handling\n  private async loadAudioFiles(): Promise<void> {\n    try {\n      // Populate audio files array from section tracks\n      this.audioFiles.push(...Object.values(this.sectionTracks).map(file => `assets/audio/${file}`));\n      \n      // Set initial track\n      if (this.audioFiles.length > 0) {\n        this.currentTrackSubject.next(this.audioFiles[0]);\n      }\n      \n      if (this.isDebugMode) {\n        console.log('[AudioService] Audio files loaded:', this.audioFiles);\n      }\n    } catch (error: unknown) {\n      this.handleError('LOAD_ERROR', `Failed to load audio files: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n\n  // 【✓】 Initialize audio element\n  private initializeAudio(): void {\n    this.audio = new Audio();\n    this.setupAudioEventListeners();\n  }\n\n  // 【✓】 Setup audio event listeners with improved error handling\n  private setupAudioEventListeners(): void {\n    if (!this.audio) {\n      this.handleError('LOAD_ERROR', 'Audio element not initialized');\n      return;\n    }\n\n    // Time update event for tracking progress\n    this.audio.addEventListener('timeupdate', () => {\n      if (this.audio) {\n        this.progress = this.audio.duration ? (this.audio.currentTime / this.audio.duration) * 100 : 0;\n        this.updateAudioState();\n        this.audioEventSubject.next({ type: 'timeupdate', data: this.progress });\n      }\n    });\n\n    // Track ended event\n    this.audio.addEventListener('ended', () => {\n      this._isPlaying = false;\n      this.updateAudioState();\n      this.audioEventSubject.next({ type: 'ended' });\n    });\n\n    // Error handling\n    this.audio.addEventListener('error', (event) => {\n      const error = event as ErrorEvent;\n      this.handleError('LOAD_ERROR', `Failed to load audio: ${error.message || 'Unknown error'}`);\n      this.audioEventSubject.next({ type: 'error', data: error.message });\n    });\n\n    // Loading events\n    this.audio.addEventListener('loadstart', () => {\n      this.isLoading = true;\n      this.updateAudioState();\n      this.audioEventSubject.next({ type: 'loading' });\n    });\n\n    this.audio.addEventListener('canplay', () => {\n      this.isLoading = false;\n      this.updateAudioState();\n      this.audioEventSubject.next({ type: 'loaded' });\n    });\n\n    // Play event\n    this.audio.addEventListener('play', () => {\n      this._isPlaying = true;\n      this.updateAudioState();\n      this.audioEventSubject.next({ type: 'play' });\n    });\n\n    // Pause event\n    this.audio.addEventListener('pause', () => {\n      this._isPlaying = false;\n      this.updateAudioState();\n      this.audioEventSubject.next({ type: 'pause' });\n    });\n  }\n\n  // 【✓】 Update audio state with loading information\n  private updateAudioState(): void {\n    this.audioStateSubject.next({\n      isPlaying: this._isPlaying,\n      currentTrack: this.currentTrack,\n      volume: this.volume,\n      progress: this.progress,\n      loading: this.isLoading\n    });\n  }\n\n  // 【✓】 Handle errors with better context\n  private handleError(type: AudioError, message: string): void {\n    if (this.isDebugMode) {\n      console.error(`[AudioService] ${type}: ${message}`);\n    }\n    this.errorSubject.next({ type, message });\n  }\n\n  // 【✓】 Set track for section with better type safety\n  setTrackForSection(section: Section): void {\n    const track = this.TRACKS[section];\n    if (!track) {\n      this.handleError('LOAD_ERROR', `No track found for section: ${section}`);\n      return;\n    }\n\n    if (this.currentTrack?.id === track.id) {\n      return;\n    }\n\n    if (this.isDebugMode) {\n      console.log(`[AudioService] Setting track for section: ${section}`, track);\n    }\n\n    this.currentTrack = track;\n    this.loadTrack(track);\n    this.currentTrackSubject.next(track.url);\n  }\n\n  // 【✓】 Load track with better error handling\n  private loadTrack(track: Track): void {\n    if (!this.audio) {\n      this.handleError('LOAD_ERROR', 'Audio element not initialized');\n      return;\n    }\n\n    this.isLoading = true;\n    this.updateAudioState();\n    this.audio.src = track.url;\n    \n    try {\n      this.audio.load();\n    } catch (error: unknown) {\n      this.handleError('LOAD_ERROR', `Failed to load track: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n\n  // 【✓】 Play audio with better error handling\n  play(): void {\n    if (!this.audio) {\n      this.handleError('PLAY_ERROR', 'Audio element not initialized');\n      return;\n    }\n\n    if (!this.currentTrack) {\n      this.handleError('PLAY_ERROR', 'No track selected');\n      return;\n    }\n\n    if (this.isDebugMode) {\n      console.log('[AudioService] Playing audio:', this.currentTrack.title);\n    }\n\n    this.audio.play()\n      .then(() => {\n        this._isPlaying = true;\n        this.updateAudioState();\n      })\n      .catch((error: unknown) => {\n        this.handleError('PLAY_ERROR', `Failed to play audio: ${error instanceof Error ? error.message : String(error)}`);\n      });\n  }\n\n  // 【✓】 Pause audio with better error handling\n  pause(): void {\n    if (!this.audio) {\n      this.handleError('PAUSE_ERROR', 'Audio element not initialized');\n      return;\n    }\n\n    if (this.isDebugMode) {\n      console.log('[AudioService] Pausing audio');\n    }\n\n    this.audio.pause();\n    this._isPlaying = false;\n    this.updateAudioState();\n  }\n\n  // 【✓】 Toggle play/pause with better error handling\n  togglePlay(): void {\n    if (this._isPlaying) {\n      this.pause();\n    } else {\n      this.play();\n    }\n  }\n\n  // 【✓】 Set volume with better validation\n  setVolume(value: number): void {\n    if (!this.audio) {\n      this.handleError('PAUSE_ERROR', 'Audio element not initialized');\n      return;\n    }\n\n    this.volume = Math.max(0, Math.min(1, value));\n    this.audio.volume = this.volume;\n    this.updateAudioState();\n    \n    if (this.isDebugMode) {\n      console.log(`[AudioService] Volume set to: ${this.volume}`);\n    }\n  }\n\n  // 【✓】 Get current state\n  getCurrentState(): Observable<AudioState> {\n    return this.audioStateSubject.asObservable();\n  }\n\n  // 【✓】 Get audio events for more granular control\n  getAudioEvents(): Observable<{ type: TrackEvent, data?: any }> {\n    return this.audioEventSubject.asObservable();\n  }\n\n  // 【✓】 Get play state changes for simpler integration\n  onPlayStateChange(): Observable<boolean> {\n    return this.getCurrentState().pipe(\n      map(state => state.isPlaying)\n    );\n  }\n\n  // 【✓】 Get track changes for simpler integration\n  onTrackChange(): Observable<string> {\n    return this.currentTrack$;\n  }\n\n  // 【✓】 Get loading state changes for UI feedback\n  onLoadingStateChange(): Observable<boolean> {\n    return this.getCurrentState().pipe(\n      map(state => state.loading)\n    );\n  }\n\n  // 【✓】 Get current progress for seeking and UI\n  getProgress(): number {\n    if (!this.audio || !this.audio.duration) return 0;\n    return this.audio.currentTime / this.audio.duration;\n  }\n\n  // 【✓】 Get errors stream\n  getErrors(): Observable<{ type: AudioError; message: string }> {\n    return this.errorSubject.asObservable();\n  }\n\n  // 【✓】 Get currently playing status\n  isPlaying(): boolean {\n    return this._isPlaying;\n  }\n\n  // 【✓】 Get current track for UI display\n  getCurrentTrack(): string | null {\n    return this.currentTrackSubject.value;\n  }\n\n  // 【✓】 Get next track with better error handling\n  getNextTrack(): string | null {\n    const currentIndex = this.audioFiles.indexOf(this.currentTrackSubject.value);\n    if (currentIndex < this.audioFiles.length - 1) {\n      const nextTrack = this.audioFiles[currentIndex + 1];\n      this.currentTrackSubject.next(nextTrack);\n      return nextTrack;\n    }\n    return null;\n  }\n\n  // 【✓】 Get previous track with better error handling\n  getPreviousTrack(): string | null {\n    const currentIndex = this.audioFiles.indexOf(this.currentTrackSubject.value);\n    if (currentIndex > 0) {\n      const previousTrack = this.audioFiles[currentIndex - 1];\n      this.currentTrackSubject.next(previousTrack);\n      return previousTrack;\n    }\n    return null;\n  }\n\n  // 【✓】 Get track list for UI display\n  getTrackList(): readonly string[] {\n    return this.audioFiles;\n  }\n\n  // 【✓】 Get current index for UI highlight\n  getCurrentIndex(): number {\n    return this.audioFiles.indexOf(this.currentTrackSubject.value);\n  }\n\n  // 【✓】 Play UI sound effects with better type safety and error handling\n  playUISound(soundName: UISound): void {\n    if (!this.uiSounds[soundName]) {\n      this.handleError('UI_SOUND_ERROR', `UI sound not found: ${soundName}`);\n      return;\n    }\n    \n    try {\n      const sound = new Audio(this.uiSounds[soundName]);\n      sound.volume = 0.5;\n      sound.play()\n        .catch((error: unknown) => {\n          this.handleError('UI_SOUND_ERROR', `Error playing UI sound: ${error instanceof Error ? error.message : String(error)}`);\n        });\n    } catch (error: unknown) {\n      this.handleError('UI_SOUND_ERROR', `Failed to create UI sound: ${error instanceof Error ? error.message : String(error)}`);\n    }\n  }\n\n  // 【✓】 Play a track from source URL with better validation\n  playTrack(src: string): void {\n    if (!this.audio) {\n      this.handleError('PLAY_ERROR', 'Audio element not initialized');\n      return;\n    }\n    \n    if (this.isDebugMode) {\n      console.log(`[AudioService] Playing track from source: ${src}`);\n    }\n    \n    // Update current track and start playing\n    this.currentTrackSubject.next(src);\n    this.isLoading = true;\n    this.updateAudioState();\n    \n    this.audio.src = src;\n    \n    // Try to play the track with error handling\n    this.audio.play()\n      .then(() => {\n        this._isPlaying = true;\n        this.updateAudioState();\n      })\n      .catch((error: unknown) => {\n        this.handleError('PLAY_ERROR', `Error playing track: ${error instanceof Error ? error.message : String(error)}`);\n      });\n  }\n\n  // 【✓】 Pause the current track (alias for pause() for better API)\n  pauseTrack(): void {\n    this.pause();\n  }\n\n  // 【✓】 Resume the paused track (alias for play() for better API)\n  resumeTrack(): void {\n    this.play();\n  }\n\n  // 【✓】 Cleanup resources properly\n  ngOnDestroy(): void {\n    if (this.isDebugMode) {\n      console.log('[AudioService] Destroying service');\n    }\n    \n    if (this.audio) {\n      // Remove all event listeners to prevent memory leaks\n      this.audio.onended = null;\n      this.audio.ontimeupdate = null;\n      this.audio.onerror = null;\n      this.audio.oncanplay = null;\n      this.audio.onloadstart = null;\n      \n      // Stop playback and clear source\n      this.audio.pause();\n      this.audio.src = '';\n      this.audio = null;\n    }\n    \n    // Complete all subjects\n    this.audioStateSubject.complete();\n    this.audioEventSubject.complete();\n    this.currentTrackSubject.complete();\n    this.errorSubject.complete();\n    \n    // Signal completion to any active subscriptions\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n} ","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, combineLatest, Subject } from 'rxjs';\nimport { map, takeUntil, distinctUntilChanged, debounceTime, shareReplay } from 'rxjs/operators';\nimport { DynamicArtistService, TrackWithArtists } from '../pages/collections/phantasia/services/dynamic-artist.service';\nimport { AudioService, AudioState } from '../pages/collections/phantasia/services/audio.service';\nimport { ArtistCreditService, TrackWithCompleteCredits, ArtistContribution } from './artist-credit.service';\n\n/**\n * Interface for unified music state\n */\nexport interface MusicState {\n  readonly isPlaying: boolean;\n  readonly currentTrack: TrackWithArtists | null;\n  readonly currentTrackCredits: TrackWithCompleteCredits | null;\n  readonly currentTime: number;\n  readonly duration: number;\n  readonly volume: number;\n  readonly trackProgress: number; // 0-1\n  readonly playbackMode: 'phantasia2' | 'legacy' | 'idle';\n}\n\n/**\n * Interface for artist filtering state\n */\nexport interface ArtistFilteringState {\n  readonly mode: 'no-music' | 'music-playing';\n  readonly currentArtists: ArtistContribution[];\n  readonly allArtists: ArtistContribution[];\n  readonly displayTitle: string;\n  readonly displaySubtitle: string;\n}\n\n/**\n * Centralized Music State Manager Service\n *\n * Unifies all music-related state management across the application.\n * Provides a single source of truth for:\n * - Current playing track\n * - Artist filtering states\n * - Music player communication\n * - Dynamic artist updates\n *\n * This service coordinates between:\n * - DynamicArtistService (Phantasia 2 tracks)\n * - AudioService (legacy audio)\n * - ArtistCreditService (artist data)\n * - Music Player Component\n * - Dynamic Artist Cards Component\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusicStateManagerService implements OnDestroy {\n  private readonly destroy$ = new Subject<void>();\n\n  // Core state subjects\n  private readonly musicStateSubject = new BehaviorSubject<MusicState>({\n    isPlaying: false,\n    currentTrack: null,\n    currentTrackCredits: null,\n    currentTime: 0,\n    duration: 0,\n    volume: 0.5,\n    trackProgress: 0,\n    playbackMode: 'idle'\n  });\n\n  private readonly artistFilteringStateSubject = new BehaviorSubject<ArtistFilteringState>({\n    mode: 'no-music',\n    currentArtists: [],\n    allArtists: [],\n    displayTitle: 'All Phantasia 2 Artists',\n    displaySubtitle: 'Showcasing 31 of 31 artists from the album'\n  });\n\n  // Public observables\n  public readonly musicState$ = this.musicStateSubject.asObservable();\n  public readonly artistFilteringState$ = this.artistFilteringStateSubject.asObservable();\n\n  // Optimized combined observables\n  public readonly currentArtistsForFiltering$: Observable<ArtistContribution[]> =\n    this.artistFilteringState$.pipe(\n      map(state => state.currentArtists),\n      distinctUntilChanged((prev, curr) => this.compareArtistArrays(prev, curr)),\n      shareReplay(1),\n      takeUntil(this.destroy$)\n    );\n\n  public readonly displayInfo$ = this.artistFilteringState$.pipe(\n    map(state => ({\n      title: state.displayTitle,\n      subtitle: state.displaySubtitle,\n      mode: state.mode\n    })),\n    distinctUntilChanged((prev, curr) =>\n      prev.title === curr.title &&\n      prev.subtitle === curr.subtitle &&\n      prev.mode === curr.mode\n    ),\n    shareReplay(1),\n    takeUntil(this.destroy$)\n  );\n\n  // 【✓】 Enhanced subscription management to prevent leaks\n  private readonly subscriptions: { [key: string]: any } = {};\n  private readonly stateUpdateQueue: Array<() => void> = [];\n  private isProcessingQueue = false;\n\n  constructor(\n    private dynamicArtistService: DynamicArtistService,\n    private audioService: AudioService,\n    private artistCreditService: ArtistCreditService\n  ) {\n    this.initializeService();\n  }\n\n  ngOnDestroy(): void {\n    try {\n      // 【✓】 Enhanced cleanup with subscription tracking\n      console.log('[MusicStateManager] Starting cleanup...');\n\n      // Cancel any pending state updates\n      this.stateUpdateQueue.length = 0;\n      this.isProcessingQueue = false;\n\n      // Explicitly unsubscribe from tracked subscriptions\n      Object.keys(this.subscriptions).forEach(key => {\n        try {\n          if (this.subscriptions[key] && typeof this.subscriptions[key].unsubscribe === 'function') {\n            this.subscriptions[key].unsubscribe();\n          }\n        } catch (error) {\n          console.error(`[MusicStateManager] Error unsubscribing from ${key}:`, error);\n        }\n      });\n\n      // Signal destruction to all subscriptions\n      this.destroy$.next();\n      this.destroy$.complete();\n\n      console.log('[MusicStateManager] Cleanup completed');\n    } catch (error) {\n      console.error('[MusicStateManager] Error during cleanup:', error);\n    }\n  }\n\n  /**\n   * 【✓】 Enhanced service initialization with proper subscription management\n   */\n  private initializeService(): void {\n    try {\n      console.log('[MusicStateManager] Initializing service...');\n\n      // Initialize with all artists for showcase mode\n      this.loadAllArtistsForShowcase();\n\n      // 【✓】 Primary: Monitor DynamicArtistService for Phantasia 2 track changes with error handling\n      this.subscriptions['currentTrack'] = this.dynamicArtistService.currentTrack$.pipe(\n        distinctUntilChanged((prev, curr) => prev?.id === curr?.id),\n        takeUntil(this.destroy$)\n      ).subscribe({\n        next: (currentTrack) => this.queueStateUpdate(() => this.handleTrackChange(currentTrack, 'phantasia2')),\n        error: (error) => console.error('[MusicStateManager] Error in currentTrack subscription:', error)\n      });\n\n      // 【✓】 Monitor current time updates with throttling and error handling\n      this.subscriptions['currentTime'] = this.dynamicArtistService.currentTime$.pipe(\n        debounceTime(50), // Faster response, better throttling\n        distinctUntilChanged(),\n        takeUntil(this.destroy$)\n      ).subscribe({\n        next: (currentTime) => this.queueStateUpdate(() => this.updateCurrentTime(currentTime)),\n        error: (error) => console.error('[MusicStateManager] Error in currentTime subscription:', error)\n      });\n\n      // 【✓】 Fallback: Monitor legacy AudioService with enhanced error handling\n      this.subscriptions['audioState'] = this.audioService.audioState$.pipe(\n        distinctUntilChanged((prev, curr) =>\n          prev.currentTrack === curr.currentTrack &&\n          prev.isPlaying === curr.isPlaying\n        ),\n        takeUntil(this.destroy$)\n      ).subscribe({\n        next: (audioState) => {\n          // Only use if no Phantasia 2 track is active\n          const currentMusicState = this.musicStateSubject.value;\n          if (!currentMusicState.currentTrack || currentMusicState.playbackMode !== 'phantasia2') {\n            this.queueStateUpdate(() => this.handleAudioStateChange(audioState));\n          }\n        },\n        error: (error) => console.error('[MusicStateManager] Error in audioState subscription:', error)\n      });\n\n      // 【✓】 Monitor artist credits with error handling\n      this.subscriptions['trackCredits'] = this.artistCreditService.currentTrackCredits$.pipe(\n        takeUntil(this.destroy$)\n      ).subscribe({\n        next: (trackCredits) => this.queueStateUpdate(() => this.updateTrackCredits(trackCredits)),\n        error: (error) => console.error('[MusicStateManager] Error in trackCredits subscription:', error)\n      });\n\n      console.log('[MusicStateManager] Service initialized with enhanced error handling');\n    } catch (error) {\n      console.error('[MusicStateManager] Error during initialization:', error);\n    }\n  }\n\n  /**\n   * 【✓】 Enhanced track change handling with error recovery\n   */\n  private handleTrackChange(track: TrackWithArtists | null, mode: 'phantasia2' | 'legacy'): void {\n    try {\n      const currentState = this.musicStateSubject.value;\n\n      // 【✓】 Prevent unnecessary updates if track hasn't actually changed\n      if (track && currentState.currentTrack?.id === track.id) {\n        console.log(`[MusicStateManager] Track ${track.id} already active, skipping update`);\n        return;\n      }\n\n      if (track) {\n        // Get complete credits for the track with error handling\n        let trackCredits: any = null;\n        try {\n          trackCredits = this.artistCreditService.getTrackCredits(track.id);\n        } catch (error) {\n          console.warn(`[MusicStateManager] Could not get credits for track ${track.id}:`, error);\n        }\n\n        // Extract artists from track with fallback\n        const trackArtists = this.extractArtistsFromTrack(track, trackCredits);\n\n        // 【✓】 Update music state with validation\n        const newMusicState: MusicState = {\n          ...currentState,\n          currentTrack: track,\n          currentTrackCredits: trackCredits,\n          playbackMode: mode\n        };\n\n        // Validate state before updating\n        if (this.validateMusicState(newMusicState)) {\n          this.musicStateSubject.next(newMusicState);\n        } else {\n          console.error('[MusicStateManager] Invalid music state, skipping update');\n          return;\n        }\n\n        // 【✓】 Update artist filtering state with validation\n        const allArtists = this.artistFilteringStateSubject.value.allArtists;\n        const newFilteringState: ArtistFilteringState = {\n          mode: 'music-playing',\n          currentArtists: trackArtists,\n          allArtists,\n          displayTitle: 'Currently Playing Artists',\n          displaySubtitle: `Artists for \"${track.title}\" - ${trackArtists.length} artists are currently featured`\n        };\n\n        if (this.validateArtistFilteringState(newFilteringState)) {\n          this.artistFilteringStateSubject.next(newFilteringState);\n        }\n\n        console.log(`[MusicStateManager] Track changed to: \"${track.title}\" with ${trackArtists.length} artists`);\n      } else {\n        // No track playing - switch to no-music mode\n        this.switchToNoMusicMode();\n      }\n    } catch (error) {\n      console.error('[MusicStateManager] Error handling track change:', error);\n      // Attempt recovery by switching to no-music mode\n      this.switchToNoMusicMode();\n    }\n  }\n\n  /**\n   * Handle legacy audio state changes\n   */\n  private handleAudioStateChange(audioState: AudioState): void {\n    const currentState = this.musicStateSubject.value;\n\n    if (audioState.isPlaying && audioState.currentTrack) {\n      // Try to get track info from legacy system\n      const trackCredits = this.artistCreditService.getTrackCredits(audioState.currentTrack);\n\n      const newMusicState: MusicState = {\n        ...currentState,\n        isPlaying: audioState.isPlaying,\n        currentTime: audioState.currentTime,\n        duration: audioState.duration,\n        volume: audioState.volume,\n        trackProgress: audioState.duration > 0 ? audioState.currentTime / audioState.duration : 0,\n        playbackMode: 'legacy',\n        currentTrackCredits: trackCredits\n      };\n      this.musicStateSubject.next(newMusicState);\n\n      // Update artist filtering if we have track credits\n      if (trackCredits) {\n        const newFilteringState: ArtistFilteringState = {\n          mode: 'music-playing',\n          currentArtists: trackCredits.allContributions,\n          allArtists: this.artistFilteringStateSubject.value.allArtists,\n          displayTitle: 'Currently Playing Artists',\n          displaySubtitle: `Artists for \"${trackCredits.title}\" - ${trackCredits.allContributions.length} artists are currently featured`\n        };\n        this.artistFilteringStateSubject.next(newFilteringState);\n      }\n    } else {\n      // Not playing - switch to no-music mode\n      this.switchToNoMusicMode();\n    }\n  }\n\n  /**\n   * Switch to no-music mode (showcase all artists)\n   */\n  private switchToNoMusicMode(): void {\n    const currentState = this.musicStateSubject.value;\n    const allArtists = this.artistFilteringStateSubject.value.allArtists;\n\n    // Update music state\n    const newMusicState: MusicState = {\n      ...currentState,\n      isPlaying: false,\n      currentTrack: null,\n      currentTrackCredits: null,\n      playbackMode: 'idle'\n    };\n    this.musicStateSubject.next(newMusicState);\n\n    // Update artist filtering state to no-music mode\n    const newFilteringState: ArtistFilteringState = {\n      mode: 'no-music',\n      currentArtists: [],\n      allArtists,\n      displayTitle: 'All Phantasia 2 Artists',\n      displaySubtitle: `Showcasing ${allArtists.length} of 31 artists from the album`\n    };\n    this.artistFilteringStateSubject.next(newFilteringState);\n\n    console.log('[MusicStateManager] Switched to no-music mode - showing all artists');\n  }\n\n  /**\n   * Update current playback time\n   */\n  private updateCurrentTime(currentTime: number): void {\n    const currentState = this.musicStateSubject.value;\n\n    const newMusicState: MusicState = {\n      ...currentState,\n      currentTime,\n      trackProgress: currentState.duration > 0 ? currentTime / currentState.duration : 0\n    };\n    this.musicStateSubject.next(newMusicState);\n  }\n\n  /**\n   * Update track credits information\n   */\n  private updateTrackCredits(trackCredits: TrackWithCompleteCredits | null): void {\n    const currentState = this.musicStateSubject.value;\n\n    const newMusicState: MusicState = {\n      ...currentState,\n      currentTrackCredits: trackCredits\n    };\n    this.musicStateSubject.next(newMusicState);\n\n    // Update artist filtering if track credits are available\n    if (trackCredits && currentState.currentTrack) {\n      const currentFilteringState = this.artistFilteringStateSubject.value;\n\n      const newFilteringState: ArtistFilteringState = {\n        ...currentFilteringState,\n        currentArtists: trackCredits.allContributions,\n        displaySubtitle: `Artists for \"${trackCredits.title}\" - ${trackCredits.allContributions.length} artists are currently featured`\n      };\n      this.artistFilteringStateSubject.next(newFilteringState);\n    }\n  }\n\n  /**\n   * Extract artists from track and credits\n   */\n  private extractArtistsFromTrack(\n    track: TrackWithArtists,\n    trackCredits: TrackWithCompleteCredits | null\n  ): ArtistContribution[] {\n    if (trackCredits) {\n      // Use complete credits if available\n      return trackCredits.allContributions;\n    }\n\n    // Fallback: create artists from track data\n    const artists: ArtistContribution[] = [];\n\n    // Add main artist\n    if (track.mainArtist) {\n      artists.push({\n        id: `${track.id}-main`,\n        artistName: track.mainArtist,\n        artistDisplayName: track.mainArtist,\n        role: 'Main Artist' as any,\n        participationType: 'primary' as any,\n        percentageContribution: 100,\n        color: '#FF6B6B',\n        socialLinks: {}\n      });\n    }\n\n    // Add featured artists\n    track.features?.forEach((feature, index) => {\n      artists.push({\n        id: `${track.id}-featured-${index}`,\n        artistName: feature.name,\n        artistDisplayName: feature.displayName || feature.name,\n        role: 'Featured Artist' as any,\n        participationType: 'featured' as any,\n        percentageContribution: 50,\n        color: '#ffffff',\n        socialLinks: feature.socialLinks\n      });\n    });\n\n    // Add collaborators\n    track.collaborators?.forEach((collaborator, index) => {\n      artists.push({\n        id: `${track.id}-collab-${index}`,\n        artistName: collaborator.name,\n        artistDisplayName: collaborator.displayName || collaborator.name,\n        role: collaborator.role as any || 'Collaborator' as any,\n        participationType: 'collaboration' as any,\n        percentageContribution: 25,\n        color: '#45B7D1',\n        socialLinks: collaborator.socialLinks\n      });\n    });\n\n    return artists;\n  }\n\n  /**\n   * Load all artists for showcase mode\n   */\n  private loadAllArtistsForShowcase(): void {\n    const allArtists = this.artistCreditService.getAllPhantasia2Artists();\n\n    const currentFilteringState = this.artistFilteringStateSubject.value;\n    const newFilteringState: ArtistFilteringState = {\n      ...currentFilteringState,\n      allArtists,\n      displaySubtitle: `Showcasing ${allArtists.length} of 31 artists from the album`\n    };\n    this.artistFilteringStateSubject.next(newFilteringState);\n  }\n\n  /**\n   * Public API: Force switch to no-music mode\n   */\n  public forceNoMusicMode(): void {\n    this.switchToNoMusicMode();\n  }\n\n  /**\n   * Public API: Get current music state\n   */\n  public getCurrentMusicState(): MusicState {\n    return this.musicStateSubject.value;\n  }\n\n  /**\n   * Public API: Get current artist filtering state\n   */\n  public getCurrentArtistFilteringState(): ArtistFilteringState {\n    return this.artistFilteringStateSubject.value;\n  }\n\n  /**\n   * Public API: Manually set playing state\n   */\n  public setPlayingState(isPlaying: boolean): void {\n    const currentState = this.musicStateSubject.value;\n\n    const newMusicState: MusicState = {\n      ...currentState,\n      isPlaying\n    };\n    this.musicStateSubject.next(newMusicState);\n  }\n\n  /**\n   * Public API: Update volume\n   */\n  public updateVolume(volume: number): void {\n    const currentState = this.musicStateSubject.value;\n\n    const newMusicState: MusicState = {\n      ...currentState,\n      volume\n    };\n    this.musicStateSubject.next(newMusicState);\n  }\n\n  /**\n   * Public API: Update duration\n   */\n  public updateDuration(duration: number): void {\n    const currentState = this.musicStateSubject.value;\n\n    const newMusicState: MusicState = {\n      ...currentState,\n      duration,\n      trackProgress: currentState.currentTime > 0 ? currentState.currentTime / duration : 0\n    };\n    this.musicStateSubject.next(newMusicState);\n  }\n\n  /**\n   * Optimized array comparison for performance\n   */\n  private compareArtistArrays(prev: ArtistContribution[], curr: ArtistContribution[]): boolean {\n    if (prev.length !== curr.length) return false;\n\n    for (let i = 0; i < prev.length; i++) {\n      if (prev[i].id !== curr[i].id) return false;\n    }\n    return true;\n  }\n\n  /**\n   * 【✓】 Enhanced debug information with comprehensive state tracking\n   */\n  public getDebugInfo(): any {\n    const musicState = this.musicStateSubject.value;\n    const filteringState = this.artistFilteringStateSubject.value;\n\n    return {\n      musicState: {\n        playbackMode: musicState.playbackMode,\n        isPlaying: musicState.isPlaying,\n        currentTrackId: musicState.currentTrack?.id,\n        currentTrackTitle: musicState.currentTrack?.title,\n        currentTime: musicState.currentTime,\n        duration: musicState.duration,\n        volume: musicState.volume,\n        trackProgress: musicState.trackProgress\n      },\n      filteringState: {\n        mode: filteringState.mode,\n        currentArtistsCount: filteringState.currentArtists.length,\n        allArtistsCount: filteringState.allArtists.length,\n        displayTitle: filteringState.displayTitle,\n        displaySubtitle: filteringState.displaySubtitle\n      },\n      subscriptions: {\n        activeSubscriptions: Object.keys(this.subscriptions).length,\n        subscriptionKeys: Object.keys(this.subscriptions)\n      },\n      stateQueue: {\n        queueLength: this.stateUpdateQueue.length,\n        isProcessing: this.isProcessingQueue\n      }\n    };\n  }\n\n  // 【✓】 Enhanced helper methods for state management\n\n  /**\n   * Queue state updates to prevent race conditions\n   */\n  private queueStateUpdate(updateFn: () => void): void {\n    this.stateUpdateQueue.push(updateFn);\n    this.processStateQueue();\n  }\n\n  /**\n   * Process queued state updates sequentially\n   */\n  private async processStateQueue(): Promise<void> {\n    if (this.isProcessingQueue || this.stateUpdateQueue.length === 0) {\n      return;\n    }\n\n    this.isProcessingQueue = true;\n\n    try {\n      while (this.stateUpdateQueue.length > 0) {\n        const updateFn = this.stateUpdateQueue.shift();\n        if (updateFn) {\n          try {\n            updateFn();\n          } catch (error) {\n            console.error('[MusicStateManager] Error processing state update:', error);\n          }\n          // Small delay to prevent overwhelming the system\n          await new Promise(resolve => setTimeout(resolve, 10));\n        }\n      }\n    } finally {\n      this.isProcessingQueue = false;\n    }\n  }\n\n  /**\n   * Validate music state before updating\n   */\n  private validateMusicState(state: MusicState): boolean {\n    try {\n      return (\n        typeof state.isPlaying === 'boolean' &&\n        typeof state.currentTime === 'number' &&\n        typeof state.duration === 'number' &&\n        typeof state.volume === 'number' &&\n        typeof state.trackProgress === 'number' &&\n        state.volume >= 0 &&\n        state.volume <= 1 &&\n        state.trackProgress >= 0 &&\n        state.trackProgress <= 1 &&\n        state.currentTime >= 0 &&\n        state.duration >= 0\n      );\n    } catch (error) {\n      console.error('[MusicStateManager] Error validating music state:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Validate artist filtering state before updating\n   */\n  private validateArtistFilteringState(state: ArtistFilteringState): boolean {\n    try {\n      return (\n        ['no-music', 'music-playing'].includes(state.mode) &&\n        Array.isArray(state.currentArtists) &&\n        Array.isArray(state.allArtists) &&\n        typeof state.displayTitle === 'string' &&\n        typeof state.displaySubtitle === 'string'\n      );\n    } catch (error) {\n      console.error('[MusicStateManager] Error validating artist filtering state:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Emergency reset method for state corruption\n   */\n  public emergencyReset(): void {\n    console.warn('[MusicStateManager] Performing emergency reset');\n\n    try {\n      // Reset to safe default states\n      const safeArtists = this.artistCreditService.getAllPhantasia2Artists();\n\n      const safeMusicState: MusicState = {\n        isPlaying: false,\n        currentTrack: null,\n        currentTrackCredits: null,\n        currentTime: 0,\n        duration: 0,\n        volume: 0.5,\n        trackProgress: 0,\n        playbackMode: 'idle'\n      };\n\n      const safeFilteringState: ArtistFilteringState = {\n        mode: 'no-music',\n        currentArtists: [],\n        allArtists: safeArtists,\n        displayTitle: 'All Phantasia 2 Artists',\n        displaySubtitle: `Showcasing ${safeArtists.length} of 31 artists from the album`\n      };\n\n      this.musicStateSubject.next(safeMusicState);\n      this.artistFilteringStateSubject.next(safeFilteringState);\n\n      // Clear state queue\n      this.stateUpdateQueue.length = 0;\n      this.isProcessingQueue = false;\n\n      console.log('[MusicStateManager] Emergency reset completed');\n    } catch (error) {\n      console.error('[MusicStateManager] Error during emergency reset:', error);\n    }\n  }\n}","import { Component, Input, OnInit, OnDestroy, ChangeDetectionStrategy, ChangeDetectorRef, Renderer2, Inject, RendererStyleFlags2 } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Defines position and animation properties for rune elements\n * Controls appearance and movement of magical rune symbols\n */\ninterface RunePosition {\n  x: number;\n  y: number;\n  scale: number;\n  delay: number;\n  opacity: number;\n  moveX: number;\n  moveY: number;\n  rotationOffset: number;\n  clockwise: boolean;\n}\n\n/**\n * Creates an animated loading screen with magical effects\n * Displays during application loading and initialization\n * Provides visual feedback and sets atmosphere for the application\n * 【✓】\n */\n@Component({\n  selector: 'app-loading-screen',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './loading-screen.component.html',\n  styleUrls: ['./loading-screen.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoadingScreenComponent implements OnInit, OnDestroy {\n  @Input() set progress(value: number) {\n    this._progress = value;\n    this.progressText = `${Math.floor(value)}%`;\n    this.cdr.markForCheck();\n  }\n  \n  get progress(): number {\n    return this._progress;\n  }\n  \n  private _progress = 0;\n  progressText = '0%';\n  runes: RunePosition[] = [];\n  private originalHeaderStyles = new Map<HTMLElement, string>();\n\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private renderer: Renderer2,\n    @Inject(DOCUMENT) private document: Document\n  ) {}\n  \n  /**\n   * Initializes the loading screen and generates rune positions\n   * Creates randomized magical elements with varied animations\n   * Also suppresses any high z-index headers while loading\n   * 【✓】\n   */\n  ngOnInit() {\n    this.generateRunePositions();\n    this.suppressHighZIndexHeaders();\n  }\n\n  /**\n   * Cleanup on component destruction\n   * Restores original header z-index values\n   * 【✓】\n   */\n  ngOnDestroy(): void {\n    this.restoreHeaderStyles();\n  }\n\n  /**\n   * Suppress high z-index headers that might appear above the loading screen\n   * Stores original styles for restoration later\n   * Uses multiple aggressive approaches to ensure loading screen visibility\n   * 【✓】\n   */\n  private suppressHighZIndexHeaders(): void {\n    console.log('🔧 LoadingScreen: Starting header suppression');\n\n    // Find all elements that could interfere with loading screen\n    const selectors = [\n      'app-site-header',\n      '.site-header',\n      'header[class*=\"header\"]',\n      '.cd-cases-container',\n      '.debug-toggle',\n      '.debug-panel',\n      '.right-side-menu',\n      '.mobile-navbar',\n      '[class*=\"z-index\"]',\n      '[style*=\"z-index\"]'\n    ];\n\n    const allPotentialElements = this.document.querySelectorAll(selectors.join(', '));\n    console.log(`🔍 Found ${allPotentialElements.length} potential interfering elements`);\n\n    allPotentialElements.forEach((element: Element, index) => {\n      const elem = element as HTMLElement;\n      const computedStyle = getComputedStyle(elem);\n      const originalZIndex = computedStyle.zIndex || 'auto';\n      const originalVisibility = computedStyle.visibility || 'visible';\n\n      console.log(`📝 Element ${index}: ${elem.tagName}.${elem.className} - z-index: ${originalZIndex}`);\n\n      // Store original styles for restoration\n      this.originalHeaderStyles.set(elem, JSON.stringify({\n        zIndex: originalZIndex,\n        visibility: originalVisibility,\n        display: computedStyle.display || 'block'\n      }));\n\n      // AGGRESSIVE APPROACH 1: Set very low z-index\n      this.renderer.setStyle(elem, 'z-index', '1', RendererStyleFlags2.Important);\n\n      // AGGRESSIVE APPROACH 2: Make invisible during loading\n      this.renderer.setStyle(elem, 'visibility', 'hidden', RendererStyleFlags2.Important);\n\n      console.log(`✅ Suppressed element ${index}`);\n    });\n\n    // AGGRESSIVE APPROACH 3: Add body class for global CSS overrides\n    this.renderer.addClass(this.document.body, 'loading-screen-active');\n\n    console.log('🎯 Header suppression completed');\n  }\n\n  /**\n   * Restore original header styles when loading screen is destroyed\n   * Restores all suppressed styles including visibility and z-index\n   * Enhanced to ensure header visibility is properly restored\n   * 【✓】\n   */\n  private restoreHeaderStyles(): void {\n    console.log('🔧 LoadingScreen: Restoring header styles');\n\n    // PRIORITY: Remove body class FIRST to stop CSS suppression\n    this.renderer.removeClass(this.document.body, 'loading-screen-active');\n    console.log('📝 Removed loading-screen-active class from body');\n\n    this.originalHeaderStyles.forEach((originalStylesJson, element) => {\n      try {\n        const originalStyles = JSON.parse(originalStylesJson);\n\n        // Restore z-index\n        if (originalStyles.zIndex === 'auto' || originalStyles.zIndex === '') {\n          this.renderer.removeStyle(element, 'z-index');\n        } else {\n          this.renderer.setStyle(element, 'z-index', originalStyles.zIndex);\n        }\n\n        // Restore visibility - force to visible for headers\n        if (element.tagName.toLowerCase() === 'app-site-header' ||\n            element.classList.contains('site-header')) {\n          this.renderer.setStyle(element, 'visibility', 'visible', RendererStyleFlags2.Important);\n          console.log('🎯 Forced header visibility to visible');\n        } else if (originalStyles.visibility === 'visible') {\n          this.renderer.removeStyle(element, 'visibility');\n        } else {\n          this.renderer.setStyle(element, 'visibility', originalStyles.visibility);\n        }\n\n      } catch (error) {\n        console.warn('⚠️ Failed to restore styles for element:', element, error);\n        // Fallback: just remove our overrides and ensure header visibility\n        this.renderer.removeStyle(element, 'z-index');\n        this.renderer.removeStyle(element, 'visibility');\n\n        // Extra safety for headers\n        if (element.tagName.toLowerCase() === 'app-site-header' ||\n            element.classList.contains('site-header')) {\n          this.renderer.setStyle(element, 'visibility', 'visible', RendererStyleFlags2.Important);\n        }\n      }\n    });\n\n    // ADDITIONAL SAFETY: Force all headers to be visible\n    const allHeaders = this.document.querySelectorAll('app-site-header, .site-header, header');\n    allHeaders.forEach((header: Element) => {\n      const elem = header as HTMLElement;\n      this.renderer.setStyle(elem, 'visibility', 'visible', RendererStyleFlags2.Important);\n      this.renderer.setStyle(elem, 'z-index', '1000', RendererStyleFlags2.Important);\n    });\n\n    this.originalHeaderStyles.clear();\n    console.log('✅ Header styles restored with enhanced visibility enforcement');\n  }\n\n  /**\n   * Creates random positions and properties for rune elements\n   * Generates visually interesting magical symbols with varied behavior\n   * 【✓】\n   */\n  private generateRunePositions() {\n    const numRunes = 48;\n    this.runes = Array.from({ length: numRunes }, () => ({\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      scale: 0.6 + Math.random() * 1.4,\n      delay: Math.random() * 8,\n      opacity: 0.3 + Math.random() * 0.5,\n      moveX: 15 + Math.random() * 20,\n      moveY: 15 + Math.random() * 20,\n      rotationOffset: Math.random() * 360,\n      clockwise: Math.random() < 0.5\n    }));\n  }\n} ","<div class=\"loader-container\" [class.visible]=\"true\">\n  <div class=\"magical-circle outer\"></div>\n  <div class=\"magical-circle\"></div>\n  <div class=\"rune-effects\"></div>\n  <div class=\"decorative-elements\">\n    <div class=\"corner-line top-left\"></div>\n    <div class=\"corner-line top-right\"></div>\n    <div class=\"corner-line bottom-left\"></div>\n    <div class=\"corner-line bottom-right\"></div>\n    <div class=\"mid-line left\"></div>\n    <div class=\"mid-line right\"></div>\n    <div class=\"mid-line top\"></div>\n    <div class=\"mid-line bottom\"></div>\n  </div>\n  <div class=\"light-beams\">\n    <div class=\"beam beam-1\"></div>\n    <div class=\"beam beam-2\"></div>\n    <div class=\"beam beam-3\"></div>\n    <div class=\"beam beam-4\"></div>\n  </div>\n  <div class=\"rune-circle\">\n    <div class=\"rune\" *ngFor=\"let rune of runes\" \n         [class.clockwise]=\"rune.clockwise\"\n         [class.counter-clockwise]=\"!rune.clockwise\"\n         [style.left]=\"rune.x + 'vw'\"\n         [style.top]=\"rune.y + 'vh'\"\n         [style.--move-x]=\"rune.moveX + 'px'\"\n         [style.--move-y]=\"rune.moveY + 'px'\"\n         [style.--scale]=\"rune.scale\"\n         [style.--base-opacity]=\"rune.opacity\"\n         [style.--rotation-offset]=\"rune.rotationOffset\"\n         [style.--delay]=\"rune.delay\">\n    </div>\n  </div>\n  <div class=\"content\">\n    <div class=\"logo-container\">\n      <img src=\"/assets/images/logos/prismcoll.svg\" alt=\"Prismatic Collections\" class=\"logo\">\n    </div>\n    <div class=\"loading-text\">NOW LOADING</div>\n  </div>\n</div> ","import { Component, Input, ChangeDetectionStrategy, signal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ArtistCardData } from '../dynamic-artist-cards.component';\n\n/**\n * Individual Artist Card Component\n * \n * Displays a single artist card matching the reference design.\n * Features:\n * - Circular avatar with artist initials fallback\n * - Artist name and role badge\n * - Currently playing indicator\n * - Social media links (YouTube, Twitter/X)\n * - Hover animations and interactive elements\n * - Responsive design for all screen sizes\n * \n * Layout matches the reference image:\n * - Dark card background with rounded corners\n * - Circular avatar at top\n * - Artist name below avatar\n * - Role label (MAIN ARTIST, FEATURED ARTIST, etc.)\n * - Currently Playing status dot\n * - Social links at bottom\n */\n@Component({\n  selector: 'app-artist-card',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  templateUrl: './artist-card.component.html',\n  styleUrls: ['./artist-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('cardHover', [\n      state('default', style({ transform: 'translateY(0) scale(1)' })),\n      state('hovered', style({ transform: 'translateY(-4px) scale(1.02)' })),\n      transition('default <=> hovered', animate('200ms ease-out'))\n    ]),\n    trigger('playingIndicator', [\n      state('playing', style({\n        opacity: 1,\n        transform: 'scale(1)',\n        background: 'transparent'\n      })),\n      state('not-playing', style({\n        opacity: 0.3,\n        transform: 'scale(0.8)',\n        background: 'transparent'\n      })),\n      transition('playing <=> not-playing', animate('300ms ease-out'))\n    ])\n  ]\n})\nexport class ArtistCardComponent {\n  @Input({ required: true }) cardData!: ArtistCardData;\n  @Input() enableAnimations = true;\n\n  // Component state\n  readonly isHovered = signal(false);\n  readonly avatarError = signal(false);\n\n  // Computed properties\n  readonly artistInitials = computed(() => {\n    const name = this.cardData?.artist?.artistDisplayName || '';\n    const words = name.split(' ').filter(word => word.length > 0);\n    \n    if (words.length === 0) return '?';\n    if (words.length === 1) return words[0].substring(0, 2).toUpperCase();\n    \n    // Take first letter of first and last word for better representation\n    return (words[0][0] + words[words.length - 1][0]).toUpperCase();\n  });\n\n  readonly roleDisplayText = computed(() => {\n    if (!this.cardData?.artist?.role) return '';\n\n    const role = this.cardData.artist.role;\n\n    // Convert role to display format matching reference design\n    switch (role) {\n      case 'Main Artist': return 'MAIN ARTIST';\n      case 'Featured Artist': return 'FEATURED ARTIST';\n      case 'Vocalist': return 'VOCALIST';\n      case 'Producer': return 'PRODUCER';\n      case 'Composer': return 'COMPOSER';\n      case 'Arranger': return 'ARRANGER';\n      case 'Instrumentalist': return 'INSTRUMENTALIST';\n      case 'Violin': return 'VIOLIN';\n      case 'Viola': return 'VIOLA';\n      case 'Cello': return 'CELLO';\n      case 'Accordion': return 'ACCORDION';\n      case 'Piano': return 'PIANO';\n      case 'Keyboard': return 'KEYBOARD';\n      case 'Guitar': return 'GUITAR';\n      case 'Bass': return 'BASS';\n      case 'Drums': return 'DRUMS';\n      case 'Electronic Producer': return 'ELECTRONIC PRODUCER';\n      case 'Sound Designer': return 'SOUND DESIGNER';\n      case 'Synthesizer V Operator': return 'SYNTHESIZER V';\n      case 'Voice Actor': return 'VOICE ACTOR';\n      // New specific production roles for Phantasia 2\n      case 'Vocalist, Lyricist': return 'VOCALIST, LYRICIST';\n      case 'Accordionist': return 'ACCORDIONIST';\n      case 'Violinist': return 'VIOLINIST';\n      case 'Violist': return 'VIOLIST';\n      case 'Cellist': return 'CELLIST';\n      default: return role.toUpperCase();\n    }\n  });\n\n  readonly participationLevelClass = computed(() => {\n    return `participation-${this.cardData?.participationLevel || 'additional'}`;\n  });\n\n  readonly cardThemeColor = computed(() => {\n    return this.cardData?.artist?.color || '#ffffff'; // White fallback instead of cyan\n  });\n\n  // Social links helpers\n  get hasYoutube(): boolean {\n    return !!this.cardData?.artist?.socialLinks?.youtube;\n  }\n\n  get hasTwitter(): boolean {\n    return !!this.cardData?.artist?.socialLinks?.twitter;\n  }\n\n  get hasLinktr(): boolean {\n    return !!this.cardData?.artist?.socialLinks?.linktr;\n  }\n\n  get hasInstagram(): boolean {\n    return !!this.cardData?.artist?.socialLinks?.instagram;\n  }\n\n  get youtubeUrl(): string {\n    return this.cardData?.artist?.socialLinks?.youtube || '';\n  }\n\n  get twitterUrl(): string {\n    return this.cardData?.artist?.socialLinks?.twitter || '';\n  }\n\n  get linktrUrl(): string {\n    return this.cardData?.artist?.socialLinks?.linktr || '';\n  }\n\n  get instagramUrl(): string {\n    return this.cardData?.artist?.socialLinks?.instagram || '';\n  }\n\n  get artistName(): string {\n    return this.cardData?.artist?.artistDisplayName || 'Unknown Artist';\n  }\n\n  get avatarUrl(): string {\n    return this.cardData?.artist?.avatar || '';\n  }\n\n  get isCurrentlyPlaying(): boolean {\n    return this.cardData?.isCurrentlyPlaying || false;\n  }\n\n  // Event handlers\n  onMouseEnter(): void {\n    if (this.enableAnimations) {\n      this.isHovered.set(true);\n    }\n  }\n\n  onMouseLeave(): void {\n    if (this.enableAnimations) {\n      this.isHovered.set(false);\n    }\n  }\n\n  onAvatarError(): void {\n    this.avatarError.set(true);\n  }\n\n  onSocialLinkClick(platform: 'youtube' | 'twitter' | 'linktr' | 'instagram', event: Event): void {\n    event.stopPropagation();\n\n    let url = '';\n    if (platform === 'youtube') {\n      url = this.youtubeUrl;\n    } else if (platform === 'twitter') {\n      url = this.twitterUrl;\n    } else if (platform === 'linktr') {\n      url = this.linktrUrl;\n    } else if (platform === 'instagram') {\n      url = this.instagramUrl;\n    }\n\n    if (url) {\n      window.open(url, '_blank', 'noopener,noreferrer');\n    }\n  }\n\n  onCardClick(): void {\n    // Could be extended for detailed artist view\n    console.log('Artist card clicked:', this.cardData?.artist?.artistDisplayName);\n  }\n\n  // Animation state getters\n  get hoverState(): string {\n    return this.isHovered() ? 'hovered' : 'default';\n  }\n\n  get playingIndicatorState(): string {\n    return this.isCurrentlyPlaying ? 'playing' : 'not-playing';\n  }\n}","<!-- Artist Card - Matches Reference Design -->\n<div class=\"artist-card\" \n     [class]=\"participationLevelClass()\"\n     [@cardHover]=\"hoverState\"\n     (mouseenter)=\"onMouseEnter()\"\n     (mouseleave)=\"onMouseLeave()\"\n     (click)=\"onCardClick()\"\n     [style.--theme-color]=\"cardThemeColor()\">\n\n  <!-- Artist Avatar Section -->\n  <div class=\"artist-avatar-section\">\n    <!-- Avatar Container -->\n    <div class=\"avatar-container\">\n      <!-- Artist Image -->\n      <img *ngIf=\"avatarUrl && !avatarError()\" \n           [src]=\"avatarUrl\" \n           [alt]=\"artistName + ' avatar'\"\n           class=\"artist-avatar\"\n           (error)=\"onAvatarError()\"\n           loading=\"lazy\">\n      \n      <!-- Initials Fallback -->\n      <div *ngIf=\"!avatarUrl || avatarError()\" \n           class=\"artist-initials\"\n           [style.background]=\"cardThemeColor()\">\n        {{ artistInitials() }}\n      </div>\n    </div>\n  </div>\n\n  <!-- Artist Info Section -->\n  <div class=\"artist-info-section\">\n    <!-- Artist Name -->\n    <h3 class=\"artist-name\">{{ artistName }}</h3>\n    \n    <!-- Role Label -->\n    <div class=\"role-label\">\n      {{ roleDisplayText() }}\n    </div>\n    \n    <!-- Currently Playing Indicator -->\n    <div class=\"playing-status\" *ngIf=\"isCurrentlyPlaying\">\n      <div class=\"playing-indicator\" [@playingIndicator]=\"playingIndicatorState\">\n        <span class=\"playing-dot\"></span>\n        <span class=\"playing-text\">Currently Playing</span>\n      </div>\n    </div>\n  </div>\n\n  <!-- Social Links Section -->\n  <div class=\"social-links-section\" *ngIf=\"hasYoutube || hasTwitter || hasLinktr || hasInstagram\">\n    <!-- YouTube Link -->\n    <button *ngIf=\"hasYoutube\"\n            class=\"social-link youtube-link\"\n            mat-icon-button\n            [attr.aria-label]=\"artistName + ' YouTube channel'\"\n            (click)=\"onSocialLinkClick('youtube', $event)\">\n      <mat-icon>smart_display</mat-icon>\n      <span class=\"social-label\">YouTube</span>\n    </button>\n\n    <!-- Twitter/X Link -->\n    <button *ngIf=\"hasTwitter\"\n            class=\"social-link twitter-link\"\n            mat-icon-button\n            [attr.aria-label]=\"artistName + ' Twitter profile'\"\n            (click)=\"onSocialLinkClick('twitter', $event)\">\n      <!-- Using a simple X icon representation -->\n      <span class=\"twitter-x-icon\">𝕏</span>\n      <span class=\"social-label\">Twitter/X</span>\n    </button>\n\n    <!-- Linktr.ee Link -->\n    <button *ngIf=\"hasLinktr\"\n            class=\"social-link linktr-link\"\n            mat-icon-button\n            [attr.aria-label]=\"artistName + ' Linktr.ee profile'\"\n            (click)=\"onSocialLinkClick('linktr', $event)\">\n      <mat-icon>link</mat-icon>\n      <span class=\"social-label\">Links</span>\n    </button>\n\n    <!-- Instagram Link -->\n    <button *ngIf=\"hasInstagram\"\n            class=\"social-link instagram-link\"\n            mat-icon-button\n            [attr.aria-label]=\"artistName + ' Instagram profile'\"\n            (click)=\"onSocialLinkClick('instagram', $event)\">\n      <span class=\"instagram-icon\">📷</span>\n      <span class=\"social-label\">Instagram</span>\n    </button>\n  </div>\n\n  <!-- Card Accent Border -->\n  <div class=\"card-accent\" [style.background]=\"cardThemeColor()\"></div>\n\n</div>","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, combineLatest, Subject, EMPTY } from 'rxjs';\nimport { map, distinctUntilChanged, debounceTime, takeUntil, startWith, shareReplay, switchMap } from 'rxjs/operators';\nimport { ArtistCreditService, ArtistContribution } from '../../services/artist-credit.service';\nimport { AudioService, AudioState } from '../../pages/collections/phantasia/services/audio.service';\nimport { DynamicArtistService, TrackWithArtists } from '../../pages/collections/phantasia/services/dynamic-artist.service';\n\n/**\n * Interface for currently playing artist data with enhanced metadata\n */\nexport interface CurrentlyPlayingArtist extends ArtistContribution {\n  readonly isMainArtist: boolean;\n  readonly isFeaturedArtist: boolean;\n  readonly playingContext: {\n    trackId: string;\n    trackTitle: string;\n    startTime: number;\n    currentTime: number;\n  };\n}\n\n/**\n * Currently Playing Artists Service\n * \n * Tracks which artists are currently playing based on the active track.\n * Provides real-time updates for the dynamic artist cards system.\n * Handles track timing and artist contribution mapping.\n * \n * Features:\n * - Real-time artist detection based on current track\n * - Track timing awareness for multi-track albums\n * - Priority sorting (main artists, featured artists, collaborators)\n * - Debounced updates to prevent excessive re-renders\n * - Error handling for missing track data\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentlyPlayingArtistsService implements OnDestroy {\n  private readonly destroy$ = new Subject<void>();\n  private readonly currentlyPlayingArtistsSubject = new BehaviorSubject<ArtistContribution[]>([]);\n  private readonly trackArtistCacheMap = new Map<string, ArtistContribution[]>();\n  private readonly maxCacheSize = 50; // Prevent unlimited cache growth\n  private cacheAccessOrder: string[] = []; // LRU cache implementation\n  private isDebugMode = false; // Performance debugging flag\n  \n  // Public observables\n  readonly currentlyPlayingArtists$ = this.currentlyPlayingArtistsSubject.asObservable();\n  \n  // Enhanced observable with playing context - optimized with shareReplay for performance\n  readonly currentlyPlayingArtistsWithContext$: Observable<CurrentlyPlayingArtist[]> =\n    combineLatest([\n      this.audioService.audioState$,\n      this.currentlyPlayingArtists$\n    ]).pipe(\n      map(([audioState, artists]) => this.enhanceArtistsWithContext(audioState, artists)),\n      distinctUntilChanged((prev, curr) => this.compareArtistArrays(prev, curr)),\n      debounceTime(50), // Reduced debounce for faster response\n      shareReplay(1), // Cache last result for multiple subscribers\n      takeUntil(this.destroy$)\n    );\n\n  constructor(\n    private artistCreditService: ArtistCreditService,\n    private audioService: AudioService,\n    private dynamicArtistService: DynamicArtistService\n  ) {\n    this.initializeService();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n    this.clearCache();\n    if (this.isDebugMode) {\n      console.log('[CurrentlyPlayingArtistsService] Service destroyed, cache cleared');\n    }\n  }\n\n  /**\n   * Initialize the service and setup audio state monitoring\n   */\n  private initializeService(): void {\n    // Pre-populate cache with all track artist data\n    this.populateTrackArtistCache();\n\n    // Primary: Monitor DynamicArtistService for current track changes (Phantasia 2) - optimized\n    this.dynamicArtistService.currentTrack$.pipe(\n      distinctUntilChanged((prev, curr) => prev?.id === curr?.id),\n      debounceTime(25), // Faster response time\n      takeUntil(this.destroy$)\n    ).subscribe(currentTrack => {\n      this.updateCurrentlyPlayingArtistsFromDynamicService(currentTrack);\n    });\n\n    // Fallback: Monitor legacy audio state changes for other sections - optimized\n    this.audioService.audioState$.pipe(\n      distinctUntilChanged((prev, curr) =>\n        prev.currentTrack === curr.currentTrack &&\n        prev.isPlaying === curr.isPlaying\n      ),\n      debounceTime(25),\n      switchMap(audioState =>\n        this.dynamicArtistService.currentTrack$.pipe(\n          map(dynamicTrack => ({ audioState, noDynamicTrack: dynamicTrack === null })),\n          startWith({ audioState, noDynamicTrack: true })\n        )\n      ),\n      takeUntil(this.destroy$)\n    ).subscribe(({ audioState, noDynamicTrack }) => {\n      if (noDynamicTrack) {\n        this.updateCurrentlyPlayingArtists(audioState);\n      }\n    });\n  }\n\n  /**\n   * Pre-populate cache with all track artist data for performance\n   */\n  private populateTrackArtistCache(): void {\n    try {\n      // Get all tracks with credits from the artist credit service\n      this.artistCreditService.tracksWithCredits$.subscribe(tracks => {\n        tracks.forEach(track => {\n          const sortedArtists = this.sortArtistsByPriority(track.allContributions);\n          this.trackArtistCacheMap.set(track.id, sortedArtists);\n          \n          // Also cache by track number for alternative lookup\n          this.trackArtistCacheMap.set(track.trackNumber.toString(), sortedArtists);\n          \n          // Cache by audio file name for direct audio mapping\n          if (track.audioFile) {\n            const audioKey = this.extractAudioKey(track.audioFile);\n            this.trackArtistCacheMap.set(audioKey, sortedArtists);\n          }\n        });\n      });\n    } catch (error) {\n      console.error('[CurrentlyPlayingArtistsService] Error populating cache:', error);\n    }\n  }\n\n  /**\n   * Update currently playing artists from DynamicArtistService (primary method)\n   */\n  private updateCurrentlyPlayingArtistsFromDynamicService(currentTrack: TrackWithArtists | null): void {\n    if (!currentTrack) {\n      this.currentlyPlayingArtistsSubject.next([]);\n      return;\n    }\n\n    // Get artists for the current track\n    const artists = this.getArtistsForTrack(currentTrack.id);\n\n    if (artists.length > 0) {\n      this.currentlyPlayingArtistsSubject.next(artists);\n      console.log(`[CurrentlyPlayingArtistsService] Updated artists for track \"${currentTrack.title}\":`,\n                  artists.map(a => a.artistDisplayName));\n    } else {\n      // Try to get artists directly from the track data\n      const trackArtists = this.getArtistsFromTrackData(currentTrack);\n      this.currentlyPlayingArtistsSubject.next(trackArtists);\n      console.log(`[CurrentlyPlayingArtistsService] Using direct track data for \"${currentTrack.title}\":`,\n                  trackArtists.map(a => a.artistDisplayName));\n    }\n  }\n\n  /**\n   * Get artists from track data when cache lookup fails\n   */\n  private getArtistsFromTrackData(track: TrackWithArtists): ArtistContribution[] {\n    const artists: ArtistContribution[] = [];\n\n    // Add main artist\n    if (track.mainArtist) {\n      artists.push({\n        id: `${track.id}-main`,\n        artistName: track.mainArtist,\n        artistDisplayName: track.mainArtist,\n        role: 'Main Artist' as any,\n        participationType: 'primary' as any,\n        percentageContribution: 100,\n        color: '#FF6B6B',\n        socialLinks: {}\n      });\n    }\n\n    // Add featured artists if available\n    if (track.features && track.features.length > 0) {\n      track.features.forEach((artist, index) => {\n        artists.push({\n          id: `${track.id}-featured-${index}`,\n          artistName: artist.name,\n          artistDisplayName: artist.name,\n          role: 'Featured Artist' as any,\n          participationType: 'featured' as any,\n          percentageContribution: 50,\n          color: '#ffffff',\n          socialLinks: {}\n        });\n      });\n    }\n\n    return this.sortArtistsByPriority(artists);\n  }\n\n  /**\n   * Update currently playing artists based on audio state (fallback method)\n   */\n  private updateCurrentlyPlayingArtists(audioState: AudioState): void {\n    if (!audioState.isPlaying || !audioState.currentTrack) {\n      this.currentlyPlayingArtistsSubject.next([]);\n      return;\n    }\n\n    const artists = this.getArtistsForTrack(audioState.currentTrack);\n    \n    if (artists.length > 0) {\n      this.currentlyPlayingArtistsSubject.next(artists);\n    } else {\n      // Fallback: try to map using different keys\n      const fallbackArtists = this.tryFallbackArtistLookup(audioState.currentTrack);\n      this.currentlyPlayingArtistsSubject.next(fallbackArtists);\n    }\n  }\n\n  /**\n   * Get artists for a specific track with LRU caching\n   */\n  private getArtistsForTrack(trackId: string): ArtistContribution[] {\n    // Direct cache lookup with LRU update\n    const cachedArtists = this.trackArtistCacheMap.get(trackId);\n    if (cachedArtists) {\n      this.updateCacheAccess(trackId);\n      return cachedArtists;\n    }\n\n    // Lookup via artist credit service\n    const trackCredits = this.artistCreditService.getTrackCredits(trackId);\n    if (trackCredits) {\n      const sortedArtists = this.sortArtistsByPriority(trackCredits.allContributions);\n      this.setCacheWithLRU(trackId, sortedArtists);\n      return sortedArtists;\n    }\n\n    return [];\n  }\n\n  /**\n   * Try alternative lookup methods when direct track ID fails\n   */\n  private tryFallbackArtistLookup(trackIdentifier: string): ArtistContribution[] {\n    // Try numeric track number\n    if (/^\\d+$/.test(trackIdentifier)) {\n      const artists = this.trackArtistCacheMap.get(trackIdentifier);\n      if (artists) return artists;\n    }\n\n    // Try extracting track number from string\n    const trackNumberMatch = trackIdentifier.match(/\\b(\\d+)\\b/);\n    if (trackNumberMatch) {\n      const artists = this.trackArtistCacheMap.get(trackNumberMatch[1]);\n      if (artists) return artists;\n    }\n\n    // Try audio file name mapping\n    const audioKey = this.extractAudioKey(trackIdentifier);\n    const artists = this.trackArtistCacheMap.get(audioKey);\n    if (artists) return artists;\n\n    console.warn(`[CurrentlyPlayingArtistsService] No artists found for track: ${trackIdentifier}`);\n    return [];\n  }\n\n  /**\n   * Sort artists by display priority for consistent ordering\n   */\n  private sortArtistsByPriority(artists: ArtistContribution[]): ArtistContribution[] {\n    return [...artists].sort((a, b) => {\n      // Priority order: Main Artist > Featured Artist > Vocalist > Producer > Others\n      const priorityMap: Record<string, number> = {\n        'Main Artist': 1000,\n        'Featured Artist': 900,\n        'Vocalist': 800,\n        'Producer': 700,\n        'Composer': 600,\n        'Arranger': 500,\n        'Instrumentalist': 400\n      };\n      \n      const aPriority = priorityMap[a.role] || 100;\n      const bPriority = priorityMap[b.role] || 100;\n      \n      if (aPriority !== bPriority) {\n        return bPriority - aPriority;\n      }\n      \n      // Secondary sort by contribution percentage\n      if (a.percentageContribution !== b.percentageContribution) {\n        return b.percentageContribution - a.percentageContribution;\n      }\n      \n      // Tertiary sort by artist name\n      return a.artistDisplayName.localeCompare(b.artistDisplayName);\n    });\n  }\n\n  /**\n   * Enhance artists with playing context information\n   */\n  private enhanceArtistsWithContext(\n    audioState: AudioState, \n    artists: ArtistContribution[]\n  ): CurrentlyPlayingArtist[] {\n    if (!audioState.currentTrack) return [];\n    \n    const trackCredits = this.artistCreditService.getTrackCredits(audioState.currentTrack);\n    \n    return artists.map(artist => ({\n      ...artist,\n      isMainArtist: artist.role === 'Main Artist',\n      isFeaturedArtist: artist.role === 'Featured Artist' || artist.role === 'Vocalist',\n      playingContext: {\n        trackId: audioState.currentTrack!,\n        trackTitle: trackCredits?.title || 'Unknown Track',\n        startTime: trackCredits?.startTime || 0,\n        currentTime: audioState.currentTime\n      }\n    }));\n  }\n\n  /**\n   * Extract key from audio file name for mapping\n   */\n  private extractAudioKey(audioFile: string): string {\n    // Remove file extension and path\n    return audioFile.replace(/\\.[^/.]+$/, '')\n                   .replace(/^.*[\\\\\\/]/, '')\n                   .toLowerCase();\n  }\n\n  /**\n   * Get all artists who have contributed to any track\n   */\n  getAllContributingArtists(): ArtistContribution[] {\n    const allArtists = new Map<string, ArtistContribution>();\n    \n    this.trackArtistCacheMap.forEach(artists => {\n      artists.forEach(artist => {\n        if (!allArtists.has(artist.artistName)) {\n          allArtists.set(artist.artistName, artist);\n        }\n      });\n    });\n    \n    return Array.from(allArtists.values())\n               .sort((a, b) => a.artistDisplayName.localeCompare(b.artistDisplayName));\n  }\n\n  /**\n   * Get featured artists for showcase when no track is playing\n   */\n  getFeaturedArtistsForShowcase(limit = 8): ArtistContribution[] {\n    const allArtists = this.getAllContributingArtists();\n    \n    // Filter and prioritize showcase-worthy artists\n    const showcaseArtists = allArtists.filter(artist => {\n      return artist.role === 'Main Artist' || \n             artist.role === 'Featured Artist' ||\n             artist.role === 'Vocalist' ||\n             artist.percentageContribution >= 15;\n    });\n    \n    return this.sortArtistsByPriority(showcaseArtists).slice(0, limit);\n  }\n\n  /**\n   * Manually set currently playing artists (for testing or manual control)\n   */\n  setCurrentlyPlayingArtists(artists: ArtistContribution[]): void {\n    const sortedArtists = this.sortArtistsByPriority(artists);\n    this.currentlyPlayingArtistsSubject.next(sortedArtists);\n  }\n\n  /**\n   * Clear currently playing artists\n   */\n  clearCurrentlyPlayingArtists(): void {\n    this.currentlyPlayingArtistsSubject.next([]);\n  }\n\n  /**\n   * Optimized array comparison for distinctUntilChanged\n   */\n  private compareArtistArrays(prev: CurrentlyPlayingArtist[], curr: CurrentlyPlayingArtist[]): boolean {\n    if (prev.length !== curr.length) return false;\n\n    // Fast comparison using IDs only\n    for (let i = 0; i < prev.length; i++) {\n      if (prev[i].id !== curr[i].id) return false;\n    }\n    return true;\n  }\n\n  /**\n   * LRU cache management - update access order\n   */\n  private updateCacheAccess(trackId: string): void {\n    const index = this.cacheAccessOrder.indexOf(trackId);\n    if (index > -1) {\n      this.cacheAccessOrder.splice(index, 1);\n    }\n    this.cacheAccessOrder.push(trackId);\n  }\n\n  /**\n   * Set cache with LRU eviction policy\n   */\n  private setCacheWithLRU(trackId: string, artists: ArtistContribution[]): void {\n    // Evict oldest entries if cache is full\n    if (this.trackArtistCacheMap.size >= this.maxCacheSize) {\n      const oldestKey = this.cacheAccessOrder.shift();\n      if (oldestKey) {\n        this.trackArtistCacheMap.delete(oldestKey);\n        if (this.isDebugMode) {\n          console.log(`[CurrentlyPlayingArtistsService] Evicted cache entry: ${oldestKey}`);\n        }\n      }\n    }\n\n    this.trackArtistCacheMap.set(trackId, artists);\n    this.updateCacheAccess(trackId);\n\n    if (this.isDebugMode) {\n      console.log(`[CurrentlyPlayingArtistsService] Cached artists for track: ${trackId}`);\n    }\n  }\n\n  /**\n   * Clear entire cache for memory management\n   */\n  private clearCache(): void {\n    this.trackArtistCacheMap.clear();\n    this.cacheAccessOrder = [];\n  }\n\n  /**\n   * Get cache statistics for performance monitoring\n   */\n  getCacheStats(): { size: number; maxSize: number; hitRate: number } {\n    return {\n      size: this.trackArtistCacheMap.size,\n      maxSize: this.maxCacheSize,\n      hitRate: this.cacheAccessOrder.length > 0 ? this.trackArtistCacheMap.size / this.cacheAccessOrder.length : 0\n    };\n  }\n\n  /**\n   * Enable/disable debug mode for performance monitoring\n   */\n  setDebugMode(enabled: boolean): void {\n    this.isDebugMode = enabled;\n  }\n}","import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { trigger, state, style, transition, animate, stagger, query } from '@angular/animations';\nimport { Subject, takeUntil, combineLatest } from 'rxjs';\nimport { ArtistCreditService, ArtistContribution, ProjectType } from '../../services/artist-credit.service';\nimport { AudioService, AudioState } from '../../pages/collections/phantasia/services/audio.service';\nimport { CurrentlyPlayingArtistsService } from './currently-playing-artists.service';\nimport { DynamicArtistService, TrackWithArtists } from '../../pages/collections/phantasia/services/dynamic-artist.service';\nimport { MusicStateManagerService, ArtistFilteringState } from '../../services/music-state-manager.service';\nimport { ArtistCardComponent } from './artist-card/artist-card.component';\n\n/**\n * Interface for artist card with unique identifier\n */\nexport interface ArtistCardData {\n  readonly id: string; // Unique identifier for card system\n  readonly artist: ArtistContribution;\n  readonly isCurrentlyPlaying: boolean;\n  readonly participationLevel: 'main' | 'featured' | 'collaboration' | 'additional';\n  readonly displayPriority: number; // Higher number = higher priority display\n}\n\n/**\n * Dynamic Artist Cards Component\n * \n * Displays artist cards that update in real-time based on currently playing tracks.\n * Matches the reference design with proper card layout, avatars, and social links.\n * Includes comprehensive identifier system for all 31 Phantasia 2 artists.\n * \n * Features:\n * - Real-time updates based on playing track\n * - Unique identifier system for each artist card\n * - Responsive grid layout with animations\n * - Social media integration\n * - Role-based display priority\n * - Fallback to showcase mode when no track is playing\n */\n@Component({\n  selector: 'app-dynamic-artist-cards',\n  standalone: true,\n  imports: [\n    CommonModule,\n    ArtistCardComponent\n  ],\n  templateUrl: './dynamic-artist-cards.component.html',\n  styleUrls: ['./dynamic-artist-cards.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('cardsContainer', [\n      transition(':enter', [\n        query('.artist-card', [\n          style({ opacity: 0, transform: 'translateY(20px)' }),\n          stagger(100, [\n            animate('300ms ease-out', style({ opacity: 1, transform: 'translateY(0)' }))\n          ])\n        ], { optional: true })\n      ])\n    ]),\n    trigger('cardUpdate', [\n      state('in', style({ opacity: 1, transform: 'scale(1)' })),\n      transition('void => *', [\n        style({ opacity: 0, transform: 'scale(0.9)' }),\n        animate('250ms ease-out')\n      ]),\n      transition('* => void', [\n        animate('200ms ease-in', style({ opacity: 0, transform: 'scale(0.9)' }))\n      ])\n    ]),\n    trigger('modeTransition', [\n      state('showcase', style({ opacity: 1, transform: 'translateY(0)' })),\n      state('currently-playing', style({ opacity: 1, transform: 'translateY(0)' })),\n      transition('showcase => currently-playing', [\n        animate('400ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 1, transform: 'translateY(0)' }))\n      ]),\n      transition('currently-playing => showcase', [\n        animate('600ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({ opacity: 1, transform: 'translateY(0)' }))\n      ])\n    ])\n  ]\n})\nexport class DynamicArtistCardsComponent implements OnInit, OnDestroy {\n  /**\n   * Configuration inputs\n   */\n  @Input() showAllArtists = false;\n  @Input() maxVisibleCards = 8;\n  @Input() enableAnimations = true;\n\n  private _displayMode: 'currently-playing' | 'showcase' | 'all' = 'currently-playing';\n  @Input() set displayMode(mode: 'currently-playing' | 'showcase' | 'all') {\n    const previousMode = this._displayMode;\n    this._displayMode = mode;\n\n    // Handle mode change after initialization\n    if (previousMode !== mode && !this.isLoading()) {\n      this.handleDisplayModeChange(mode);\n    }\n  }\n  get displayMode(): 'currently-playing' | 'showcase' | 'all' {\n    return this._displayMode;\n  }\n\n  /**\n   * Component state signals\n   */\n  readonly artistCards = signal<ArtistCardData[]>([]);\n  readonly currentlyPlayingArtists = signal<ArtistCardData[]>([]);\n  readonly showcaseArtists = signal<ArtistCardData[]>([]);\n  readonly isLoading = signal(true);\n  readonly currentTrack = signal<string | null>(null);\n  readonly totalArtistsCount = signal(0);\n  readonly animationState = signal<'showcase' | 'currently-playing'>('showcase');\n\n  /**\n   * Artist card identifier mapping\n   * Each artist gets a unique, consistent identifier for card management\n   */\n  private readonly artistCardIds = new Map<string, string>([\n    ['SpiralFlip', 'artist-card-spiralflip-001'],\n    ['eili', 'artist-card-eili-002'],\n    ['Ariatec', 'artist-card-ariatec-003'],\n    ['MB', 'artist-card-mbgov-004'],\n    ['Iku Hoshifuri', 'artist-card-iku-hoshifuri-005'],\n    ['Justin Thornburgh', 'artist-card-justin-thornburgh-006'],\n    ['v1ris', 'artist-card-v1ris-007'],\n    ['Rita Kamishiro', 'artist-card-rita-kamishiro-008'],\n    ['Marcus Ho', 'artist-card-marcus-ho-009'],\n    ['AZALI', 'artist-card-azali-010'],\n    ['Aloysius', 'artist-card-aloysius-011'],\n    ['potatoTeto', 'artist-card-potatoteto-012'],\n    ['Artisan', 'artist-card-artisan-013'],\n    ['Mei Naganowa', 'artist-card-mei-naganowa-014'],\n    [\"Evin a'k\", 'artist-card-evin-ak-015'],\n    ['BilliumMoto', 'artist-card-billiummoto-016'],\n    ['Elliot Hsu', 'artist-card-elliot-hsu-017'],\n    ['Yuzuki', 'artist-card-yuzuki-018'],\n    ['LucaProject', 'artist-card-lucaproject-019'],\n    ['Koway', 'artist-card-koway-020'],\n    ['伍一', 'artist-card-wuyi-021'],\n    ['Nstryder', 'artist-card-nstryder-022'],\n    ['MoAE', 'artist-card-moae-023'],\n    ['dystopian tanuki', 'artist-card-dystopian-tanuki-024'],\n    ['Heem', 'artist-card-heem-025'],\n    ['Woojinee', 'artist-card-woojinee-026'],\n    ['Bigg Milk', 'artist-card-bigg-milk-027'],\n    ['Gardens', 'artist-card-gardens-028'],\n    ['Sad Keyboard Guy', 'artist-card-sad-keyboard-guy-029'],\n    ['Futsuunohito', 'artist-card-futsuunohito-030'],\n    ['shishishiena', 'artist-card-shishishiena-031']\n  ]);\n\n  private readonly destroy$ = new Subject<void>();\n\n  // Project detection\n  private currentProject = signal<ProjectType>('phantasia2');\n\n  constructor(\n    private artistCreditService: ArtistCreditService,\n    private audioService: AudioService,\n    private currentlyPlayingService: CurrentlyPlayingArtistsService,\n    private dynamicArtistService: DynamicArtistService,\n    private musicStateManager: MusicStateManagerService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.detectCurrentProject();\n    this.initializeArtistCards();\n    this.setupRealtimeUpdates();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Detect current project based on URL\n   */\n  private detectCurrentProject(): void {\n    const url = this.router.url;\n    if (url.includes('phantasia1')) {\n      this.currentProject.set('phantasia1');\n    } else if (url.includes('phantasia2')) {\n      this.currentProject.set('phantasia2');\n    } else {\n      // Default to phantasia2 for backwards compatibility\n      this.currentProject.set('phantasia2');\n    }\n  }\n\n  /**\n   * Get all artists for current project\n   */\n  private getCurrentProjectArtists(): ArtistContribution[] {\n    const project = this.currentProject();\n    if (project === 'phantasia1') {\n      return this.artistCreditService.getAllPhantasia1Artists();\n    } else {\n      return this.artistCreditService.getAllPhantasia2Artists();\n    }\n  }\n\n  /**\n   * Initialize all artist cards with proper identifiers using centralized state manager\n   */\n  private initializeArtistCards(): void {\n    try {\n      const allArtists = this.getCurrentProjectArtists();\n      this.totalArtistsCount.set(allArtists.length);\n\n      // Create showcase artists (featured selection when not playing)\n      const showcaseSelection = this.createShowcaseSelection(allArtists);\n      this.showcaseArtists.set(showcaseSelection);\n\n      // Get initial state from music state manager\n      const initialFilteringState = this.musicStateManager.getCurrentArtistFilteringState();\n      this.updateCardsFromFilteringState(initialFilteringState);\n\n      this.isLoading.set(false);\n    } catch (error) {\n      console.error('[DynamicArtistCards] Error initializing artist cards:', error);\n      this.isLoading.set(false);\n    }\n  }\n\n  /**\n   * Setup real-time updates using centralized music state manager\n   */\n  private setupRealtimeUpdates(): void {\n    // PRIMARY: Listen to centralized music state manager for artist filtering changes\n    this.musicStateManager.artistFilteringState$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(filteringState => {\n      console.log('[DynamicArtistCards] Artist filtering state changed:',\n                  `Mode: ${filteringState.mode}, Current artists: ${filteringState.currentArtists.length}, All artists: ${filteringState.allArtists.length}`);\n\n      this.updateCardsFromFilteringState(filteringState);\n    });\n\n    // SECONDARY: Listen to display info updates\n    this.musicStateManager.displayInfo$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(displayInfo => {\n      console.log('[DynamicArtistCards] Display info updated:', displayInfo);\n    });\n\n    // FALLBACK: Keep legacy subscriptions for compatibility during transition\n    if (this.displayMode !== 'currently-playing') {\n      // Only use legacy subscriptions when not in currently-playing mode\n      this.setupLegacyFallbackUpdates();\n    }\n  }\n\n  /**\n   * Update cards specifically for a current track from DynamicArtistService\n   */\n  private updateCardsForCurrentTrack(track: TrackWithArtists): void {\n    const trackArtists: ArtistContribution[] = [];\n\n    // Add main artist\n    trackArtists.push({\n      id: `${track.id}-main`,\n      artistName: track.mainArtist,\n      artistDisplayName: track.mainArtist,\n      role: 'Main Artist' as any,\n      participationType: 'primary' as any,\n      percentageContribution: 100,\n      color: '#FF6B6B',\n      socialLinks: {}\n    });\n\n    // Add featured artists\n    track.features.forEach((feature, index) => {\n      trackArtists.push({\n        id: `${track.id}-featured-${index}`,\n        artistName: feature.name,\n        artistDisplayName: feature.name,\n        role: 'Featured Artist' as any,\n        participationType: 'featured' as any,\n        percentageContribution: 50,\n        color: '#ffffff', // Changed from cyan to white\n        socialLinks: feature.socialLinks\n      });\n    });\n\n    // Add collaborators\n    track.collaborators.forEach((collaborator, index) => {\n      trackArtists.push({\n        id: `${track.id}-collab-${index}`,\n        artistName: collaborator.name,\n        artistDisplayName: collaborator.name,\n        role: collaborator.role as any,\n        participationType: 'collaboration' as any,\n        percentageContribution: 25,\n        color: '#45B7D1',\n        socialLinks: collaborator.socialLinks\n      });\n    });\n\n    // Create artist cards\n    const playingCards = trackArtists.map(artist => this.createArtistCard(artist, true));\n    this.currentlyPlayingArtists.set(playingCards);\n    this.artistCards.set(playingCards.slice(0, this.maxVisibleCards));\n\n    console.log('[DynamicArtistCards] Updated cards for track:', track.title,\n                'Artists:', trackArtists.map(a => a.artistDisplayName));\n  }\n\n  /**\n   * Create artist card with unique identifier\n   */\n  private createArtistCard(artist: ArtistContribution, isCurrentlyPlaying = false): ArtistCardData {\n    const cardId = this.artistCardIds.get(artist.artistName) || \n                  `artist-card-${this.generateSlug(artist.artistName)}`;\n    \n    return {\n      id: cardId,\n      artist,\n      isCurrentlyPlaying,\n      participationLevel: this.determineParticipationLevel(artist),\n      displayPriority: this.calculateDisplayPriority(artist, isCurrentlyPlaying)\n    };\n  }\n\n  /**\n   * Create all artist cards for display\n   */\n  private createAllArtistCards(artists: ArtistContribution[]): ArtistCardData[] {\n    return artists.map(artist => this.createArtistCard(artist, false))\n                 .sort((a, b) => b.displayPriority - a.displayPriority);\n  }\n\n  /**\n   * Create curated showcase selection\n   */\n  private createShowcaseSelection(allArtists: ArtistContribution[]): ArtistCardData[] {\n    // Feature main artists, featured artists, and notable collaborators\n    const showcaseArtists = allArtists.filter(artist => {\n      const role = artist.role;\n      return role === 'Main Artist' || \n             role === 'Featured Artist' || \n             role === 'Vocalist' ||\n             artist.percentageContribution >= 15; // Significant contributors\n    });\n\n    return showcaseArtists.map(artist => this.createArtistCard(artist, false))\n                         .sort((a, b) => b.displayPriority - a.displayPriority)\n                         .slice(0, Math.max(this.maxVisibleCards, 8));\n  }\n\n  /**\n   * Determine participation level for styling\n   */\n  private determineParticipationLevel(artist: ArtistContribution): 'main' | 'featured' | 'collaboration' | 'additional' {\n    if (artist.role === 'Main Artist') return 'main';\n    if (artist.role === 'Featured Artist' || artist.role === 'Vocalist') return 'featured';\n    if (artist.percentageContribution >= 10) return 'collaboration';\n    return 'additional';\n  }\n\n  /**\n   * Calculate display priority for sorting\n   */\n  private calculateDisplayPriority(artist: ArtistContribution, isCurrentlyPlaying: boolean): number {\n    let priority = 0;\n    \n    // Playing artists get highest priority\n    if (isCurrentlyPlaying) priority += 1000;\n    \n    // Role-based priority\n    switch (artist.role) {\n      case 'Main Artist': priority += 500; break;\n      case 'Featured Artist': priority += 400; break;\n      case 'Vocalist': priority += 350; break;\n      case 'Producer': priority += 300; break;\n      case 'Composer': priority += 250; break;\n      default: priority += 100; break;\n    }\n    \n    // Contribution percentage bonus\n    priority += artist.percentageContribution;\n    \n    return priority;\n  }\n\n  /**\n   * Generate URL-safe slug from artist name\n   */\n  private generateSlug(name: string): string {\n    return name.toLowerCase()\n              .replace(/[^a-z0-9\\s-]/g, '')\n              .replace(/\\s+/g, '-')\n              .replace(/-+/g, '-')\n              .trim();\n  }\n\n  /**\n   * Get card by identifier\n   */\n  getCardById(cardId: string): ArtistCardData | undefined {\n    return this.artistCards().find(card => card.id === cardId);\n  }\n\n  /**\n   * Handle display mode changes dynamically\n   */\n  private handleDisplayModeChange(newMode: 'currently-playing' | 'showcase' | 'all'): void {\n    console.log('[DynamicArtistCards] Display mode changed to:', newMode);\n\n    if (newMode === 'showcase') {\n      // Switch to showcase mode - show curated featured artists\n      this.animationState.set('showcase');\n      const showcaseCards = this.showcaseArtists();\n      this.artistCards.set(showcaseCards);\n      console.log('[DynamicArtistCards] Switched to showcase mode - showing', showcaseCards.length, 'featured artists');\n    } else if (newMode === 'currently-playing') {\n      // Switch to currently-playing mode\n      this.animationState.set('currently-playing');\n      const currentlyPlaying = this.currentlyPlayingArtists();\n      if (currentlyPlaying.length > 0) {\n        this.artistCards.set(currentlyPlaying.slice(0, this.maxVisibleCards));\n        console.log('[DynamicArtistCards] Switched to currently-playing mode - showing', currentlyPlaying.length, 'artists');\n      } else {\n        // Fallback to showcase if no currently playing artists\n        console.log('[DynamicArtistCards] No currently playing artists - falling back to showcase');\n        this.handleDisplayModeChange('showcase');\n      }\n    } else if (newMode === 'all') {\n      // Show all artists\n      this.animationState.set('showcase'); // Use showcase animation for 'all' mode\n      const allArtists = this.getCurrentProjectArtists();\n      this.artistCards.set(this.createAllArtistCards(allArtists));\n    }\n  }\n\n  /**\n   * Track by function for ngFor optimization\n   */\n  /**\n   * Update cards from artist filtering state\n   */\n  private updateCardsFromFilteringState(filteringState: ArtistFilteringState): void {\n    if (filteringState.mode === 'music-playing' && filteringState.currentArtists.length > 0) {\n      // Music is playing - show current artists\n      const playingCards = filteringState.currentArtists.map(artist => this.createArtistCard(artist, true));\n      this.currentlyPlayingArtists.set(playingCards);\n      this.artistCards.set(playingCards.slice(0, this.maxVisibleCards));\n      this.animationState.set('currently-playing');\n\n      // Update current track if available\n      const musicState = this.musicStateManager.getCurrentMusicState();\n      this.currentTrack.set(musicState.currentTrack?.id || null);\n\n      console.log('[DynamicArtistCards] Updated to music-playing mode with', playingCards.length, 'artists');\n    } else {\n      // No music playing - show all artists in showcase mode\n      const allArtistCards = filteringState.allArtists.map(artist => this.createArtistCard(artist, false));\n      this.artistCards.set(allArtistCards.slice(0, this.maxVisibleCards));\n      this.showcaseArtists.set(allArtistCards);\n      this.currentlyPlayingArtists.set([]);\n      this.animationState.set('showcase');\n      this.currentTrack.set(null);\n\n      console.log('[DynamicArtistCards] Updated to no-music mode with', allArtistCards.length, 'artists');\n    }\n  }\n\n  /**\n   * Setup legacy fallback updates for compatibility\n   */\n  private setupLegacyFallbackUpdates(): void {\n    // Only used when not in currently-playing mode or during transition\n    this.currentlyPlayingService.currentlyPlayingArtists$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(playingArtists => {\n      // Only use legacy if music state manager hasn't provided current artists\n      const currentFilteringState = this.musicStateManager.getCurrentArtistFilteringState();\n      if (currentFilteringState.mode === 'no-music' && playingArtists.length > 0) {\n        console.log('[DynamicArtistCards] Using legacy fallback for', playingArtists.length, 'artists');\n      }\n    });\n  }\n\n  /**\n   * Track by function for ngFor optimization\n   */\n  trackByCardId(index: number, card: ArtistCardData): string {\n    return card.id;\n  }\n\n  /**\n   * Get current display title from music state manager\n   */\n  get displayTitle(): string {\n    const displayInfo = this.musicStateManager.getCurrentArtistFilteringState();\n    return displayInfo.displayTitle;\n  }\n\n  /**\n   * Get subtitle from music state manager\n   */\n  get displaySubtitle(): string {\n    const displayInfo = this.musicStateManager.getCurrentArtistFilteringState();\n    return displayInfo.displaySubtitle;\n  }\n}","<!-- Dynamic Artist Cards Container -->\n<div class=\"dynamic-artist-cards-container\" *ngIf=\"!isLoading()\">\n  \n  <!-- Header Section -->\n  <div class=\"cards-header\">\n    <h2 class=\"cards-title\">{{ displayTitle }}</h2>\n    <p class=\"cards-subtitle\">{{ displaySubtitle }}</p>\n  </div>\n\n  <!-- Artist Cards Grid -->\n  <div class=\"artist-cards-grid\"\n       [class.single-card]=\"artistCards().length === 1\"\n       [@cardsContainer]\n       [@modeTransition]=\"animationState()\"\n       *ngIf=\"artistCards().length > 0\">\n    \n    <app-artist-card\n      *ngFor=\"let cardData of artistCards(); trackBy: trackByCardId\"\n      [cardData]=\"cardData\"\n      [enableAnimations]=\"enableAnimations\"\n      [@cardUpdate]\n      class=\"artist-card\">\n    </app-artist-card>\n  </div>\n\n  <!-- No Artists State -->\n  <div class=\"no-artists-state\" *ngIf=\"artistCards().length === 0\">\n    <div class=\"no-artists-content\">\n      <div class=\"no-artists-icon\">♪</div>\n      <h3>No Artists to Display</h3>\n      <p>Play a track to see contributing artists.</p>\n    </div>\n  </div>\n\n  <!-- Info Panel (matches reference design) -->\n  <div class=\"artist-cards-info-panel\" *ngIf=\"currentTrack()\">\n    <div class=\"info-icon\">ℹ</div>\n    <span class=\"info-text\">\n      Artist cards update in real-time as different tracks play. \n      {{ currentlyPlayingArtists().length }} artists are currently featured.\n    </span>\n  </div>\n\n</div>\n\n<!-- Loading State -->\n<div class=\"cards-loading-container\" *ngIf=\"isLoading()\">\n  <div class=\"loading-content\">\n    <div class=\"loading-spinner\"></div>\n    <p>Loading artist cards...</p>\n  </div>\n</div>","import { Component, OnInit, signal, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { GelDbIntegrationService } from '../../core/services/geldb-integration.service';\n\ninterface SpecialMention {\n  id: string;\n  name: string;\n  role: string;\n  avatar: string;\n  color: string;\n  socialLinks: {\n    twitter?: string;\n    youtube?: string;\n    instagram?: string;\n    website?: string;\n  };\n}\n\n@Component({\n  selector: 'app-special-mentions',\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatButtonModule\n  ],\n  templateUrl: './special-mentions.component.html',\n  styleUrls: ['./special-mentions.component.scss']\n})\nexport class SpecialMentionsComponent implements OnInit {\n  readonly specialMentions = signal<SpecialMention[]>([]);\n\n  readonly displayedMentions = computed(() => {\n    return this.specialMentions().map(mention => ({\n      ...mention,\n      initials: this.getInitials(mention.name)\n    }));\n  });\n\n  // Split cards for left and right side display\n  readonly leftSideCards = computed(() => {\n    const mentions = this.displayedMentions();\n    const halfPoint = Math.ceil(mentions.length / 2);\n    return mentions.slice(0, halfPoint);\n  });\n\n  readonly rightSideCards = computed(() => {\n    const mentions = this.displayedMentions();\n    const halfPoint = Math.ceil(mentions.length / 2);\n    return mentions.slice(halfPoint);\n  });\n\n  constructor(private gelDbService: GelDbIntegrationService) {}\n\n  ngOnInit(): void {\n    this.loadSpecialMentionsFromDatabase();\n  }\n\n  private loadSpecialMentionsFromDatabase(): void {\n    // List of special mention artist names from the geldb (specialized collaborators)\n    const specialMentionNames = [\n      'SpiralFlip',     // Organiser\n      'PliXoR',         // Mastering Engineer\n      'NapaL',          // Cover Illustration\n      'yy_artwork',     // Logo/Jacket Design\n      'Elegant Sister', // Album Stream MV\n      'Len',            // Crossfade MV/Live2D\n      'Daph',           // Live2D\n      'honabai',        // Special Thanks\n      'shironill'       // Special Thanks\n    ];\n\n    const specialMentionsList: SpecialMention[] = specialMentionNames\n      .map(artistName => {\n        const avatar = this.gelDbService.getArtistAvatar(artistName);\n        const displayName = this.gelDbService.getArtistDisplayName(artistName);\n        const color = this.gelDbService.getArtistColor(artistName);\n        const socialLinks = this.gelDbService.getArtistSocialLinks(artistName);\n\n        // Get role from artist avatar map genre field\n        const avatarMap = this.gelDbService.getArtistAvatarMap();\n        const role = avatarMap[artistName]?.genre || 'Production Team';\n\n        return {\n          id: artistName.toLowerCase().replace(/\\s+/g, '-'),\n          name: displayName,\n          role: role,\n          avatar: avatar,\n          color: color,\n          socialLinks: {\n            twitter: socialLinks?.twitter,\n            youtube: socialLinks?.youtube,\n            instagram: socialLinks?.instagram,\n            website: socialLinks?.website\n          }\n        };\n      });\n\n    this.specialMentions.set(specialMentionsList);\n  }\n\n  private getInitials(name: string): string {\n    const words = name.split(' ').filter(word => word.length > 0);\n    if (words.length === 0) return '?';\n    if (words.length === 1) return words[0].substring(0, 2).toUpperCase();\n    return (words[0][0] + words[words.length - 1][0]).toUpperCase();\n  }\n\n  onCardClick(mention: SpecialMention): void {\n    if (mention.socialLinks.twitter) {\n      window.open(mention.socialLinks.twitter, '_blank', 'noopener,noreferrer');\n    } else if (mention.socialLinks.instagram) {\n      window.open(mention.socialLinks.instagram, '_blank', 'noopener,noreferrer');\n    } else if (mention.socialLinks.youtube) {\n      window.open(mention.socialLinks.youtube, '_blank', 'noopener,noreferrer');\n    } else if (mention.socialLinks.website) {\n      window.open(mention.socialLinks.website, '_blank', 'noopener,noreferrer');\n    }\n  }\n\n  onSocialLinkClick(url: string, event: Event): void {\n    event.stopPropagation();\n    window.open(url, '_blank', 'noopener,noreferrer');\n  }\n}","<!-- Special Mentions Three-Column Layout -->\n<div class=\"special-mentions-container\">\n  <!-- Section Header -->\n  <div class=\"section-header\">\n    <h3 class=\"section-title\">Special Thanks</h3>\n    <p class=\"section-subtitle\">Production Team</p>\n  </div>\n\n  <!-- Three-Column Layout: Left Cards | Main Content | Right Cards -->\n  <div class=\"three-column-layout\">\n\n    <!-- Left Side Cards Column -->\n    <div class=\"cards-column left-column\">\n      <div class=\"column-cards\">\n        @for (mention of leftSideCards(); track mention.id) {\n          <div class=\"compact-card vertical-card\"\n               (click)=\"onCardClick(mention)\"\n               [style.--accent-color]=\"mention.color\">\n\n            <!-- Avatar Section -->\n            <div class=\"compact-avatar\">\n              <img *ngIf=\"mention.avatar\"\n                   [src]=\"mention.avatar\"\n                   [alt]=\"mention.name + ' avatar'\"\n                   class=\"avatar-image\"\n                   loading=\"lazy\">\n\n              <!-- Initials Fallback -->\n              <div *ngIf=\"!mention.avatar\"\n                   class=\"avatar-initials\"\n                   [style.background]=\"mention.color\">\n                {{ mention.initials }}\n              </div>\n            </div>\n\n            <!-- Info Section -->\n            <div class=\"compact-info\">\n              <div class=\"artist-name\">{{ mention.name }}</div>\n              <div class=\"artist-role\">{{ mention.role }}</div>\n            </div>\n\n            <!-- Social Links -->\n            <div class=\"compact-social\" *ngIf=\"mention.socialLinks.twitter || mention.socialLinks.instagram\">\n              <button class=\"social-btn\"\n                      mat-icon-button\n                      [attr.aria-label]=\"mention.name + ' social link'\"\n                      (click)=\"mention.socialLinks.twitter ? onSocialLinkClick(mention.socialLinks.twitter!, $event) : onSocialLinkClick(mention.socialLinks.instagram!, $event)\">\n                <span *ngIf=\"mention.socialLinks.twitter\" class=\"twitter-x-icon\">𝕏</span>\n                <span *ngIf=\"mention.socialLinks.instagram && !mention.socialLinks.twitter\" class=\"instagram-icon\">📷</span>\n              </button>\n            </div>\n\n            <!-- Hover Effect -->\n            <div class=\"card-accent\"></div>\n          </div>\n        }\n      </div>\n    </div>\n\n    <!-- Main Content Area (for external content) -->\n    <div class=\"main-content-column\">\n      <div class=\"content-placeholder\">\n        <!-- This slot is intended for main content like artist cards -->\n        <ng-content></ng-content>\n      </div>\n    </div>\n\n    <!-- Right Side Cards Column -->\n    <div class=\"cards-column right-column\">\n      <div class=\"column-cards\">\n        @for (mention of rightSideCards(); track mention.id) {\n          <div class=\"compact-card vertical-card\"\n               (click)=\"onCardClick(mention)\"\n               [style.--accent-color]=\"mention.color\">\n\n            <!-- Avatar Section -->\n            <div class=\"compact-avatar\">\n              <img *ngIf=\"mention.avatar\"\n                   [src]=\"mention.avatar\"\n                   [alt]=\"mention.name + ' avatar'\"\n                   class=\"avatar-image\"\n                   loading=\"lazy\">\n\n              <!-- Initials Fallback -->\n              <div *ngIf=\"!mention.avatar\"\n                   class=\"avatar-initials\"\n                   [style.background]=\"mention.color\">\n                {{ mention.initials }}\n              </div>\n            </div>\n\n            <!-- Info Section -->\n            <div class=\"compact-info\">\n              <div class=\"artist-name\">{{ mention.name }}</div>\n              <div class=\"artist-role\">{{ mention.role }}</div>\n            </div>\n\n            <!-- Social Links -->\n            <div class=\"compact-social\" *ngIf=\"mention.socialLinks.twitter || mention.socialLinks.instagram\">\n              <button class=\"social-btn\"\n                      mat-icon-button\n                      [attr.aria-label]=\"mention.name + ' social link'\"\n                      (click)=\"mention.socialLinks.twitter ? onSocialLinkClick(mention.socialLinks.twitter!, $event) : onSocialLinkClick(mention.socialLinks.instagram!, $event)\">\n                <span *ngIf=\"mention.socialLinks.twitter\" class=\"twitter-x-icon\">𝕏</span>\n                <span *ngIf=\"mention.socialLinks.instagram && !mention.socialLinks.twitter\" class=\"instagram-icon\">📷</span>\n              </button>\n            </div>\n\n            <!-- Hover Effect -->\n            <div class=\"card-accent\"></div>\n          </div>\n        }\n      </div>\n    </div>\n\n  </div>\n</div>"],"mappings":"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","names":["HowlerGlobal","Howler","e","i","Howl","Sound","_c0","_c1","_c2","_c3","_c4","_c3","_c4","_c0","_c1","_c2","_c3","_c4","_c5","_c6","_c1","_c0","_c2","_c4","_c3","_c5","_c6","_AudioService","state","AudioService","state","AudioService","document","artists","_c0"],"x_google_ignoreList":[0,1,2,3,4,5,6]}