{"version":3,"sources":["node_modules/.pnpm/@angular+cdk@20.2.1_@angular+common@20.1.4_@angular+core@20.1.4_@angular+compiler@20.1._b1186cf6030b5c2736340dec250d600a/node_modules/@angular/cdk/fesm2022/platform2.mjs","node_modules/.pnpm/@angular+cdk@20.2.1_@angular+common@20.1.4_@angular+core@20.1.4_@angular+compiler@20.1._b1186cf6030b5c2736340dec250d600a/node_modules/@angular/cdk/fesm2022/array.mjs","node_modules/.pnpm/@angular+cdk@20.2.1_@angular+common@20.1.4_@angular+core@20.1.4_@angular+compiler@20.1._b1186cf6030b5c2736340dec250d600a/node_modules/@angular/cdk/fesm2022/breakpoints-observer.mjs","node_modules/.pnpm/@angular+cdk@20.2.1_@angular+common@20.1.4_@angular+core@20.1.4_@angular+compiler@20.1._b1186cf6030b5c2736340dec250d600a/node_modules/@angular/cdk/fesm2022/layout.mjs","src/app/shared/services/responsive.service.ts","src/app/shared/directives/responsive.directive.ts","src/app/shared/components/site-header/site-header.component.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { inject, PLATFORM_ID, Injectable } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n} catch {\n  hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n  _platformId = inject(PLATFORM_ID);\n  // We want to use the Angular platform check because if the Document is shimmed\n  // without the navigator, the following checks will fail. This is preferred because\n  // sometimes the Document may be shimmed without the user's knowledge or intention\n  /** Whether the Angular application is being rendered in the browser. */\n  isBrowser = this._platformId ? isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n  /** Whether the current browser is Microsoft Edge. */\n  EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n  /** Whether the current rendering engine is Microsoft Trident. */\n  TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n  // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n  /** Whether the current rendering engine is Blink. */\n  BLINK = this.isBrowser && !!(window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT;\n  // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n  // ensure that Webkit runs standalone and is not used as another engine's base.\n  /** Whether the current rendering engine is WebKit. */\n  WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n  /** Whether the current platform is Apple iOS. */\n  IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n  // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n  // them self as Gecko-like browsers and modify the userAgent's according to that.\n  // Since we only cover one explicit Firefox case, we can simply check for Firefox\n  // instead of having an unstable check for Gecko.\n  /** Whether the current browser is Firefox. */\n  FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n  /** Whether the current platform is Android. */\n  // Trident on mobile adds the android platform to the userAgent to trick detections.\n  ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n  // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n  // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n  // Safari browser should also use Webkit as its layout engine.\n  /** Whether the current browser is Safari. */\n  SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n  constructor() {}\n  static ɵfac = function Platform_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || Platform)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: Platform,\n    factory: Platform.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Platform, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\nexport { Platform };\n","function coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\nexport { coerceArray };\n\n","import * as i0 from '@angular/core';\nimport { inject, CSP_NONCE, Injectable, NgZone } from '@angular/core';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport { Platform } from './platform2.mjs';\nimport { coerceArray } from './array.mjs';\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n  _platform = inject(Platform);\n  _nonce = inject(CSP_NONCE, {\n    optional: true\n  });\n  /** The internal matchMedia method to return back a MediaQueryList like object. */\n  _matchMedia;\n  constructor() {\n    this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n    // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n    // call it from a different scope.\n    window.matchMedia.bind(window) : noopMatchMedia;\n  }\n  /**\n   * Evaluates the given media query and returns the native MediaQueryList from which results\n   * can be retrieved.\n   * Confirms the layout engine will trigger for the selector query provided and returns the\n   * MediaQueryList for the query provided.\n   */\n  matchMedia(query) {\n    if (this._platform.WEBKIT || this._platform.BLINK) {\n      createEmptyStyleRule(query, this._nonce);\n    }\n    return this._matchMedia(query);\n  }\n  static ɵfac = function MediaMatcher_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MediaMatcher)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: MediaMatcher,\n    factory: MediaMatcher.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MediaMatcher, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      if (nonce) {\n        mediaQueryStyleNode.setAttribute('nonce', nonce);\n      }\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head.appendChild(mediaQueryStyleNode);\n    }\n    if (mediaQueryStyleNode.sheet) {\n      mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n  // Use `as any` here to avoid adding additional necessary properties for\n  // the noop matcher.\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {},\n    removeListener: () => {}\n  };\n}\n\n/** Utility for checking the matching state of `@media` queries. */\nclass BreakpointObserver {\n  _mediaMatcher = inject(MediaMatcher);\n  _zone = inject(NgZone);\n  /**  A map of all media queries currently being listened for. */\n  _queries = new Map();\n  /** A subject for all other observables to takeUntil based on. */\n  _destroySubject = new Subject();\n  constructor() {}\n  /** Completes the active subject, signalling to all other observables to complete. */\n  ngOnDestroy() {\n    this._destroySubject.next();\n    this._destroySubject.complete();\n  }\n  /**\n   * Whether one or more media queries match the current viewport size.\n   * @param value One or more media queries to check.\n   * @returns Whether any of the media queries match.\n   */\n  isMatched(value) {\n    const queries = splitQueries(coerceArray(value));\n    return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n  }\n  /**\n   * Gets an observable of results for the given queries that will emit new results for any changes\n   * in matching of the given queries.\n   * @param value One or more media queries to check.\n   * @returns A stream of matches for the given queries.\n   */\n  observe(value) {\n    const queries = splitQueries(coerceArray(value));\n    const observables = queries.map(query => this._registerQuery(query).observable);\n    let stateObservable = combineLatest(observables);\n    // Emit the first state immediately, and then debounce the subsequent emissions.\n    stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n    return stateObservable.pipe(map(breakpointStates => {\n      const response = {\n        matches: false,\n        breakpoints: {}\n      };\n      breakpointStates.forEach(({\n        matches,\n        query\n      }) => {\n        response.matches = response.matches || matches;\n        response.breakpoints[query] = matches;\n      });\n      return response;\n    }));\n  }\n  /** Registers a specific query to be listened for. */\n  _registerQuery(query) {\n    // Only set up a new MediaQueryList if it is not already being listened for.\n    if (this._queries.has(query)) {\n      return this._queries.get(query);\n    }\n    const mql = this._mediaMatcher.matchMedia(query);\n    // Create callback for match changes and add it is as a listener.\n    const queryObservable = new Observable(observer => {\n      // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n      // back into the zone because matchMedia is only included in Zone.js by loading the\n      // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n      // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n      // patches it.\n      const handler = e => this._zone.run(() => observer.next(e));\n      mql.addListener(handler);\n      return () => {\n        mql.removeListener(handler);\n      };\n    }).pipe(startWith(mql), map(({\n      matches\n    }) => ({\n      query,\n      matches\n    })), takeUntil(this._destroySubject));\n    // Add the MediaQueryList to the set of queries.\n    const output = {\n      observable: queryObservable,\n      mql\n    };\n    this._queries.set(query, output);\n    return output;\n  }\n  static ɵfac = function BreakpointObserver_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || BreakpointObserver)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: BreakpointObserver,\n    factory: BreakpointObserver.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BreakpointObserver, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n  return queries.map(query => query.split(',')).reduce((a1, a2) => a1.concat(a2)).map(query => query.trim());\n}\nexport { BreakpointObserver, MediaMatcher };\n","import * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nexport { BreakpointObserver, MediaMatcher } from './breakpoints-observer.mjs';\nimport 'rxjs';\nimport 'rxjs/operators';\nimport './platform2.mjs';\nimport '@angular/common';\nimport './array.mjs';\nclass LayoutModule {\n  static ɵfac = function LayoutModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || LayoutModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: LayoutModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n  XSmall: '(max-width: 599.98px)',\n  Small: '(min-width: 600px) and (max-width: 959.98px)',\n  Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n  Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n  XLarge: '(min-width: 1920px)',\n  Handset: '(max-width: 599.98px) and (orientation: portrait), ' + '(max-width: 959.98px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',\n  HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n  HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\nexport { Breakpoints, LayoutModule };\n","import { Injectable, computed, signal } from '@angular/core';\nimport { BreakpointObserver, Breakpoints, BreakpointState } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { Observable, combineLatest } from 'rxjs';\n\n/**\n * Comprehensive breakpoint definitions for the Phantasia Collections application\n * Following industry best practices for responsive design\n * 【✓】\n */\nexport const PHANTASIA_BREAKPOINTS = {\n  // Mobile breakpoints\n  XS: '(max-width: 319px)',        // Extra small mobile\n  SM: '(min-width: 320px) and (max-width: 767px)',  // Mobile\n  \n  // Tablet breakpoints  \n  MD: '(min-width: 768px) and (max-width: 1023px)', // Tablet\n  \n  // Desktop breakpoints\n  LG: '(min-width: 1024px) and (max-width: 1439px)', // Desktop\n  XL: '(min-width: 1440px) and (max-width: 2559px)', // Large Desktop\n  XXL: '(min-width: 2560px)',      // Ultra-wide\n  \n  // Specific device orientations\n  MOBILE_PORTRAIT: '(max-width: 767px) and (orientation: portrait)',\n  MOBILE_LANDSCAPE: '(max-width: 1023px) and (orientation: landscape)',\n  TABLET_PORTRAIT: '(min-width: 768px) and (max-width: 1023px) and (orientation: portrait)',\n  TABLET_LANDSCAPE: '(min-width: 768px) and (max-width: 1279px) and (orientation: landscape)',\n  \n  // Touch and hover capabilities\n  TOUCH_DEVICE: '(hover: none) and (pointer: coarse)',\n  HOVER_DEVICE: '(hover: hover) and (pointer: fine)',\n  \n  // High DPI displays\n  RETINA: '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)',\n  \n  // Height-based breakpoints for viewport considerations\n  SHORT_HEIGHT: '(max-height: 600px)',\n  TALL_HEIGHT: '(min-height: 900px)',\n} as const;\n\n/**\n * Device type enumeration for easy component logic\n * 【✓】\n */\nexport enum DeviceType {\n  MOBILE = 'mobile',\n  TABLET = 'tablet', \n  DESKTOP = 'desktop',\n  LARGE_DESKTOP = 'large-desktop',\n  ULTRA_WIDE = 'ultra-wide'\n}\n\n/**\n * Screen size information interface\n * 【✓】\n */\nexport interface ScreenInfo {\n  readonly deviceType: DeviceType;\n  readonly isMobile: boolean;\n  readonly isTablet: boolean;\n  readonly isDesktop: boolean;\n  readonly isLargeDesktop: boolean;\n  readonly isUltraWide: boolean;\n  readonly isPortrait: boolean;\n  readonly isLandscape: boolean;\n  readonly isTouchDevice: boolean;\n  readonly isHoverCapable: boolean;\n  readonly isRetina: boolean;\n  readonly isShortHeight: boolean;\n  readonly isTallHeight: boolean;\n  readonly breakpointName: string;\n}\n\n/**\n * Professional responsive design service for the Phantasia Collections application\n * \n * Provides comprehensive breakpoint management, device detection, and responsive utilities\n * using Angular CDK BreakpointObserver for optimal performance and reliability.\n * \n * Features:\n * - Professional breakpoint system (XS, SM, MD, LG, XL, XXL)\n * - Device type detection (mobile, tablet, desktop variants)\n * - Touch and hover capability detection\n * - High DPI/Retina display detection\n * - Orientation change handling\n * - Height-based breakpoints for viewport considerations\n * - Signal-based reactive state management\n * \n * Usage:\n * ```typescript\n * constructor(private responsive: ResponsiveService) {}\n * \n * ngOnInit() {\n *   // Get current screen information\n *   const screenInfo = this.responsive.getScreenInfo();\n *   \n *   // Subscribe to screen changes\n *   this.responsive.screenInfo$.subscribe(info => {\n *     if (info.isMobile) {\n *       // Mobile-specific logic\n *     }\n *   });\n *   \n *   // Use computed signals for reactive UI\n *   this.isMobileLayout = this.responsive.isMobile;\n * }\n * ```\n * 【✓】\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponsiveService {\n  \n  // Private breakpoint observables using Angular CDK\n  private readonly isXS$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.XS);\n  private readonly isSM$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.SM);\n  private readonly isMD$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.MD);\n  private readonly isLG$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.LG);\n  private readonly isXL$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.XL);\n  private readonly isXXL$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.XXL);\n  \n  // Orientation observables\n  private readonly isMobilePortrait$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.MOBILE_PORTRAIT);\n  private readonly isMobileLandscape$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.MOBILE_LANDSCAPE);\n  private readonly isTabletPortrait$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.TABLET_PORTRAIT);\n  private readonly isTabletLandscape$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.TABLET_LANDSCAPE);\n  \n  // Device capability observables\n  private readonly isTouchDevice$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.TOUCH_DEVICE);\n  private readonly isHoverCapable$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.HOVER_DEVICE);\n  private readonly isRetina$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.RETINA);\n  \n  // Height-based observables\n  private readonly isShortHeight$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.SHORT_HEIGHT);\n  private readonly isTallHeight$ = this.breakpointObserver.observe(PHANTASIA_BREAKPOINTS.TALL_HEIGHT);\n  \n  // Combined screen information observable\n  public readonly screenInfo$: Observable<ScreenInfo> = combineLatest([\n    this.isXS$, this.isSM$, this.isMD$, this.isLG$, this.isXL$, this.isXXL$,\n    this.isMobilePortrait$, this.isMobileLandscape$, this.isTabletPortrait$, this.isTabletLandscape$,\n    this.isTouchDevice$, this.isHoverCapable$, this.isRetina$,\n    this.isShortHeight$, this.isTallHeight$\n  ]).pipe(\n    map(([xs, sm, md, lg, xl, xxl, mobilePortrait, mobileLandscape, tabletPortrait, tabletLandscape, touchDevice, hoverCapable, retina, shortHeight, tallHeight]) => {\n      \n      // Determine device type and breakpoint\n      let deviceType: DeviceType;\n      let breakpointName: string;\n      \n      if (xs.matches) {\n        deviceType = DeviceType.MOBILE;\n        breakpointName = 'XS';\n      } else if (sm.matches) {\n        deviceType = DeviceType.MOBILE;\n        breakpointName = 'SM';\n      } else if (md.matches) {\n        deviceType = DeviceType.TABLET;\n        breakpointName = 'MD';\n      } else if (lg.matches) {\n        deviceType = DeviceType.DESKTOP;\n        breakpointName = 'LG';\n      } else if (xl.matches) {\n        deviceType = DeviceType.LARGE_DESKTOP;\n        breakpointName = 'XL';\n      } else {\n        deviceType = DeviceType.ULTRA_WIDE;\n        breakpointName = 'XXL';\n      }\n      \n      const isMobile = xs.matches || sm.matches;\n      const isTablet = md.matches;\n      const isDesktop = lg.matches;\n      const isLargeDesktop = xl.matches;\n      const isUltraWide = xxl.matches;\n      \n      // Determine orientation\n      const isPortrait = mobilePortrait.matches || tabletPortrait.matches || \n                        (!mobileLandscape.matches && !tabletLandscape.matches && window.innerHeight > window.innerWidth);\n      const isLandscape = !isPortrait;\n      \n      const screenInfo: ScreenInfo = {\n        deviceType,\n        isMobile,\n        isTablet,\n        isDesktop,\n        isLargeDesktop,\n        isUltraWide,\n        isPortrait,\n        isLandscape,\n        isTouchDevice: touchDevice.matches,\n        isHoverCapable: hoverCapable.matches,\n        isRetina: retina.matches,\n        isShortHeight: shortHeight.matches,\n        isTallHeight: tallHeight.matches,\n        breakpointName\n      };\n      \n      return screenInfo;\n    }),\n    shareReplay(1)\n  );\n  \n  // Reactive signals for easy component consumption\n  private readonly _screenInfo = signal<ScreenInfo>({\n    deviceType: DeviceType.DESKTOP,\n    isMobile: false,\n    isTablet: false,\n    isDesktop: true,\n    isLargeDesktop: false,\n    isUltraWide: false,\n    isPortrait: false,\n    isLandscape: true,\n    isTouchDevice: false,\n    isHoverCapable: true,\n    isRetina: false,\n    isShortHeight: false,\n    isTallHeight: false,\n    breakpointName: 'LG'\n  });\n  \n  // Public computed signals for component consumption\n  public readonly screenInfo = this._screenInfo.asReadonly();\n  public readonly isMobile = computed(() => this._screenInfo().isMobile);\n  public readonly isTablet = computed(() => this._screenInfo().isTablet);\n  public readonly isDesktop = computed(() => this._screenInfo().isDesktop);\n  public readonly isLargeDesktop = computed(() => this._screenInfo().isLargeDesktop);\n  public readonly isUltraWide = computed(() => this._screenInfo().isUltraWide);\n  public readonly isPortrait = computed(() => this._screenInfo().isPortrait);\n  public readonly isLandscape = computed(() => this._screenInfo().isLandscape);\n  public readonly isTouchDevice = computed(() => this._screenInfo().isTouchDevice);\n  public readonly isHoverCapable = computed(() => this._screenInfo().isHoverCapable);\n  public readonly isRetina = computed(() => this._screenInfo().isRetina);\n  public readonly deviceType = computed(() => this._screenInfo().deviceType);\n  public readonly breakpointName = computed(() => this._screenInfo().breakpointName);\n  \n  constructor(private readonly breakpointObserver: BreakpointObserver) {\n    // Initialize signal with current screen information\n    this.screenInfo$.subscribe(info => {\n      this._screenInfo.set(info);\n    });\n  }\n  \n  /**\n   * Get current screen information synchronously\n   * 【✓】\n   */\n  getScreenInfo(): ScreenInfo {\n    return this._screenInfo();\n  }\n  \n  /**\n   * Check if device matches specific breakpoint\n   * 【✓】\n   */\n  matches(breakpoint: string): Observable<boolean> {\n    return this.breakpointObserver.observe(breakpoint).pipe(\n      map(result => result.matches)\n    );\n  }\n  \n  /**\n   * Check if device matches any of the provided breakpoints\n   * 【✓】\n   */\n  matchesAny(breakpoints: string[]): Observable<boolean> {\n    return this.breakpointObserver.observe(breakpoints).pipe(\n      map(result => result.matches)\n    );\n  }\n  \n  /**\n   * Get optimal number of columns for grid layouts based on screen size\n   * 【✓】\n   */\n  getGridColumns(): number {\n    const info = this.getScreenInfo();\n    \n    if (info.isMobile) return 1;\n    if (info.isTablet) return 2;\n    if (info.isDesktop) return 3;\n    if (info.isLargeDesktop) return 4;\n    return 5; // Ultra-wide\n  }\n  \n  /**\n   * Get optimal content max-width based on screen size\n   * 【✓】\n   */\n  getContentMaxWidth(): string {\n    const info = this.getScreenInfo();\n    \n    if (info.isMobile) return '100%';\n    if (info.isTablet) return '768px';\n    if (info.isDesktop) return '1024px';\n    if (info.isLargeDesktop) return '1200px';\n    return '1400px'; // Ultra-wide\n  }\n  \n  /**\n   * Get optimal spacing scale based on screen size\n   * 【✓】\n   */\n  getSpacingScale(): number {\n    const info = this.getScreenInfo();\n    \n    if (info.isMobile) return 0.75;  // 75% of base spacing\n    if (info.isTablet) return 0.9;   // 90% of base spacing\n    if (info.isDesktop) return 1.0;  // Base spacing\n    if (info.isLargeDesktop) return 1.1;  // 110% of base spacing\n    return 1.2; // 120% for ultra-wide\n  }\n  \n  /**\n   * Get optimal typography scale based on screen size\n   * 【✓】\n   */\n  getTypographyScale(): number {\n    const info = this.getScreenInfo();\n    \n    if (info.isMobile) return 0.85;  // Smaller text on mobile\n    if (info.isTablet) return 0.95;  // Slightly smaller on tablet\n    if (info.isDesktop) return 1.0;  // Base size\n    if (info.isLargeDesktop) return 1.05;  // Slightly larger\n    return 1.1; // Larger text for ultra-wide\n  }\n  \n  /**\n   * Check if reduced motion is preferred (accessibility)\n   * 【✓】\n   */\n  prefersReducedMotion(): boolean {\n    return window.matchMedia('(prefers-reduced-motion: reduce)').matches;\n  }\n  \n  /**\n   * Check if dark mode is preferred\n   * 【✓】\n   */\n  prefersDarkMode(): boolean {\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\n  }\n  \n  /**\n   * Get safe area insets for devices with notches\n   * 【✓】\n   */\n  getSafeAreaInsets(): { top: string; right: string; bottom: string; left: string } {\n    const computedStyle = getComputedStyle(document.documentElement);\n    \n    return {\n      top: computedStyle.getPropertyValue('env(safe-area-inset-top)') || '0px',\n      right: computedStyle.getPropertyValue('env(safe-area-inset-right)') || '0px',\n      bottom: computedStyle.getPropertyValue('env(safe-area-inset-bottom)') || '0px',\n      left: computedStyle.getPropertyValue('env(safe-area-inset-left)') || '0px'\n    };\n  }\n}","import { Directive, Input, TemplateRef, ViewContainerRef, OnInit, OnDestroy, inject } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ResponsiveService, DeviceType } from '../services/responsive.service';\n\n/**\n * Structural directive for conditional rendering based on screen size\n * \n * Usage examples:\n * ```html\n * <!-- Show only on mobile devices -->\n * <div *appResponsive=\"'mobile'\">Mobile content</div>\n * \n * <!-- Show on tablet and above -->\n * <div *appResponsive=\"['tablet', 'desktop', 'large-desktop', 'ultra-wide']\">Desktop content</div>\n * \n * <!-- Show on desktop and above -->\n * <div *appResponsiveFrom=\"'desktop'\">Desktop+ content</div>\n * \n * <!-- Show only up to tablet -->\n * <div *appResponsiveTo=\"'tablet'\">Mobile + Tablet content</div>\n * \n * <!-- Show on touch devices -->\n * <div *appResponsive=\"'touch'\">Touch-specific content</div>\n * \n * <!-- Show on hover-capable devices -->\n * <div *appResponsive=\"'hover'\">Hover-capable content</div>\n * ```\n * 【✓】\n */\n@Directive({\n  selector: '[appResponsive]',\n  standalone: true\n})\nexport class ResponsiveDirective implements OnInit, OnDestroy {\n  \n  private readonly destroy$ = new Subject<void>();\n  private readonly responsiveService = inject(ResponsiveService);\n  private readonly templateRef = inject(TemplateRef<any>);\n  private readonly viewContainer = inject(ViewContainerRef);\n  \n  private hasView = false;\n  \n  @Input('appResponsive') \n  set responsive(value: string | string[] | DeviceType | DeviceType[]) {\n    this.targetDevices = Array.isArray(value) ? value : [value];\n    this.updateView();\n  }\n  \n  private targetDevices: (string | DeviceType)[] = [];\n  \n  ngOnInit(): void {\n    // Subscribe to screen info changes\n    this.responsiveService.screenInfo$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.updateView();\n      });\n  }\n  \n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  \n  private updateView(): void {\n    const screenInfo = this.responsiveService.getScreenInfo();\n    const shouldShow = this.shouldShowForCurrentDevice(screenInfo);\n    \n    if (shouldShow && !this.hasView) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.hasView = true;\n    } else if (!shouldShow && this.hasView) {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n  \n  private shouldShowForCurrentDevice(screenInfo: any): boolean {\n    return this.targetDevices.some(target => {\n      switch (target) {\n        case 'mobile':\n          return screenInfo.isMobile;\n        case 'tablet':\n          return screenInfo.isTablet;\n        case 'desktop':\n          return screenInfo.isDesktop;\n        case 'large-desktop':\n          return screenInfo.isLargeDesktop;\n        case 'ultra-wide':\n          return screenInfo.isUltraWide;\n        case 'touch':\n          return screenInfo.isTouchDevice;\n        case 'hover':\n          return screenInfo.isHoverCapable;\n        case 'portrait':\n          return screenInfo.isPortrait;\n        case 'landscape':\n          return screenInfo.isLandscape;\n        case 'retina':\n          return screenInfo.isRetina;\n        case DeviceType.MOBILE:\n          return screenInfo.isMobile;\n        case DeviceType.TABLET:\n          return screenInfo.isTablet;\n        case DeviceType.DESKTOP:\n          return screenInfo.isDesktop;\n        case DeviceType.LARGE_DESKTOP:\n          return screenInfo.isLargeDesktop;\n        case DeviceType.ULTRA_WIDE:\n          return screenInfo.isUltraWide;\n        default:\n          return false;\n      }\n    });\n  }\n}\n\n/**\n * Structural directive for showing content from a specific breakpoint and up\n * \n * Usage:\n * ```html\n * <div *appResponsiveFrom=\"'tablet'\">Shows on tablet and larger</div>\n * ```\n * 【✓】\n */\n@Directive({\n  selector: '[appResponsiveFrom]',\n  standalone: true\n})\nexport class ResponsiveFromDirective implements OnInit, OnDestroy {\n  \n  private readonly destroy$ = new Subject<void>();\n  private readonly responsiveService = inject(ResponsiveService);\n  private readonly templateRef = inject(TemplateRef<any>);\n  private readonly viewContainer = inject(ViewContainerRef);\n  \n  private hasView = false;\n  \n  @Input('appResponsiveFrom') \n  set responsiveFrom(value: string | DeviceType) {\n    this.fromDevice = value;\n    this.updateView();\n  }\n  \n  private fromDevice: string | DeviceType = 'mobile';\n  \n  ngOnInit(): void {\n    this.responsiveService.screenInfo$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.updateView();\n      });\n  }\n  \n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  \n  private updateView(): void {\n    const screenInfo = this.responsiveService.getScreenInfo();\n    const shouldShow = this.shouldShowFromDevice(screenInfo);\n    \n    if (shouldShow && !this.hasView) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.hasView = true;\n    } else if (!shouldShow && this.hasView) {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n  \n  private shouldShowFromDevice(screenInfo: any): boolean {\n    const deviceOrder = ['mobile', 'tablet', 'desktop', 'large-desktop', 'ultra-wide'];\n    const currentDeviceIndex = this.getDeviceIndex(screenInfo.deviceType);\n    const fromDeviceIndex = this.getDeviceIndex(this.fromDevice);\n    \n    return currentDeviceIndex >= fromDeviceIndex;\n  }\n  \n  private getDeviceIndex(device: string | DeviceType): number {\n    const deviceMap: Record<string, number> = {\n      'mobile': 0,\n      'tablet': 1,\n      'desktop': 2,\n      'large-desktop': 3,\n      'ultra-wide': 4\n    };\n    \n    // Handle enum values\n    if (typeof device === 'string') {\n      return deviceMap[device] ?? 0;\n    } else {\n      // Convert enum to string mapping\n      const enumToString: Record<DeviceType, string> = {\n        [DeviceType.MOBILE]: 'mobile',\n        [DeviceType.TABLET]: 'tablet',\n        [DeviceType.DESKTOP]: 'desktop',\n        [DeviceType.LARGE_DESKTOP]: 'large-desktop',\n        [DeviceType.ULTRA_WIDE]: 'ultra-wide'\n      };\n      \n      return deviceMap[enumToString[device]] ?? 0;\n    }\n  }\n}\n\n/**\n * Structural directive for showing content up to a specific breakpoint\n * \n * Usage:\n * ```html\n * <div *appResponsiveTo=\"'tablet'\">Shows on mobile and tablet only</div>\n * ```\n * 【✓】\n */\n@Directive({\n  selector: '[appResponsiveTo]',\n  standalone: true\n})\nexport class ResponsiveToDirective implements OnInit, OnDestroy {\n  \n  private readonly destroy$ = new Subject<void>();\n  private readonly responsiveService = inject(ResponsiveService);\n  private readonly templateRef = inject(TemplateRef<any>);\n  private readonly viewContainer = inject(ViewContainerRef);\n  \n  private hasView = false;\n  \n  @Input('appResponsiveTo') \n  set responsiveTo(value: string | DeviceType) {\n    this.toDevice = value;\n    this.updateView();\n  }\n  \n  private toDevice: string | DeviceType = 'ultra-wide';\n  \n  ngOnInit(): void {\n    this.responsiveService.screenInfo$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n        this.updateView();\n      });\n  }\n  \n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n  \n  private updateView(): void {\n    const screenInfo = this.responsiveService.getScreenInfo();\n    const shouldShow = this.shouldShowToDevice(screenInfo);\n    \n    if (shouldShow && !this.hasView) {\n      this.viewContainer.createEmbeddedView(this.templateRef);\n      this.hasView = true;\n    } else if (!shouldShow && this.hasView) {\n      this.viewContainer.clear();\n      this.hasView = false;\n    }\n  }\n  \n  private shouldShowToDevice(screenInfo: any): boolean {\n    const deviceOrder = ['mobile', 'tablet', 'desktop', 'large-desktop', 'ultra-wide'];\n    const currentDeviceIndex = this.getDeviceIndex(screenInfo.deviceType);\n    const toDeviceIndex = this.getDeviceIndex(this.toDevice);\n    \n    return currentDeviceIndex <= toDeviceIndex;\n  }\n  \n  private getDeviceIndex(device: string | DeviceType): number {\n    const deviceMap: Record<string, number> = {\n      'mobile': 0,\n      'tablet': 1,\n      'desktop': 2,\n      'large-desktop': 3,\n      'ultra-wide': 4\n    };\n    \n    // Handle enum values\n    if (typeof device === 'string') {\n      return deviceMap[device] ?? 4;\n    } else {\n      // Convert enum to string mapping\n      const enumToString: Record<DeviceType, string> = {\n        [DeviceType.MOBILE]: 'mobile',\n        [DeviceType.TABLET]: 'tablet',\n        [DeviceType.DESKTOP]: 'desktop',\n        [DeviceType.LARGE_DESKTOP]: 'large-desktop',\n        [DeviceType.ULTRA_WIDE]: 'ultra-wide'\n      };\n      \n      return deviceMap[enumToString[device]] ?? 4;\n    }\n  }\n}","import { Component, OnInit, ChangeDetectionStrategy, signal } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\nimport { ResponsiveService } from '../../services/responsive.service';\nimport { ResponsiveDirective, ResponsiveFromDirective, ResponsiveToDirective } from '../../directives/responsive.directive';\n\n/**\n * Shared site header component\n * Provides navigation between different views and collections\n * Uses global styles from collection-header-global.scss\n * 【✓】\n */\n@Component({\n  selector: 'app-site-header',\n  standalone: true,\n  imports: [CommonModule, RouterModule, ResponsiveDirective, ResponsiveFromDirective, ResponsiveToDirective],\n  template: `\n    <header class=\"site-header\">\n      <div class=\"header-container\">\n        <!-- Site Logo/Title -->\n        <div class=\"logo-container\">\n          <a class=\"logo-link\" [routerLink]=\"['/']\">\n            <img src=\"/assets/images/logos/prismcoll_logox.svg\" alt=\"Prismatic Collections\" class=\"logo-image\">\n          </a>\n        </div>\n\n        <!-- Mobile Menu Button -->\n        <button class=\"mobile-menu-toggle\" (click)=\"toggleMobileMenu()\" *appResponsiveTo=\"'tablet'\">\n          <span class=\"hamburger-line\"></span>\n          <span class=\"hamburger-line\"></span>\n          <span class=\"hamburger-line\"></span>\n        </button>\n\n        <!-- Desktop Navigation -->\n        <nav class=\"site-nav\" *appResponsiveFrom=\"'desktop'\">\n          <!-- Home Link -->\n          <div class=\"nav-section home-tabs\">\n            <ul>\n              <li class=\"home-tab\" [class.active]=\"isActiveRoute('/')\" [routerLink]=\"['/']\">\n                <span class=\"page-name\">Home</span>\n                <span class=\"page-description\">Landing Page</span>\n              </li>\n            </ul>\n          </div>\n\n          <!-- Collection Tab -->\n          <div class=\"nav-section collection-tabs\">\n            <ul>\n              <li [class.active]=\"isActiveRoute('/collections')\" [routerLink]=\"['/collections']\">\n                <span class=\"page-name\">Gallery</span>\n                <span class=\"page-description\">Library</span>\n              </li>\n            </ul>\n          </div>\n\n          <!-- News Tab -->\n          <div class=\"nav-section news-tabs\">\n            <ul>\n              <li [class.active]=\"isActiveRoute('/news')\" [routerLink]=\"['/news']\">\n                <span class=\"page-name\">News</span>\n                <span class=\"page-description\">Updates</span>\n              </li>\n            </ul>\n          </div>\n\n          <!-- Social Links Tab -->\n          <div class=\"nav-section experience-tabs\">\n            <ul>\n              <li [class.active]=\"isActiveRoute('/socials')\" [routerLink]=\"['/socials']\">\n                <span class=\"page-name\">Circles</span>\n                <span class=\"page-description\">Socials</span>\n              </li>\n            </ul>\n          </div>\n        </nav>\n\n        <!-- Tablet Navigation (Compact) -->\n        <nav class=\"site-nav tablet-nav\" *appResponsive=\"'tablet'\">\n          <div class=\"nav-section\">\n            <ul>\n              <li [class.active]=\"isActiveRoute('/')\" [routerLink]=\"['/']\">\n                <span class=\"page-name\">Home</span>\n              </li>\n              <li [class.active]=\"isActiveRoute('/collections')\" [routerLink]=\"['/collections']\">\n                <span class=\"page-name\">Gallery</span>\n              </li>\n              <li [class.active]=\"isActiveRoute('/news')\" [routerLink]=\"['/news']\">\n                <span class=\"page-name\">News</span>\n              </li>\n              <li [class.active]=\"isActiveRoute('/socials')\" [routerLink]=\"['/socials']\">\n                <span class=\"page-name\">Socials</span>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n\n      <!-- Mobile Overlay Menu -->\n      <div class=\"mobile-menu-overlay\" \n           [class.open]=\"mobileMenuOpen()\" \n           (click)=\"closeMobileMenu()\"\n           *appResponsiveTo=\"'tablet'\">\n        <nav class=\"mobile-nav\">\n          <ul>\n            <li [routerLink]=\"['/']\" (click)=\"closeMobileMenu()\" [class.active]=\"isActiveRoute('/')\">\n              <span class=\"nav-icon\">🏠</span>\n              <span class=\"nav-text\">Home</span>\n            </li>\n            <li [routerLink]=\"['/collections']\" (click)=\"closeMobileMenu()\" [class.active]=\"isActiveRoute('/collections')\">\n              <span class=\"nav-icon\">🎨</span>\n              <span class=\"nav-text\">Gallery</span>\n            </li>\n            <li [routerLink]=\"['/news']\" (click)=\"closeMobileMenu()\" [class.active]=\"isActiveRoute('/news')\">\n              <span class=\"nav-icon\">📰</span>\n              <span class=\"nav-text\">News</span>\n            </li>\n            <li [routerLink]=\"['/socials']\" (click)=\"closeMobileMenu()\" [class.active]=\"isActiveRoute('/socials')\">\n              <span class=\"nav-icon\">🌐</span>\n              <span class=\"nav-text\">Socials</span>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </header>\n  `,\n  styleUrls: ['../../../pages/collections-page/collection-header-global.scss'],\n  styles: [`\n    // Basic Header Styles - detailed styling in collection-header-global.scss\n    .site-header {\n      width: 100%;\n      height: 90px;\n      position: fixed;\n      top: 0;\n      left: 0;\n      z-index: 1000;\n      background-color: rgba(17, 17, 17, 0.95);\n      backdrop-filter: blur(15px);\n      border-bottom: 1px solid rgba(0, 229, 255, 0.3);\n\n      .header-container {\n        width: 100%;\n        height: 100%;\n        margin: 0;\n        padding: 0;\n        display: flex;\n        align-items: center;\n        justify-content: flex-start;\n      }\n    }\n\n    // Logo Styles\n    .logo-container {\n      display: flex;\n      align-items: center;\n      height: 100%;\n      padding-left: 50px;\n      \n      .logo-link {\n        display: flex;\n        align-items: center;\n        flex-direction: column;\n        justify-content: center;\n        text-decoration: none;\n        height: 100%;\n        cursor: pointer;\n      }\n      \n      .logo-image {\n        height: 55px;\n        width: auto;\n        object-fit: contain;\n        max-width: 280px;\n        display: block;\n      }\n    }\n\n    // Navigation Styles\n    .site-nav {\n      display: flex;\n      align-items: center;\n      height: 100%;\n      gap: 50px;\n      margin-left: auto;\n      padding-right: 50px;\n      \n      .nav-section {\n        height: 100%;\n        \n        ul {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n          height: 100%;\n          display: flex;\n          align-items: center;\n          gap: 5px;\n        }\n        \n        li {\n          height: 100%;\n          padding: 0 20px;\n          display: flex;\n          align-items: center;\n          cursor: pointer;\n          position: relative;\n          transition: all 0.3s ease;\n          color: #e0f7ff;\n          flex-direction: column;\n          justify-content: center;\n          \n          &:hover {\n            background-color: rgba(255, 255, 255, 0.1);\n          }\n          \n          &.active {\n            background-color: rgba(255, 255, 255, 0.2);\n            font-weight: 500;\n          }\n      \n          .page-name {\n            font-size: 1rem;\n            font-weight: 500;\n          }\n          \n          .page-description {\n            font-size: 0.7rem;\n            opacity: 0.8;\n          }\n        }\n      }\n    }\n\n    // Mobile Menu Toggle Button\n    .mobile-menu-toggle {\n      background: none;\n      border: none;\n      cursor: pointer;\n      padding: 8px;\n      margin-right: 20px;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n      align-items: center;\n      gap: 4px;\n      z-index: 1001;\n      \n      .hamburger-line {\n        width: 24px;\n        height: 3px;\n        background-color: #e0f7ff;\n        transition: all 0.3s ease;\n        border-radius: 2px;\n      }\n      \n      &.active .hamburger-line:nth-child(1) {\n        transform: rotate(45deg) translate(5px, 5px);\n      }\n      \n      &.active .hamburger-line:nth-child(2) {\n        opacity: 0;\n      }\n      \n      &.active .hamburger-line:nth-child(3) {\n        transform: rotate(-45deg) translate(7px, -6px);\n      }\n    }\n    \n    // Mobile Menu Overlay\n    .mobile-menu-overlay {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100vw;\n      height: 100vh;\n      background-color: rgba(0, 0, 0, 0.95);\n      backdrop-filter: blur(10px);\n      z-index: 1000;\n      opacity: 0;\n      visibility: hidden;\n      transition: all 0.3s ease;\n      \n      &.open {\n        opacity: 1;\n        visibility: visible;\n      }\n      \n      .mobile-nav {\n        position: absolute;\n        top: 50%;\n        left: 50%;\n        transform: translate(-50%, -50%);\n        \n        ul {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n          display: flex;\n          flex-direction: column;\n          gap: 2rem;\n          \n          li {\n            display: flex;\n            align-items: center;\n            gap: 1rem;\n            padding: 1rem 2rem;\n            color: #e0f7ff;\n            cursor: pointer;\n            border-radius: 8px;\n            transition: all 0.3s ease;\n            min-height: 60px; // Touch-friendly target size\n            \n            &:hover {\n              background-color: rgba(255, 255, 255, 0.1);\n            }\n            \n            &.active {\n              background-color: rgba(255, 255, 255, 0.2);\n              font-weight: 600;\n            }\n            \n            .nav-icon {\n              font-size: 1.5rem;\n              display: flex;\n              align-items: center;\n              justify-content: center;\n              width: 32px;\n              height: 32px;\n            }\n            \n            .nav-text {\n              font-size: 1.2rem;\n              font-weight: 500;\n            }\n          }\n        }\n      }\n    }\n    \n    // Tablet Navigation Compact Styles\n    .tablet-nav {\n      gap: 20px !important;\n      padding-right: 30px !important;\n      \n      .nav-section ul {\n        gap: 10px !important;\n        \n        li {\n          padding: 0 15px !important;\n          \n          .page-name {\n            font-size: 0.9rem !important;\n          }\n        }\n      }\n    }\n    \n    // Responsive Logo Adjustments\n    @media (max-width: 1023px) {\n      .logo-container {\n        padding-left: 20px;\n        \n        .logo-image {\n          height: 45px;\n          max-width: 220px;\n        }\n      }\n    }\n    \n    @media (max-width: 767px) {\n      .logo-container {\n        padding-left: 15px;\n        \n        .logo-image {\n          height: 40px;\n          max-width: 180px;\n        }\n      }\n      \n      .site-header {\n        height: 70px;\n      }\n    }\n    \n    // Safe area support for devices with notches\n    @supports (padding-top: env(safe-area-inset-top)) {\n      .site-header {\n        padding-top: env(safe-area-inset-top);\n        height: calc(90px + env(safe-area-inset-top));\n        \n        @media (max-width: 767px) {\n          height: calc(70px + env(safe-area-inset-top));\n        }\n      }\n      \n      .mobile-menu-overlay {\n        padding-top: env(safe-area-inset-top);\n      }\n    }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SiteHeaderComponent implements OnInit {\n  \n  // Mobile menu state\n  public readonly mobileMenuOpen = signal(false);\n  \n  // Responsive service integration\n  public readonly isMobile = this.responsiveService.isMobile;\n  public readonly isTablet = this.responsiveService.isTablet;\n  public readonly isDesktop = this.responsiveService.isDesktop;\n  public readonly isTouchDevice = this.responsiveService.isTouchDevice;\n\n  constructor(\n    private router: Router,\n    private responsiveService: ResponsiveService\n  ) {}\n\n  ngOnInit(): void {}\n\n  /**\n   * Check if the given route is active\n   * 【✓】\n   */\n  isActiveRoute(route: string): boolean {\n    return this.router.url.includes(route);\n  }\n  \n  /**\n   * Toggle mobile menu visibility\n   * 【✓】\n   */\n  toggleMobileMenu(): void {\n    this.mobileMenuOpen.update(open => !open);\n    \n    // Prevent body scrolling when menu is open\n    if (this.mobileMenuOpen()) {\n      document.body.style.overflow = 'hidden';\n    } else {\n      document.body.style.overflow = '';\n    }\n  }\n  \n  /**\n   * Close mobile menu\n   * 【✓】\n   */\n  closeMobileMenu(): void {\n    this.mobileMenuOpen.set(false);\n    document.body.style.overflow = '';\n  }\n} "],"mappings":"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","names":["DeviceType"],"x_google_ignoreList":[0,1,2,3]}