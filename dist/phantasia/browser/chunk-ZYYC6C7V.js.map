{
  "version": 3,
  "sources": ["src/app/shared/components/squares-animation/squares-animation.component.ts"],
  "sourcesContent": ["import { Component, OnInit, OnDestroy, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Defines position and animation properties for square elements\n * Controls appearance and space-like movement of square symbols\n */\ninterface SquarePosition {\n  x: number;\n  y: number;\n  scale: number;\n  delay: number;\n  opacity: number;\n  moveX: number;\n  moveY: number;\n  rotationOffset: number;\n  clockwise: boolean;\n  size: number;\n  speedMultiplier: number;\n}\n\n/**\n * Creates an animated background with space-like moving squares\n * Inspired by the Now Loading component's rune animation system and original triangles component\n * Features dual-layer design: outer squares (grey) and inner squares (white) with borders\n * Provides dynamic visual effects with random movement patterns\n */\n@Component({\n  selector: 'app-squares-animation',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    <div class=\"squares-container\" #squareContainer>\n      <div\n        *ngFor=\"let square of squares; trackBy: trackBySquareId\"\n        class=\"square\"\n        [class.clockwise]=\"square.clockwise\"\n        [class.counter-clockwise]=\"!square.clockwise\"\n        [style.left]=\"square.x + 'vw'\"\n        [style.top]=\"square.y + 'vh'\"\n        [style.--move-x]=\"square.moveX + 'px'\"\n        [style.--move-y]=\"square.moveY + 'px'\"\n        [style.--scale]=\"square.scale\"\n        [style.--base-opacity]=\"square.opacity\"\n        [style.--rotation-offset]=\"square.rotationOffset\"\n        [style.--delay]=\"square.delay\"\n        [style.--size]=\"square.size + 'px'\"\n        [style.--speed]=\"square.speedMultiplier\"\n      >\n        <div class=\"square-outer\"></div>\n        <div class=\"square-inner\"></div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .squares-container {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100vw;\n      height: 100vh;\n      pointer-events: none;\n      z-index: 0;\n      overflow: visible;\n      will-change: transform;\n      backface-visibility: hidden;\n      perspective: 1000px;\n    }\n\n    .square {\n      position: absolute;\n      width: var(--size);\n      height: var(--size);\n      transform-origin: center center;\n      transform: translate(0, 0) scale(var(--scale)) rotate(calc(var(--rotation-offset) * 1deg));\n      opacity: var(--base-opacity);\n      will-change: transform, opacity;\n      animation: none;\n    }\n\n    .square.clockwise {\n      animation: square-move-clockwise calc(8s / var(--speed)) infinite linear;\n      animation-delay: calc(var(--delay) * -1s);\n    }\n\n    .square.counter-clockwise {\n      animation: square-move-counterclockwise calc(8s / var(--speed)) infinite linear;\n      animation-delay: calc(var(--delay) * -1s);\n    }\n\n    .square-outer {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      background: linear-gradient(135deg, \n        rgba(248, 249, 250, 0.85) 0%, \n        rgba(255, 255, 255, 0.95) 100%\n      );\n      border-radius: 2px;\n      transform: translateZ(0);\n      backface-visibility: hidden;\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n      z-index: 1;\n      will-change: transform;\n    }\n\n    .square-inner {\n      position: absolute;\n      width: calc(100% - 6px);\n      height: calc(100% - 6px);\n      top: 3px;\n      left: 3px;\n      background: linear-gradient(135deg, \n        rgba(255, 255, 255, 0.95) 0%, \n        rgba(240, 240, 240, 0.98) 100%\n      );\n      border-radius: 1px;\n      transform: translateZ(0);\n      backface-visibility: hidden;\n      box-shadow: \n        0 0 0 2px rgba(255, 255, 255, 0.8), \n        0 0 0 3px rgba(0, 0, 0, 0.6),\n        inset 0 1px 2px rgba(0, 0, 0, 0.1);\n      z-index: 2;\n      will-change: transform;\n      position: relative;\n    }\n\n    .square-inner::before {\n      content: '';\n      position: absolute;\n      width: 100%;\n      height: 100%;\n      background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.6));\n      mix-blend-mode: screen;\n      animation: sparkle calc(4s * var(--speed)) infinite linear;\n      border-radius: 1px;\n    }\n\n    .square-inner::after {\n      content: '';\n      position: absolute;\n      width: 140%;\n      height: 140%;\n      top: -20%;\n      left: -20%;\n      background: radial-gradient(circle at center,\n        rgba(120, 200, 255, 0.15) 0%,\n        rgba(70, 150, 255, 0.1) 30%,\n        transparent 70%\n      );\n      mix-blend-mode: screen;\n      opacity: 0.5;\n      border-radius: 50%;\n    }\n\n    @keyframes square-move-clockwise {\n      0% {\n        transform: translate(0, 0) scale(var(--scale)) rotate(calc(var(--rotation-offset) * 1deg));\n      }\n      25% {\n        transform: translate(var(--move-x), var(--move-y)) scale(var(--scale)) rotate(calc((90 + var(--rotation-offset)) * 1deg));\n      }\n      50% {\n        transform: translate(0, var(--move-y)) scale(var(--scale)) rotate(calc((180 + var(--rotation-offset)) * 1deg));\n      }\n      75% {\n        transform: translate(calc(var(--move-x) * -1), 0) scale(var(--scale)) rotate(calc((270 + var(--rotation-offset)) * 1deg));\n      }\n      100% {\n        transform: translate(0, 0) scale(var(--scale)) rotate(calc((360 + var(--rotation-offset)) * 1deg));\n      }\n    }\n\n    @keyframes square-move-counterclockwise {\n      0% {\n        transform: translate(0, 0) scale(var(--scale)) rotate(calc(var(--rotation-offset) * 1deg));\n      }\n      25% {\n        transform: translate(var(--move-x), var(--move-y)) scale(var(--scale)) rotate(calc((var(--rotation-offset) - 90) * 1deg));\n      }\n      50% {\n        transform: translate(0, var(--move-y)) scale(var(--scale)) rotate(calc((var(--rotation-offset) - 180) * 1deg));\n      }\n      75% {\n        transform: translate(calc(var(--move-x) * -1), 0) scale(var(--scale)) rotate(calc((var(--rotation-offset) - 270) * 1deg));\n      }\n      100% {\n        transform: translate(0, 0) scale(var(--scale)) rotate(calc((var(--rotation-offset) - 360) * 1deg));\n      }\n    }\n\n    @keyframes sparkle {\n      0%, 100% {\n        opacity: 0.4;\n        transform: scale(1);\n      }\n      50% {\n        opacity: 0.8;\n        transform: scale(1.1);\n      }\n    }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SquaresAnimationComponent implements OnInit, OnDestroy {\n  @Input() count: number = 48; // Default count inspired by loading screen\n  @Input() enabled: boolean = true; // Allow disabling animations\n\n  squares: SquarePosition[] = [];\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  /**\n   * Initializes the squares animation component\n   * Creates randomized square positions with varied animations\n   */\n  ngOnInit(): void {\n    this.generateSquarePositions();\n  }\n\n  ngOnDestroy(): void {\n    // Clean up if needed\n  }\n\n  trackBySquareId(index: number, square: SquarePosition): number {\n    return index;\n  }\n\n  /**\n   * Creates random positions and properties for square elements\n   * Generates visually interesting squares with varied space-like behavior\n   * Inspired by the Now Loading component's rune system\n   */\n  private generateSquarePositions(): void {\n    this.squares = Array.from({ length: this.count }, () => ({\n      x: Math.random() * 100,\n      y: Math.random() * 100,\n      scale: 0.4 + Math.random() * 1.2,\n      delay: Math.random() * 8,\n      opacity: 0.2 + Math.random() * 0.4,\n      moveX: 10 + Math.random() * 30,\n      moveY: 10 + Math.random() * 30,\n      rotationOffset: Math.random() * 360,\n      clockwise: Math.random() < 0.5,\n      size: 8 + Math.random() * 16, // Square size between 8px and 24px\n      speedMultiplier: 0.5 + Math.random() * 1.5 // Varied animation speeds\n    }));\n  }\n\n  // Public methods for external control\n  public setSquareCount(count: number): void {\n    this.count = count;\n    this.generateSquarePositions();\n    this.cdr.markForCheck();\n  }\n\n  public regenerateSquares(): void {\n    this.generateSquarePositions();\n    this.cdr.markForCheck();\n  }\n}"],
  "mappings": "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",
  "names": []
}
