version: '3.8'

services:
  # Gel Database (latest geldata/gel)
  geldb:
    image: geldata/gel:latest
    container_name: prismatic-geldb-test
    restart: unless-stopped
    environment:
      GEL_SERVER_SECURITY: insecure_dev_mode
      GEL_SERVER_ADMIN_UI: enabled
      GEL_SERVER_HTTP_ENDPOINT_SECURITY: optional
      GEL_SERVER_TLS_CERT_MODE: generate_self_signed
      GEL_SERVER_DEFAULT_DATABASE: geldb
      GEL_SERVER_LISTEN_PORT: 5656
    ports:
      - "5657:5656"
      - "8889:8888"
    volumes:
      - ./data/geldb:/var/lib/gel/data
      - ./src/geldb/dbschema:/dbschema:ro
      - ./src/geldb/backend/gel.toml:/app/gel.toml:ro
      - ./data-export:/app/data-export:ro
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "gel", "query", "--host", "localhost", "--port", "5656", "--tls-security", "insecure", "SELECT 1"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s


  # Node.js Backend
  backend:
    build:
      context: .
      dockerfile: docker/backend/Dockerfile
    container_name: prismatic-backend-test
    restart: unless-stopped
    depends_on:
      geldb:
        condition: service_healthy
    environment:
      NODE_ENV: production
      PORT: 3001
      GEL_HOST: geldb
      GEL_PORT: 5656
      GEL_DATABASE: geldb
    ports:
      - "3002:3001"
    networks:
      - test-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

networks:
  test-network:
    driver: bridge