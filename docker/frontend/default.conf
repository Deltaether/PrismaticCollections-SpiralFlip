# Optimized server configuration for Angular Prismatic Collections

# Upstream backend for API proxying
upstream backend_api {
    server backend:3001 max_fails=3 fail_timeout=30s;
    keepalive 32;
}

# Cache zones
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=100m inactive=60m use_temp_path=off;

server {
    listen 80 default_server;
    server_name _;
    root /usr/share/nginx/html;
    index index.html;

    # Security and performance headers
    include /etc/nginx/conf.d/security-headers.conf;

    # Rate limiting
    limit_req zone=static burst=50 nodelay;
    limit_conn conn_limit_per_ip 20;

    # Disable access logs for static assets (performance)
    location ~* \.(css|js|map|ico|png|jpg|jpeg|gif|svg|woff|woff2|ttf|eot)$ {
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";

        # Gzip static assets
        gzip_static on;

        # CORS headers for fonts
        location ~* \.(woff|woff2|ttf|eot)$ {
            add_header Access-Control-Allow-Origin "*";
        }
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # API proxy with caching and optimizations
    location /api/ {
        limit_req zone=api burst=20 nodelay;

        # Proxy settings
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;

        # Caching for GET requests
        proxy_cache api_cache;
        proxy_cache_valid 200 302 10m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_background_update on;
        proxy_cache_lock on;

        # Cache headers
        add_header X-Cache-Status $upstream_cache_status;
    }

    # WebSocket support for development
    location /ws {
        proxy_pass http://backend_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_Set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Angular app routing - serve index.html for all routes
    location / {
        try_files $uri $uri/ /index.html;

        # Cache HTML files for short period
        location ~* \.html$ {
            expires 5m;
            add_header Cache-Control "no-cache, must-revalidate";
        }
    }

    # Security: deny access to dotfiles
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Security: deny access to common sensitive files
    location ~* \.(log|conf|ini|env)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

# Server for monitoring (internal use)
server {
    listen 8080;
    server_name localhost;
    access_log off;

    location /nginx_status {
        stub_status;
        allow 127.0.0.1;
        allow 172.0.0.0/8;
        deny all;
    }

    location /health {
        return 200 "nginx healthy\n";
        add_header Content-Type text/plain;
    }
}