// Variables
$primary-color: #6a11cb;
$secondary-color: #2575fc;
$text-color: #ffffff;
$dark-bg: #121212;
$light-bg: #242424;
$accent-color: #ff7e5f;
$transition-duration: 0.3s;
$content-max-width: 1200px;
$header-height: 89px; // Height of the site-header - consistent with content calculations

// Main layout container
.phantasia-layout {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  background: linear-gradient(135deg, $dark-bg, $light-bg);
  color: $text-color;
  font-family: 'Montserrat', sans-serif;

  // Critical fix: Ensure loading screen appears above site header
  // When child components have loading screens, suppress site header z-index
  &:has(app-loading-screen) app-site-header {
    z-index: 1 !important;
  }

  // Alternative approach: detect loading state via CSS selectors
  app-loading-screen ~ * app-site-header,
  app-loading-screen + * app-site-header {
    z-index: 1 !important;
  }

  // Fallback: Global loading screen detection
  :global(.loader-container.visible) ~ * & app-site-header {
    z-index: 1 !important;
  }
}

// The old header styles are no longer needed since we're using site-header component
// Commenting out for reference
/*
.phantasia-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 1rem 2rem;
  background: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(10px);
  position: sticky;
  top: 0;
  z-index: 100;
  box-shadow: 0 2px 20px rgba(0, 0, 0, 0.3);
  
  .logo-container {
    flex: 0 0 auto;
    
    .logo {
      height: 40px;
      transition: transform $transition-duration ease;
      
      &:hover {
        transform: scale(1.05);
      }
    }
  }
  
  .navigation {
    .nav-items {
      display: flex;
      list-style: none;
      margin: 0;
      padding: 0;
      
      .nav-item {
        margin: 0 1rem;
        
        a {
          color: $text-color;
          text-decoration: none;
          font-weight: 500;
          padding: 0.5rem 0;
          position: relative;
          transition: color $transition-duration ease;
          
          &:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background: linear-gradient(90deg, $primary-color, $secondary-color);
            transition: width $transition-duration ease;
          }
          
          &:hover, &.active {
            color: $accent-color;
            
            &:after {
              width: 100%;
            }
          }
        }
      }
    }
  }
  
  .menu-toggle {
    display: none;
    flex-direction: column;
    cursor: pointer;
    
    .bar {
      width: 25px;
      height: 3px;
      background-color: $text-color;
      margin: 3px 0;
      transition: $transition-duration ease;
    }
  }
}
*/

// Main content area - updated with top padding for fixed header
.phantasia-content {
  flex: 1;
  margin: 0;
  width: 100%;
  padding: 0;
  padding-top: 0; // Remove padding as phantasia page handles its own spacing
  
  // FIXED: Remove margin-top as phantasia2 component handles its own positioning
  // The phantasia-album-page class manages the full viewport layout
  margin-top: 0;
  
  // Add padding-right equivalent to scrollbar width (automatically calculated)
}

// Footer styles
.phantasia-footer {
  background: rgba(0, 0, 0, 0.8);
  padding: 3rem 2rem;
  
  .footer-content {
    max-width: $content-max-width;
    margin: 0 auto;
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    
    .footer-logo {
      flex: 0 0 100%;
      margin-bottom: 2rem;
      text-align: center;
      
      img {
        width: clamp(8rem, 12vw + 2rem, 16rem) !important; // Intelligent responsive scaling
        max-width: none !important; // Let clamp handle the constraints
        height: auto !important; // Maintain aspect ratio
        filter: brightness(0) invert(1) !important; // White logo on dark footer
        min-width: 8rem !important; // Ensure minimum readability
        object-fit: contain !important; // Ensure proper scaling
      }
    }
    
    .footer-links {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 3rem;
      
      .link-group {
        h3 {
          font-size: 1.2rem;
          margin-bottom: 1rem;
          font-weight: 600;
          background: linear-gradient(90deg, $primary-color, $secondary-color);
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
        }
        
        ul {
          list-style: none;
          padding: 0;
          margin: 0;
          
          li {
            margin-bottom: 0.5rem;
            
            a {
              color: $text-color;
              text-decoration: none;
              transition: color $transition-duration ease;
              
              &:hover {
                color: $accent-color;
              }
            }
          }
        }
      }
    }
    
    .copyright {
      flex: 0 0 100%;
      text-align: center;
      margin-top: 3rem;
      font-size: 0.9rem;
      opacity: 0.7;
    }
  }
}

// Media queries for responsive design
@media (max-width: 768px) {
  .phantasia-header {
    padding: 1rem;
    
    .navigation {
      display: none;
    }
    
    .menu-toggle {
      display: flex;
    }
  }
  
  .phantasia-content {
    padding: 1rem;
  }
}

/**
 * Animation classes for scroll effects
 * 【✓】
 */
.fade-in {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.5s ease, transform 0.5s ease;
  
  &.visible {
    opacity: 1;
    transform: translateY(0);
  }
}

.slide-in-left {
  opacity: 0;
  transform: translateX(-50px);
  transition: opacity 0.5s ease, transform 0.5s ease;
  
  &.visible {
    opacity: 1;
    transform: translateX(0);
  }
}

.slide-in-right {
  opacity: 0;
  transform: translateX(50px);
  transition: opacity 0.5s ease, transform 0.5s ease;
  
  &.visible {
    opacity: 1;
    transform: translateX(0);
  }
}

/**
 * Parallax effect classes
 * 【✓】
 */
.parallax-element {
  will-change: transform;
  transition: transform 0.1s ease-out;
} 